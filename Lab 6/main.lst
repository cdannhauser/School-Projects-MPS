                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW64)
                                      4 ; This file was generated Mon Dec 05 15:32:20 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module main
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _printf
                                     13 	.globl _P7_7
                                     14 	.globl _P7_6
                                     15 	.globl _P7_5
                                     16 	.globl _P7_4
                                     17 	.globl _P7_3
                                     18 	.globl _P7_2
                                     19 	.globl _P7_1
                                     20 	.globl _P7_0
                                     21 	.globl _SPIF
                                     22 	.globl _WCOL
                                     23 	.globl _MODF
                                     24 	.globl _RXOVRN
                                     25 	.globl _NSSMD1
                                     26 	.globl _NSSMD0
                                     27 	.globl _TXBMT
                                     28 	.globl _SPIEN
                                     29 	.globl _P6_7
                                     30 	.globl _P6_6
                                     31 	.globl _P6_5
                                     32 	.globl _P6_4
                                     33 	.globl _P6_3
                                     34 	.globl _P6_2
                                     35 	.globl _P6_1
                                     36 	.globl _P6_0
                                     37 	.globl _AD2EN
                                     38 	.globl _AD2TM
                                     39 	.globl _AD2INT
                                     40 	.globl _AD2BUSY
                                     41 	.globl _AD2CM2
                                     42 	.globl _AD2CM1
                                     43 	.globl _AD2CM0
                                     44 	.globl _AD2WINT
                                     45 	.globl _AD0EN
                                     46 	.globl _AD0TM
                                     47 	.globl _AD0INT
                                     48 	.globl _AD0BUSY
                                     49 	.globl _AD0CM1
                                     50 	.globl _AD0CM0
                                     51 	.globl _AD0WINT
                                     52 	.globl _AD0LJST
                                     53 	.globl _P5_7
                                     54 	.globl _P5_6
                                     55 	.globl _P5_5
                                     56 	.globl _P5_4
                                     57 	.globl _P5_3
                                     58 	.globl _P5_2
                                     59 	.globl _P5_1
                                     60 	.globl _P5_0
                                     61 	.globl _CF
                                     62 	.globl _CR
                                     63 	.globl _CCF5
                                     64 	.globl _CCF4
                                     65 	.globl _CCF3
                                     66 	.globl _CCF2
                                     67 	.globl _CCF1
                                     68 	.globl _CCF0
                                     69 	.globl _CY
                                     70 	.globl _AC
                                     71 	.globl _F0
                                     72 	.globl _RS1
                                     73 	.globl _RS0
                                     74 	.globl _OV
                                     75 	.globl _F1
                                     76 	.globl _P
                                     77 	.globl _P4_7
                                     78 	.globl _P4_6
                                     79 	.globl _P4_5
                                     80 	.globl _P4_4
                                     81 	.globl _P4_3
                                     82 	.globl _P4_2
                                     83 	.globl _P4_1
                                     84 	.globl _P4_0
                                     85 	.globl _TF4
                                     86 	.globl _EXF4
                                     87 	.globl _EXEN4
                                     88 	.globl _TR4
                                     89 	.globl _CT4
                                     90 	.globl _CPRL4
                                     91 	.globl _TF3
                                     92 	.globl _EXF3
                                     93 	.globl _EXEN3
                                     94 	.globl _TR3
                                     95 	.globl _CT3
                                     96 	.globl _CPRL3
                                     97 	.globl _TF2
                                     98 	.globl _EXF2
                                     99 	.globl _EXEN2
                                    100 	.globl _TR2
                                    101 	.globl _CT2
                                    102 	.globl _CPRL2
                                    103 	.globl _MAC0HO
                                    104 	.globl _MAC0Z
                                    105 	.globl _MAC0SO
                                    106 	.globl _MAC0N
                                    107 	.globl _BUSY
                                    108 	.globl _ENSMB
                                    109 	.globl _STA
                                    110 	.globl _STO
                                    111 	.globl _SI
                                    112 	.globl _AA
                                    113 	.globl _SMBFTE
                                    114 	.globl _SMBTOE
                                    115 	.globl _PT2
                                    116 	.globl _PS
                                    117 	.globl _PS0
                                    118 	.globl _PT1
                                    119 	.globl _PX1
                                    120 	.globl _PT0
                                    121 	.globl _PX0
                                    122 	.globl _P3_7
                                    123 	.globl _P3_6
                                    124 	.globl _P3_5
                                    125 	.globl _P3_4
                                    126 	.globl _P3_3
                                    127 	.globl _P3_2
                                    128 	.globl _P3_1
                                    129 	.globl _P3_0
                                    130 	.globl _EA
                                    131 	.globl _ET2
                                    132 	.globl _ES
                                    133 	.globl _ES0
                                    134 	.globl _ET1
                                    135 	.globl _EX1
                                    136 	.globl _ET0
                                    137 	.globl _EX0
                                    138 	.globl _P2_7
                                    139 	.globl _P2_6
                                    140 	.globl _P2_5
                                    141 	.globl _P2_4
                                    142 	.globl _P2_3
                                    143 	.globl _P2_2
                                    144 	.globl _P2_1
                                    145 	.globl _P2_0
                                    146 	.globl _S1MODE
                                    147 	.globl _MCE1
                                    148 	.globl _REN1
                                    149 	.globl _TB81
                                    150 	.globl _RB81
                                    151 	.globl _TI1
                                    152 	.globl _RI1
                                    153 	.globl _SM00
                                    154 	.globl _SM10
                                    155 	.globl _SM20
                                    156 	.globl _REN
                                    157 	.globl _REN0
                                    158 	.globl _TB80
                                    159 	.globl _RB80
                                    160 	.globl _TI
                                    161 	.globl _TI0
                                    162 	.globl _RI
                                    163 	.globl _RI0
                                    164 	.globl _P1_7
                                    165 	.globl _P1_6
                                    166 	.globl _P1_5
                                    167 	.globl _P1_4
                                    168 	.globl _P1_3
                                    169 	.globl _P1_2
                                    170 	.globl _P1_1
                                    171 	.globl _P1_0
                                    172 	.globl _FLHBUSY
                                    173 	.globl _CP1EN
                                    174 	.globl _CP1OUT
                                    175 	.globl _CP1RIF
                                    176 	.globl _CP1FIF
                                    177 	.globl _CP1HYP1
                                    178 	.globl _CP1HYP0
                                    179 	.globl _CP1HYN1
                                    180 	.globl _CP1HYN0
                                    181 	.globl _CP0EN
                                    182 	.globl _CP0OUT
                                    183 	.globl _CP0RIF
                                    184 	.globl _CP0FIF
                                    185 	.globl _CP0HYP1
                                    186 	.globl _CP0HYP0
                                    187 	.globl _CP0HYN1
                                    188 	.globl _CP0HYN0
                                    189 	.globl _TF1
                                    190 	.globl _TR1
                                    191 	.globl _TF0
                                    192 	.globl _TR0
                                    193 	.globl _IE1
                                    194 	.globl _IT1
                                    195 	.globl _IE0
                                    196 	.globl _IT0
                                    197 	.globl _P0_7
                                    198 	.globl _P0_6
                                    199 	.globl _P0_5
                                    200 	.globl _P0_4
                                    201 	.globl _P0_3
                                    202 	.globl _P0_2
                                    203 	.globl _P0_1
                                    204 	.globl _P0_0
                                    205 	.globl _MAC0RND
                                    206 	.globl _MAC0ACC
                                    207 	.globl _MAC0A
                                    208 	.globl _RCAP4
                                    209 	.globl _TMR4
                                    210 	.globl _DAC1
                                    211 	.globl _RCAP3
                                    212 	.globl _TMR3
                                    213 	.globl _PCA0CP5
                                    214 	.globl _PCA0CP4
                                    215 	.globl _PCA0CP3
                                    216 	.globl _PCA0CP2
                                    217 	.globl _PCA0CP1
                                    218 	.globl _PCA0CP0
                                    219 	.globl _PCA0
                                    220 	.globl _DAC0
                                    221 	.globl _ADC0LT
                                    222 	.globl _ADC0GT
                                    223 	.globl _ADC0
                                    224 	.globl _RCAP2
                                    225 	.globl _TMR2
                                    226 	.globl _TMR1
                                    227 	.globl _TMR0
                                    228 	.globl _P7
                                    229 	.globl _P6
                                    230 	.globl _XBR2
                                    231 	.globl _XBR1
                                    232 	.globl _XBR0
                                    233 	.globl _P5
                                    234 	.globl _P4
                                    235 	.globl _FLACL
                                    236 	.globl _P1MDIN
                                    237 	.globl _P3MDOUT
                                    238 	.globl _P2MDOUT
                                    239 	.globl _P1MDOUT
                                    240 	.globl _P0MDOUT
                                    241 	.globl _CCH0LC
                                    242 	.globl _CCH0TN
                                    243 	.globl _CCH0CN
                                    244 	.globl _P7MDOUT
                                    245 	.globl _P6MDOUT
                                    246 	.globl _P5MDOUT
                                    247 	.globl _P4MDOUT
                                    248 	.globl _CCH0MA
                                    249 	.globl _CLKSEL
                                    250 	.globl _SFRPGCN
                                    251 	.globl _PLL0FLT
                                    252 	.globl _PLL0MUL
                                    253 	.globl _PLL0DIV
                                    254 	.globl _OSCXCN
                                    255 	.globl _OSCICL
                                    256 	.globl _OSCICN
                                    257 	.globl _PLL0CN
                                    258 	.globl _FLSTAT
                                    259 	.globl _MAC0RNDH
                                    260 	.globl _MAC0RNDL
                                    261 	.globl _MAC0CF
                                    262 	.globl _MAC0AH
                                    263 	.globl _MAC0AL
                                    264 	.globl _MAC0STA
                                    265 	.globl _MAC0OVR
                                    266 	.globl _MAC0ACC3
                                    267 	.globl _MAC0ACC2
                                    268 	.globl _MAC0ACC1
                                    269 	.globl _MAC0ACC0
                                    270 	.globl _MAC0BH
                                    271 	.globl _MAC0BL
                                    272 	.globl _ADC2CN
                                    273 	.globl _TMR4H
                                    274 	.globl _TMR4L
                                    275 	.globl _RCAP4H
                                    276 	.globl _RCAP4L
                                    277 	.globl _TMR4CF
                                    278 	.globl _TMR4CN
                                    279 	.globl _ADC2LT
                                    280 	.globl _ADC2GT
                                    281 	.globl _ADC2
                                    282 	.globl _ADC2CF
                                    283 	.globl _AMX2SL
                                    284 	.globl _AMX2CF
                                    285 	.globl _CPT1MD
                                    286 	.globl _CPT1CN
                                    287 	.globl _DAC1CN
                                    288 	.globl _DAC1H
                                    289 	.globl _DAC1L
                                    290 	.globl _TMR3H
                                    291 	.globl _TMR3L
                                    292 	.globl _RCAP3H
                                    293 	.globl _RCAP3L
                                    294 	.globl _TMR3CF
                                    295 	.globl _TMR3CN
                                    296 	.globl _SBUF1
                                    297 	.globl _SCON1
                                    298 	.globl _CPT0MD
                                    299 	.globl _CPT0CN
                                    300 	.globl _PCA0CPH1
                                    301 	.globl _PCA0CPL1
                                    302 	.globl _PCA0CPH0
                                    303 	.globl _PCA0CPL0
                                    304 	.globl _PCA0H
                                    305 	.globl _PCA0L
                                    306 	.globl _SPI0CN
                                    307 	.globl _RSTSRC
                                    308 	.globl _PCA0CPH4
                                    309 	.globl _PCA0CPL4
                                    310 	.globl _PCA0CPH3
                                    311 	.globl _PCA0CPL3
                                    312 	.globl _PCA0CPH2
                                    313 	.globl _PCA0CPL2
                                    314 	.globl _ADC0CN
                                    315 	.globl _PCA0CPH5
                                    316 	.globl _PCA0CPL5
                                    317 	.globl _PCA0CPM5
                                    318 	.globl _PCA0CPM4
                                    319 	.globl _PCA0CPM3
                                    320 	.globl _PCA0CPM2
                                    321 	.globl _PCA0CPM1
                                    322 	.globl _PCA0CPM0
                                    323 	.globl _PCA0MD
                                    324 	.globl _PCA0CN
                                    325 	.globl _DAC0CN
                                    326 	.globl _DAC0H
                                    327 	.globl _DAC0L
                                    328 	.globl _REF0CN
                                    329 	.globl _SMB0CR
                                    330 	.globl _TH2
                                    331 	.globl _TMR2H
                                    332 	.globl _TL2
                                    333 	.globl _TMR2L
                                    334 	.globl _RCAP2H
                                    335 	.globl _RCAP2L
                                    336 	.globl _TMR2CF
                                    337 	.globl _TMR2CN
                                    338 	.globl _ADC0LTH
                                    339 	.globl _ADC0LTL
                                    340 	.globl _ADC0GTH
                                    341 	.globl _ADC0GTL
                                    342 	.globl _SMB0ADR
                                    343 	.globl _SMB0DAT
                                    344 	.globl _SMB0STA
                                    345 	.globl _SMB0CN
                                    346 	.globl _ADC0H
                                    347 	.globl _ADC0L
                                    348 	.globl _ADC0CF
                                    349 	.globl _AMX0SL
                                    350 	.globl _AMX0CF
                                    351 	.globl _SADEN0
                                    352 	.globl _FLSCL
                                    353 	.globl _SADDR0
                                    354 	.globl _EMI0CF
                                    355 	.globl __XPAGE
                                    356 	.globl _EMI0CN
                                    357 	.globl _EMI0TC
                                    358 	.globl _SPI0CKR
                                    359 	.globl _SPI0DAT
                                    360 	.globl _SPI0CFG
                                    361 	.globl _SBUF
                                    362 	.globl _SBUF0
                                    363 	.globl _SCON
                                    364 	.globl _SCON0
                                    365 	.globl _SSTA0
                                    366 	.globl _PSCTL
                                    367 	.globl _CKCON
                                    368 	.globl _TH1
                                    369 	.globl _TH0
                                    370 	.globl _TL1
                                    371 	.globl _TL0
                                    372 	.globl _TMOD
                                    373 	.globl _TCON
                                    374 	.globl _WDTCN
                                    375 	.globl _EIP2
                                    376 	.globl _EIP1
                                    377 	.globl _B
                                    378 	.globl _EIE2
                                    379 	.globl _EIE1
                                    380 	.globl _ACC
                                    381 	.globl _PSW
                                    382 	.globl _IP
                                    383 	.globl _PSBANK
                                    384 	.globl _P3
                                    385 	.globl _IE
                                    386 	.globl _P2
                                    387 	.globl _P1
                                    388 	.globl _PCON
                                    389 	.globl _SFRLAST
                                    390 	.globl _SFRNEXT
                                    391 	.globl _SFRPAGE
                                    392 	.globl _DPH
                                    393 	.globl _DPL
                                    394 	.globl _SP
                                    395 	.globl _P0
                                    396 	.globl _quotes
                                    397 	.globl _guitar
                                    398 	.globl _SW2press
                                    399 	.globl _seed
                                    400 	.globl _days
                                    401 	.globl _random
                                    402 	.globl _choice
                                    403 	.globl _startTime
                                    404 	.globl _debounceCount
                                    405 	.globl _TR0_count
                                    406 	.globl _buttonPressed
                                    407 	.globl _putchar
                                    408 	.globl _getchar
                                    409 	.globl _main
                                    410 	.globl _loop
                                    411 	.globl _rand
                                    412 	.globl _rock
                                    413 	.globl _printFeels
                                    414 	.globl _External_ISR
                                    415 	.globl _TR0_ISR
                                    416 	.globl _PORT_INIT
                                    417 	.globl _SYSCLK_INIT
                                    418 	.globl _UART0_INIT
                                    419 ;--------------------------------------------------------
                                    420 ; special function registers
                                    421 ;--------------------------------------------------------
                                    422 	.area RSEG    (ABS,DATA)
      000000                        423 	.org 0x0000
                           000080   424 G$P0$0$0 == 0x0080
                           000080   425 _P0	=	0x0080
                           000081   426 G$SP$0$0 == 0x0081
                           000081   427 _SP	=	0x0081
                           000082   428 G$DPL$0$0 == 0x0082
                           000082   429 _DPL	=	0x0082
                           000083   430 G$DPH$0$0 == 0x0083
                           000083   431 _DPH	=	0x0083
                           000084   432 G$SFRPAGE$0$0 == 0x0084
                           000084   433 _SFRPAGE	=	0x0084
                           000085   434 G$SFRNEXT$0$0 == 0x0085
                           000085   435 _SFRNEXT	=	0x0085
                           000086   436 G$SFRLAST$0$0 == 0x0086
                           000086   437 _SFRLAST	=	0x0086
                           000087   438 G$PCON$0$0 == 0x0087
                           000087   439 _PCON	=	0x0087
                           000090   440 G$P1$0$0 == 0x0090
                           000090   441 _P1	=	0x0090
                           0000A0   442 G$P2$0$0 == 0x00a0
                           0000A0   443 _P2	=	0x00a0
                           0000A8   444 G$IE$0$0 == 0x00a8
                           0000A8   445 _IE	=	0x00a8
                           0000B0   446 G$P3$0$0 == 0x00b0
                           0000B0   447 _P3	=	0x00b0
                           0000B1   448 G$PSBANK$0$0 == 0x00b1
                           0000B1   449 _PSBANK	=	0x00b1
                           0000B8   450 G$IP$0$0 == 0x00b8
                           0000B8   451 _IP	=	0x00b8
                           0000D0   452 G$PSW$0$0 == 0x00d0
                           0000D0   453 _PSW	=	0x00d0
                           0000E0   454 G$ACC$0$0 == 0x00e0
                           0000E0   455 _ACC	=	0x00e0
                           0000E6   456 G$EIE1$0$0 == 0x00e6
                           0000E6   457 _EIE1	=	0x00e6
                           0000E7   458 G$EIE2$0$0 == 0x00e7
                           0000E7   459 _EIE2	=	0x00e7
                           0000F0   460 G$B$0$0 == 0x00f0
                           0000F0   461 _B	=	0x00f0
                           0000F6   462 G$EIP1$0$0 == 0x00f6
                           0000F6   463 _EIP1	=	0x00f6
                           0000F7   464 G$EIP2$0$0 == 0x00f7
                           0000F7   465 _EIP2	=	0x00f7
                           0000FF   466 G$WDTCN$0$0 == 0x00ff
                           0000FF   467 _WDTCN	=	0x00ff
                           000088   468 G$TCON$0$0 == 0x0088
                           000088   469 _TCON	=	0x0088
                           000089   470 G$TMOD$0$0 == 0x0089
                           000089   471 _TMOD	=	0x0089
                           00008A   472 G$TL0$0$0 == 0x008a
                           00008A   473 _TL0	=	0x008a
                           00008B   474 G$TL1$0$0 == 0x008b
                           00008B   475 _TL1	=	0x008b
                           00008C   476 G$TH0$0$0 == 0x008c
                           00008C   477 _TH0	=	0x008c
                           00008D   478 G$TH1$0$0 == 0x008d
                           00008D   479 _TH1	=	0x008d
                           00008E   480 G$CKCON$0$0 == 0x008e
                           00008E   481 _CKCON	=	0x008e
                           00008F   482 G$PSCTL$0$0 == 0x008f
                           00008F   483 _PSCTL	=	0x008f
                           000091   484 G$SSTA0$0$0 == 0x0091
                           000091   485 _SSTA0	=	0x0091
                           000098   486 G$SCON0$0$0 == 0x0098
                           000098   487 _SCON0	=	0x0098
                           000098   488 G$SCON$0$0 == 0x0098
                           000098   489 _SCON	=	0x0098
                           000099   490 G$SBUF0$0$0 == 0x0099
                           000099   491 _SBUF0	=	0x0099
                           000099   492 G$SBUF$0$0 == 0x0099
                           000099   493 _SBUF	=	0x0099
                           00009A   494 G$SPI0CFG$0$0 == 0x009a
                           00009A   495 _SPI0CFG	=	0x009a
                           00009B   496 G$SPI0DAT$0$0 == 0x009b
                           00009B   497 _SPI0DAT	=	0x009b
                           00009D   498 G$SPI0CKR$0$0 == 0x009d
                           00009D   499 _SPI0CKR	=	0x009d
                           0000A1   500 G$EMI0TC$0$0 == 0x00a1
                           0000A1   501 _EMI0TC	=	0x00a1
                           0000A2   502 G$EMI0CN$0$0 == 0x00a2
                           0000A2   503 _EMI0CN	=	0x00a2
                           0000A2   504 G$_XPAGE$0$0 == 0x00a2
                           0000A2   505 __XPAGE	=	0x00a2
                           0000A3   506 G$EMI0CF$0$0 == 0x00a3
                           0000A3   507 _EMI0CF	=	0x00a3
                           0000A9   508 G$SADDR0$0$0 == 0x00a9
                           0000A9   509 _SADDR0	=	0x00a9
                           0000B7   510 G$FLSCL$0$0 == 0x00b7
                           0000B7   511 _FLSCL	=	0x00b7
                           0000B9   512 G$SADEN0$0$0 == 0x00b9
                           0000B9   513 _SADEN0	=	0x00b9
                           0000BA   514 G$AMX0CF$0$0 == 0x00ba
                           0000BA   515 _AMX0CF	=	0x00ba
                           0000BB   516 G$AMX0SL$0$0 == 0x00bb
                           0000BB   517 _AMX0SL	=	0x00bb
                           0000BC   518 G$ADC0CF$0$0 == 0x00bc
                           0000BC   519 _ADC0CF	=	0x00bc
                           0000BE   520 G$ADC0L$0$0 == 0x00be
                           0000BE   521 _ADC0L	=	0x00be
                           0000BF   522 G$ADC0H$0$0 == 0x00bf
                           0000BF   523 _ADC0H	=	0x00bf
                           0000C0   524 G$SMB0CN$0$0 == 0x00c0
                           0000C0   525 _SMB0CN	=	0x00c0
                           0000C1   526 G$SMB0STA$0$0 == 0x00c1
                           0000C1   527 _SMB0STA	=	0x00c1
                           0000C2   528 G$SMB0DAT$0$0 == 0x00c2
                           0000C2   529 _SMB0DAT	=	0x00c2
                           0000C3   530 G$SMB0ADR$0$0 == 0x00c3
                           0000C3   531 _SMB0ADR	=	0x00c3
                           0000C4   532 G$ADC0GTL$0$0 == 0x00c4
                           0000C4   533 _ADC0GTL	=	0x00c4
                           0000C5   534 G$ADC0GTH$0$0 == 0x00c5
                           0000C5   535 _ADC0GTH	=	0x00c5
                           0000C6   536 G$ADC0LTL$0$0 == 0x00c6
                           0000C6   537 _ADC0LTL	=	0x00c6
                           0000C7   538 G$ADC0LTH$0$0 == 0x00c7
                           0000C7   539 _ADC0LTH	=	0x00c7
                           0000C8   540 G$TMR2CN$0$0 == 0x00c8
                           0000C8   541 _TMR2CN	=	0x00c8
                           0000C9   542 G$TMR2CF$0$0 == 0x00c9
                           0000C9   543 _TMR2CF	=	0x00c9
                           0000CA   544 G$RCAP2L$0$0 == 0x00ca
                           0000CA   545 _RCAP2L	=	0x00ca
                           0000CB   546 G$RCAP2H$0$0 == 0x00cb
                           0000CB   547 _RCAP2H	=	0x00cb
                           0000CC   548 G$TMR2L$0$0 == 0x00cc
                           0000CC   549 _TMR2L	=	0x00cc
                           0000CC   550 G$TL2$0$0 == 0x00cc
                           0000CC   551 _TL2	=	0x00cc
                           0000CD   552 G$TMR2H$0$0 == 0x00cd
                           0000CD   553 _TMR2H	=	0x00cd
                           0000CD   554 G$TH2$0$0 == 0x00cd
                           0000CD   555 _TH2	=	0x00cd
                           0000CF   556 G$SMB0CR$0$0 == 0x00cf
                           0000CF   557 _SMB0CR	=	0x00cf
                           0000D1   558 G$REF0CN$0$0 == 0x00d1
                           0000D1   559 _REF0CN	=	0x00d1
                           0000D2   560 G$DAC0L$0$0 == 0x00d2
                           0000D2   561 _DAC0L	=	0x00d2
                           0000D3   562 G$DAC0H$0$0 == 0x00d3
                           0000D3   563 _DAC0H	=	0x00d3
                           0000D4   564 G$DAC0CN$0$0 == 0x00d4
                           0000D4   565 _DAC0CN	=	0x00d4
                           0000D8   566 G$PCA0CN$0$0 == 0x00d8
                           0000D8   567 _PCA0CN	=	0x00d8
                           0000D9   568 G$PCA0MD$0$0 == 0x00d9
                           0000D9   569 _PCA0MD	=	0x00d9
                           0000DA   570 G$PCA0CPM0$0$0 == 0x00da
                           0000DA   571 _PCA0CPM0	=	0x00da
                           0000DB   572 G$PCA0CPM1$0$0 == 0x00db
                           0000DB   573 _PCA0CPM1	=	0x00db
                           0000DC   574 G$PCA0CPM2$0$0 == 0x00dc
                           0000DC   575 _PCA0CPM2	=	0x00dc
                           0000DD   576 G$PCA0CPM3$0$0 == 0x00dd
                           0000DD   577 _PCA0CPM3	=	0x00dd
                           0000DE   578 G$PCA0CPM4$0$0 == 0x00de
                           0000DE   579 _PCA0CPM4	=	0x00de
                           0000DF   580 G$PCA0CPM5$0$0 == 0x00df
                           0000DF   581 _PCA0CPM5	=	0x00df
                           0000E1   582 G$PCA0CPL5$0$0 == 0x00e1
                           0000E1   583 _PCA0CPL5	=	0x00e1
                           0000E2   584 G$PCA0CPH5$0$0 == 0x00e2
                           0000E2   585 _PCA0CPH5	=	0x00e2
                           0000E8   586 G$ADC0CN$0$0 == 0x00e8
                           0000E8   587 _ADC0CN	=	0x00e8
                           0000E9   588 G$PCA0CPL2$0$0 == 0x00e9
                           0000E9   589 _PCA0CPL2	=	0x00e9
                           0000EA   590 G$PCA0CPH2$0$0 == 0x00ea
                           0000EA   591 _PCA0CPH2	=	0x00ea
                           0000EB   592 G$PCA0CPL3$0$0 == 0x00eb
                           0000EB   593 _PCA0CPL3	=	0x00eb
                           0000EC   594 G$PCA0CPH3$0$0 == 0x00ec
                           0000EC   595 _PCA0CPH3	=	0x00ec
                           0000ED   596 G$PCA0CPL4$0$0 == 0x00ed
                           0000ED   597 _PCA0CPL4	=	0x00ed
                           0000EE   598 G$PCA0CPH4$0$0 == 0x00ee
                           0000EE   599 _PCA0CPH4	=	0x00ee
                           0000EF   600 G$RSTSRC$0$0 == 0x00ef
                           0000EF   601 _RSTSRC	=	0x00ef
                           0000F8   602 G$SPI0CN$0$0 == 0x00f8
                           0000F8   603 _SPI0CN	=	0x00f8
                           0000F9   604 G$PCA0L$0$0 == 0x00f9
                           0000F9   605 _PCA0L	=	0x00f9
                           0000FA   606 G$PCA0H$0$0 == 0x00fa
                           0000FA   607 _PCA0H	=	0x00fa
                           0000FB   608 G$PCA0CPL0$0$0 == 0x00fb
                           0000FB   609 _PCA0CPL0	=	0x00fb
                           0000FC   610 G$PCA0CPH0$0$0 == 0x00fc
                           0000FC   611 _PCA0CPH0	=	0x00fc
                           0000FD   612 G$PCA0CPL1$0$0 == 0x00fd
                           0000FD   613 _PCA0CPL1	=	0x00fd
                           0000FE   614 G$PCA0CPH1$0$0 == 0x00fe
                           0000FE   615 _PCA0CPH1	=	0x00fe
                           000088   616 G$CPT0CN$0$0 == 0x0088
                           000088   617 _CPT0CN	=	0x0088
                           000089   618 G$CPT0MD$0$0 == 0x0089
                           000089   619 _CPT0MD	=	0x0089
                           000098   620 G$SCON1$0$0 == 0x0098
                           000098   621 _SCON1	=	0x0098
                           000099   622 G$SBUF1$0$0 == 0x0099
                           000099   623 _SBUF1	=	0x0099
                           0000C8   624 G$TMR3CN$0$0 == 0x00c8
                           0000C8   625 _TMR3CN	=	0x00c8
                           0000C9   626 G$TMR3CF$0$0 == 0x00c9
                           0000C9   627 _TMR3CF	=	0x00c9
                           0000CA   628 G$RCAP3L$0$0 == 0x00ca
                           0000CA   629 _RCAP3L	=	0x00ca
                           0000CB   630 G$RCAP3H$0$0 == 0x00cb
                           0000CB   631 _RCAP3H	=	0x00cb
                           0000CC   632 G$TMR3L$0$0 == 0x00cc
                           0000CC   633 _TMR3L	=	0x00cc
                           0000CD   634 G$TMR3H$0$0 == 0x00cd
                           0000CD   635 _TMR3H	=	0x00cd
                           0000D2   636 G$DAC1L$0$0 == 0x00d2
                           0000D2   637 _DAC1L	=	0x00d2
                           0000D3   638 G$DAC1H$0$0 == 0x00d3
                           0000D3   639 _DAC1H	=	0x00d3
                           0000D4   640 G$DAC1CN$0$0 == 0x00d4
                           0000D4   641 _DAC1CN	=	0x00d4
                           000088   642 G$CPT1CN$0$0 == 0x0088
                           000088   643 _CPT1CN	=	0x0088
                           000089   644 G$CPT1MD$0$0 == 0x0089
                           000089   645 _CPT1MD	=	0x0089
                           0000BA   646 G$AMX2CF$0$0 == 0x00ba
                           0000BA   647 _AMX2CF	=	0x00ba
                           0000BB   648 G$AMX2SL$0$0 == 0x00bb
                           0000BB   649 _AMX2SL	=	0x00bb
                           0000BC   650 G$ADC2CF$0$0 == 0x00bc
                           0000BC   651 _ADC2CF	=	0x00bc
                           0000BE   652 G$ADC2$0$0 == 0x00be
                           0000BE   653 _ADC2	=	0x00be
                           0000C4   654 G$ADC2GT$0$0 == 0x00c4
                           0000C4   655 _ADC2GT	=	0x00c4
                           0000C6   656 G$ADC2LT$0$0 == 0x00c6
                           0000C6   657 _ADC2LT	=	0x00c6
                           0000C8   658 G$TMR4CN$0$0 == 0x00c8
                           0000C8   659 _TMR4CN	=	0x00c8
                           0000C9   660 G$TMR4CF$0$0 == 0x00c9
                           0000C9   661 _TMR4CF	=	0x00c9
                           0000CA   662 G$RCAP4L$0$0 == 0x00ca
                           0000CA   663 _RCAP4L	=	0x00ca
                           0000CB   664 G$RCAP4H$0$0 == 0x00cb
                           0000CB   665 _RCAP4H	=	0x00cb
                           0000CC   666 G$TMR4L$0$0 == 0x00cc
                           0000CC   667 _TMR4L	=	0x00cc
                           0000CD   668 G$TMR4H$0$0 == 0x00cd
                           0000CD   669 _TMR4H	=	0x00cd
                           0000E8   670 G$ADC2CN$0$0 == 0x00e8
                           0000E8   671 _ADC2CN	=	0x00e8
                           000091   672 G$MAC0BL$0$0 == 0x0091
                           000091   673 _MAC0BL	=	0x0091
                           000092   674 G$MAC0BH$0$0 == 0x0092
                           000092   675 _MAC0BH	=	0x0092
                           000093   676 G$MAC0ACC0$0$0 == 0x0093
                           000093   677 _MAC0ACC0	=	0x0093
                           000094   678 G$MAC0ACC1$0$0 == 0x0094
                           000094   679 _MAC0ACC1	=	0x0094
                           000095   680 G$MAC0ACC2$0$0 == 0x0095
                           000095   681 _MAC0ACC2	=	0x0095
                           000096   682 G$MAC0ACC3$0$0 == 0x0096
                           000096   683 _MAC0ACC3	=	0x0096
                           000097   684 G$MAC0OVR$0$0 == 0x0097
                           000097   685 _MAC0OVR	=	0x0097
                           0000C0   686 G$MAC0STA$0$0 == 0x00c0
                           0000C0   687 _MAC0STA	=	0x00c0
                           0000C1   688 G$MAC0AL$0$0 == 0x00c1
                           0000C1   689 _MAC0AL	=	0x00c1
                           0000C2   690 G$MAC0AH$0$0 == 0x00c2
                           0000C2   691 _MAC0AH	=	0x00c2
                           0000C3   692 G$MAC0CF$0$0 == 0x00c3
                           0000C3   693 _MAC0CF	=	0x00c3
                           0000CE   694 G$MAC0RNDL$0$0 == 0x00ce
                           0000CE   695 _MAC0RNDL	=	0x00ce
                           0000CF   696 G$MAC0RNDH$0$0 == 0x00cf
                           0000CF   697 _MAC0RNDH	=	0x00cf
                           000088   698 G$FLSTAT$0$0 == 0x0088
                           000088   699 _FLSTAT	=	0x0088
                           000089   700 G$PLL0CN$0$0 == 0x0089
                           000089   701 _PLL0CN	=	0x0089
                           00008A   702 G$OSCICN$0$0 == 0x008a
                           00008A   703 _OSCICN	=	0x008a
                           00008B   704 G$OSCICL$0$0 == 0x008b
                           00008B   705 _OSCICL	=	0x008b
                           00008C   706 G$OSCXCN$0$0 == 0x008c
                           00008C   707 _OSCXCN	=	0x008c
                           00008D   708 G$PLL0DIV$0$0 == 0x008d
                           00008D   709 _PLL0DIV	=	0x008d
                           00008E   710 G$PLL0MUL$0$0 == 0x008e
                           00008E   711 _PLL0MUL	=	0x008e
                           00008F   712 G$PLL0FLT$0$0 == 0x008f
                           00008F   713 _PLL0FLT	=	0x008f
                           000096   714 G$SFRPGCN$0$0 == 0x0096
                           000096   715 _SFRPGCN	=	0x0096
                           000097   716 G$CLKSEL$0$0 == 0x0097
                           000097   717 _CLKSEL	=	0x0097
                           00009A   718 G$CCH0MA$0$0 == 0x009a
                           00009A   719 _CCH0MA	=	0x009a
                           00009C   720 G$P4MDOUT$0$0 == 0x009c
                           00009C   721 _P4MDOUT	=	0x009c
                           00009D   722 G$P5MDOUT$0$0 == 0x009d
                           00009D   723 _P5MDOUT	=	0x009d
                           00009E   724 G$P6MDOUT$0$0 == 0x009e
                           00009E   725 _P6MDOUT	=	0x009e
                           00009F   726 G$P7MDOUT$0$0 == 0x009f
                           00009F   727 _P7MDOUT	=	0x009f
                           0000A1   728 G$CCH0CN$0$0 == 0x00a1
                           0000A1   729 _CCH0CN	=	0x00a1
                           0000A2   730 G$CCH0TN$0$0 == 0x00a2
                           0000A2   731 _CCH0TN	=	0x00a2
                           0000A3   732 G$CCH0LC$0$0 == 0x00a3
                           0000A3   733 _CCH0LC	=	0x00a3
                           0000A4   734 G$P0MDOUT$0$0 == 0x00a4
                           0000A4   735 _P0MDOUT	=	0x00a4
                           0000A5   736 G$P1MDOUT$0$0 == 0x00a5
                           0000A5   737 _P1MDOUT	=	0x00a5
                           0000A6   738 G$P2MDOUT$0$0 == 0x00a6
                           0000A6   739 _P2MDOUT	=	0x00a6
                           0000A7   740 G$P3MDOUT$0$0 == 0x00a7
                           0000A7   741 _P3MDOUT	=	0x00a7
                           0000AD   742 G$P1MDIN$0$0 == 0x00ad
                           0000AD   743 _P1MDIN	=	0x00ad
                           0000B7   744 G$FLACL$0$0 == 0x00b7
                           0000B7   745 _FLACL	=	0x00b7
                           0000C8   746 G$P4$0$0 == 0x00c8
                           0000C8   747 _P4	=	0x00c8
                           0000D8   748 G$P5$0$0 == 0x00d8
                           0000D8   749 _P5	=	0x00d8
                           0000E1   750 G$XBR0$0$0 == 0x00e1
                           0000E1   751 _XBR0	=	0x00e1
                           0000E2   752 G$XBR1$0$0 == 0x00e2
                           0000E2   753 _XBR1	=	0x00e2
                           0000E3   754 G$XBR2$0$0 == 0x00e3
                           0000E3   755 _XBR2	=	0x00e3
                           0000E8   756 G$P6$0$0 == 0x00e8
                           0000E8   757 _P6	=	0x00e8
                           0000F8   758 G$P7$0$0 == 0x00f8
                           0000F8   759 _P7	=	0x00f8
                           008C8A   760 G$TMR0$0$0 == 0x8c8a
                           008C8A   761 _TMR0	=	0x8c8a
                           008D8B   762 G$TMR1$0$0 == 0x8d8b
                           008D8B   763 _TMR1	=	0x8d8b
                           00CDCC   764 G$TMR2$0$0 == 0xcdcc
                           00CDCC   765 _TMR2	=	0xcdcc
                           00CBCA   766 G$RCAP2$0$0 == 0xcbca
                           00CBCA   767 _RCAP2	=	0xcbca
                           00BFBE   768 G$ADC0$0$0 == 0xbfbe
                           00BFBE   769 _ADC0	=	0xbfbe
                           00C5C4   770 G$ADC0GT$0$0 == 0xc5c4
                           00C5C4   771 _ADC0GT	=	0xc5c4
                           00C7C6   772 G$ADC0LT$0$0 == 0xc7c6
                           00C7C6   773 _ADC0LT	=	0xc7c6
                           00D3D2   774 G$DAC0$0$0 == 0xd3d2
                           00D3D2   775 _DAC0	=	0xd3d2
                           00FAF9   776 G$PCA0$0$0 == 0xfaf9
                           00FAF9   777 _PCA0	=	0xfaf9
                           00FCFB   778 G$PCA0CP0$0$0 == 0xfcfb
                           00FCFB   779 _PCA0CP0	=	0xfcfb
                           00FEFD   780 G$PCA0CP1$0$0 == 0xfefd
                           00FEFD   781 _PCA0CP1	=	0xfefd
                           00EAE9   782 G$PCA0CP2$0$0 == 0xeae9
                           00EAE9   783 _PCA0CP2	=	0xeae9
                           00ECEB   784 G$PCA0CP3$0$0 == 0xeceb
                           00ECEB   785 _PCA0CP3	=	0xeceb
                           00EEED   786 G$PCA0CP4$0$0 == 0xeeed
                           00EEED   787 _PCA0CP4	=	0xeeed
                           00E2E1   788 G$PCA0CP5$0$0 == 0xe2e1
                           00E2E1   789 _PCA0CP5	=	0xe2e1
                           00CDCC   790 G$TMR3$0$0 == 0xcdcc
                           00CDCC   791 _TMR3	=	0xcdcc
                           00CBCA   792 G$RCAP3$0$0 == 0xcbca
                           00CBCA   793 _RCAP3	=	0xcbca
                           00D3D2   794 G$DAC1$0$0 == 0xd3d2
                           00D3D2   795 _DAC1	=	0xd3d2
                           00CDCC   796 G$TMR4$0$0 == 0xcdcc
                           00CDCC   797 _TMR4	=	0xcdcc
                           00CBCA   798 G$RCAP4$0$0 == 0xcbca
                           00CBCA   799 _RCAP4	=	0xcbca
                           00C2C1   800 G$MAC0A$0$0 == 0xc2c1
                           00C2C1   801 _MAC0A	=	0xc2c1
                           96959493   802 G$MAC0ACC$0$0 == 0x96959493
                           96959493   803 _MAC0ACC	=	0x96959493
                           00CFCE   804 G$MAC0RND$0$0 == 0xcfce
                           00CFCE   805 _MAC0RND	=	0xcfce
                                    806 ;--------------------------------------------------------
                                    807 ; special function bits
                                    808 ;--------------------------------------------------------
                                    809 	.area RSEG    (ABS,DATA)
      000000                        810 	.org 0x0000
                           000080   811 G$P0_0$0$0 == 0x0080
                           000080   812 _P0_0	=	0x0080
                           000081   813 G$P0_1$0$0 == 0x0081
                           000081   814 _P0_1	=	0x0081
                           000082   815 G$P0_2$0$0 == 0x0082
                           000082   816 _P0_2	=	0x0082
                           000083   817 G$P0_3$0$0 == 0x0083
                           000083   818 _P0_3	=	0x0083
                           000084   819 G$P0_4$0$0 == 0x0084
                           000084   820 _P0_4	=	0x0084
                           000085   821 G$P0_5$0$0 == 0x0085
                           000085   822 _P0_5	=	0x0085
                           000086   823 G$P0_6$0$0 == 0x0086
                           000086   824 _P0_6	=	0x0086
                           000087   825 G$P0_7$0$0 == 0x0087
                           000087   826 _P0_7	=	0x0087
                           000088   827 G$IT0$0$0 == 0x0088
                           000088   828 _IT0	=	0x0088
                           000089   829 G$IE0$0$0 == 0x0089
                           000089   830 _IE0	=	0x0089
                           00008A   831 G$IT1$0$0 == 0x008a
                           00008A   832 _IT1	=	0x008a
                           00008B   833 G$IE1$0$0 == 0x008b
                           00008B   834 _IE1	=	0x008b
                           00008C   835 G$TR0$0$0 == 0x008c
                           00008C   836 _TR0	=	0x008c
                           00008D   837 G$TF0$0$0 == 0x008d
                           00008D   838 _TF0	=	0x008d
                           00008E   839 G$TR1$0$0 == 0x008e
                           00008E   840 _TR1	=	0x008e
                           00008F   841 G$TF1$0$0 == 0x008f
                           00008F   842 _TF1	=	0x008f
                           000088   843 G$CP0HYN0$0$0 == 0x0088
                           000088   844 _CP0HYN0	=	0x0088
                           000089   845 G$CP0HYN1$0$0 == 0x0089
                           000089   846 _CP0HYN1	=	0x0089
                           00008A   847 G$CP0HYP0$0$0 == 0x008a
                           00008A   848 _CP0HYP0	=	0x008a
                           00008B   849 G$CP0HYP1$0$0 == 0x008b
                           00008B   850 _CP0HYP1	=	0x008b
                           00008C   851 G$CP0FIF$0$0 == 0x008c
                           00008C   852 _CP0FIF	=	0x008c
                           00008D   853 G$CP0RIF$0$0 == 0x008d
                           00008D   854 _CP0RIF	=	0x008d
                           00008E   855 G$CP0OUT$0$0 == 0x008e
                           00008E   856 _CP0OUT	=	0x008e
                           00008F   857 G$CP0EN$0$0 == 0x008f
                           00008F   858 _CP0EN	=	0x008f
                           000088   859 G$CP1HYN0$0$0 == 0x0088
                           000088   860 _CP1HYN0	=	0x0088
                           000089   861 G$CP1HYN1$0$0 == 0x0089
                           000089   862 _CP1HYN1	=	0x0089
                           00008A   863 G$CP1HYP0$0$0 == 0x008a
                           00008A   864 _CP1HYP0	=	0x008a
                           00008B   865 G$CP1HYP1$0$0 == 0x008b
                           00008B   866 _CP1HYP1	=	0x008b
                           00008C   867 G$CP1FIF$0$0 == 0x008c
                           00008C   868 _CP1FIF	=	0x008c
                           00008D   869 G$CP1RIF$0$0 == 0x008d
                           00008D   870 _CP1RIF	=	0x008d
                           00008E   871 G$CP1OUT$0$0 == 0x008e
                           00008E   872 _CP1OUT	=	0x008e
                           00008F   873 G$CP1EN$0$0 == 0x008f
                           00008F   874 _CP1EN	=	0x008f
                           000088   875 G$FLHBUSY$0$0 == 0x0088
                           000088   876 _FLHBUSY	=	0x0088
                           000090   877 G$P1_0$0$0 == 0x0090
                           000090   878 _P1_0	=	0x0090
                           000091   879 G$P1_1$0$0 == 0x0091
                           000091   880 _P1_1	=	0x0091
                           000092   881 G$P1_2$0$0 == 0x0092
                           000092   882 _P1_2	=	0x0092
                           000093   883 G$P1_3$0$0 == 0x0093
                           000093   884 _P1_3	=	0x0093
                           000094   885 G$P1_4$0$0 == 0x0094
                           000094   886 _P1_4	=	0x0094
                           000095   887 G$P1_5$0$0 == 0x0095
                           000095   888 _P1_5	=	0x0095
                           000096   889 G$P1_6$0$0 == 0x0096
                           000096   890 _P1_6	=	0x0096
                           000097   891 G$P1_7$0$0 == 0x0097
                           000097   892 _P1_7	=	0x0097
                           000098   893 G$RI0$0$0 == 0x0098
                           000098   894 _RI0	=	0x0098
                           000098   895 G$RI$0$0 == 0x0098
                           000098   896 _RI	=	0x0098
                           000099   897 G$TI0$0$0 == 0x0099
                           000099   898 _TI0	=	0x0099
                           000099   899 G$TI$0$0 == 0x0099
                           000099   900 _TI	=	0x0099
                           00009A   901 G$RB80$0$0 == 0x009a
                           00009A   902 _RB80	=	0x009a
                           00009B   903 G$TB80$0$0 == 0x009b
                           00009B   904 _TB80	=	0x009b
                           00009C   905 G$REN0$0$0 == 0x009c
                           00009C   906 _REN0	=	0x009c
                           00009C   907 G$REN$0$0 == 0x009c
                           00009C   908 _REN	=	0x009c
                           00009D   909 G$SM20$0$0 == 0x009d
                           00009D   910 _SM20	=	0x009d
                           00009E   911 G$SM10$0$0 == 0x009e
                           00009E   912 _SM10	=	0x009e
                           00009F   913 G$SM00$0$0 == 0x009f
                           00009F   914 _SM00	=	0x009f
                           000098   915 G$RI1$0$0 == 0x0098
                           000098   916 _RI1	=	0x0098
                           000099   917 G$TI1$0$0 == 0x0099
                           000099   918 _TI1	=	0x0099
                           00009A   919 G$RB81$0$0 == 0x009a
                           00009A   920 _RB81	=	0x009a
                           00009B   921 G$TB81$0$0 == 0x009b
                           00009B   922 _TB81	=	0x009b
                           00009C   923 G$REN1$0$0 == 0x009c
                           00009C   924 _REN1	=	0x009c
                           00009D   925 G$MCE1$0$0 == 0x009d
                           00009D   926 _MCE1	=	0x009d
                           00009F   927 G$S1MODE$0$0 == 0x009f
                           00009F   928 _S1MODE	=	0x009f
                           0000A0   929 G$P2_0$0$0 == 0x00a0
                           0000A0   930 _P2_0	=	0x00a0
                           0000A1   931 G$P2_1$0$0 == 0x00a1
                           0000A1   932 _P2_1	=	0x00a1
                           0000A2   933 G$P2_2$0$0 == 0x00a2
                           0000A2   934 _P2_2	=	0x00a2
                           0000A3   935 G$P2_3$0$0 == 0x00a3
                           0000A3   936 _P2_3	=	0x00a3
                           0000A4   937 G$P2_4$0$0 == 0x00a4
                           0000A4   938 _P2_4	=	0x00a4
                           0000A5   939 G$P2_5$0$0 == 0x00a5
                           0000A5   940 _P2_5	=	0x00a5
                           0000A6   941 G$P2_6$0$0 == 0x00a6
                           0000A6   942 _P2_6	=	0x00a6
                           0000A7   943 G$P2_7$0$0 == 0x00a7
                           0000A7   944 _P2_7	=	0x00a7
                           0000A8   945 G$EX0$0$0 == 0x00a8
                           0000A8   946 _EX0	=	0x00a8
                           0000A9   947 G$ET0$0$0 == 0x00a9
                           0000A9   948 _ET0	=	0x00a9
                           0000AA   949 G$EX1$0$0 == 0x00aa
                           0000AA   950 _EX1	=	0x00aa
                           0000AB   951 G$ET1$0$0 == 0x00ab
                           0000AB   952 _ET1	=	0x00ab
                           0000AC   953 G$ES0$0$0 == 0x00ac
                           0000AC   954 _ES0	=	0x00ac
                           0000AC   955 G$ES$0$0 == 0x00ac
                           0000AC   956 _ES	=	0x00ac
                           0000AD   957 G$ET2$0$0 == 0x00ad
                           0000AD   958 _ET2	=	0x00ad
                           0000AF   959 G$EA$0$0 == 0x00af
                           0000AF   960 _EA	=	0x00af
                           0000B0   961 G$P3_0$0$0 == 0x00b0
                           0000B0   962 _P3_0	=	0x00b0
                           0000B1   963 G$P3_1$0$0 == 0x00b1
                           0000B1   964 _P3_1	=	0x00b1
                           0000B2   965 G$P3_2$0$0 == 0x00b2
                           0000B2   966 _P3_2	=	0x00b2
                           0000B3   967 G$P3_3$0$0 == 0x00b3
                           0000B3   968 _P3_3	=	0x00b3
                           0000B4   969 G$P3_4$0$0 == 0x00b4
                           0000B4   970 _P3_4	=	0x00b4
                           0000B5   971 G$P3_5$0$0 == 0x00b5
                           0000B5   972 _P3_5	=	0x00b5
                           0000B6   973 G$P3_6$0$0 == 0x00b6
                           0000B6   974 _P3_6	=	0x00b6
                           0000B7   975 G$P3_7$0$0 == 0x00b7
                           0000B7   976 _P3_7	=	0x00b7
                           0000B8   977 G$PX0$0$0 == 0x00b8
                           0000B8   978 _PX0	=	0x00b8
                           0000B9   979 G$PT0$0$0 == 0x00b9
                           0000B9   980 _PT0	=	0x00b9
                           0000BA   981 G$PX1$0$0 == 0x00ba
                           0000BA   982 _PX1	=	0x00ba
                           0000BB   983 G$PT1$0$0 == 0x00bb
                           0000BB   984 _PT1	=	0x00bb
                           0000BC   985 G$PS0$0$0 == 0x00bc
                           0000BC   986 _PS0	=	0x00bc
                           0000BC   987 G$PS$0$0 == 0x00bc
                           0000BC   988 _PS	=	0x00bc
                           0000BD   989 G$PT2$0$0 == 0x00bd
                           0000BD   990 _PT2	=	0x00bd
                           0000C0   991 G$SMBTOE$0$0 == 0x00c0
                           0000C0   992 _SMBTOE	=	0x00c0
                           0000C1   993 G$SMBFTE$0$0 == 0x00c1
                           0000C1   994 _SMBFTE	=	0x00c1
                           0000C2   995 G$AA$0$0 == 0x00c2
                           0000C2   996 _AA	=	0x00c2
                           0000C3   997 G$SI$0$0 == 0x00c3
                           0000C3   998 _SI	=	0x00c3
                           0000C4   999 G$STO$0$0 == 0x00c4
                           0000C4  1000 _STO	=	0x00c4
                           0000C5  1001 G$STA$0$0 == 0x00c5
                           0000C5  1002 _STA	=	0x00c5
                           0000C6  1003 G$ENSMB$0$0 == 0x00c6
                           0000C6  1004 _ENSMB	=	0x00c6
                           0000C7  1005 G$BUSY$0$0 == 0x00c7
                           0000C7  1006 _BUSY	=	0x00c7
                           0000C0  1007 G$MAC0N$0$0 == 0x00c0
                           0000C0  1008 _MAC0N	=	0x00c0
                           0000C1  1009 G$MAC0SO$0$0 == 0x00c1
                           0000C1  1010 _MAC0SO	=	0x00c1
                           0000C2  1011 G$MAC0Z$0$0 == 0x00c2
                           0000C2  1012 _MAC0Z	=	0x00c2
                           0000C3  1013 G$MAC0HO$0$0 == 0x00c3
                           0000C3  1014 _MAC0HO	=	0x00c3
                           0000C8  1015 G$CPRL2$0$0 == 0x00c8
                           0000C8  1016 _CPRL2	=	0x00c8
                           0000C9  1017 G$CT2$0$0 == 0x00c9
                           0000C9  1018 _CT2	=	0x00c9
                           0000CA  1019 G$TR2$0$0 == 0x00ca
                           0000CA  1020 _TR2	=	0x00ca
                           0000CB  1021 G$EXEN2$0$0 == 0x00cb
                           0000CB  1022 _EXEN2	=	0x00cb
                           0000CE  1023 G$EXF2$0$0 == 0x00ce
                           0000CE  1024 _EXF2	=	0x00ce
                           0000CF  1025 G$TF2$0$0 == 0x00cf
                           0000CF  1026 _TF2	=	0x00cf
                           0000C8  1027 G$CPRL3$0$0 == 0x00c8
                           0000C8  1028 _CPRL3	=	0x00c8
                           0000C9  1029 G$CT3$0$0 == 0x00c9
                           0000C9  1030 _CT3	=	0x00c9
                           0000CA  1031 G$TR3$0$0 == 0x00ca
                           0000CA  1032 _TR3	=	0x00ca
                           0000CB  1033 G$EXEN3$0$0 == 0x00cb
                           0000CB  1034 _EXEN3	=	0x00cb
                           0000CE  1035 G$EXF3$0$0 == 0x00ce
                           0000CE  1036 _EXF3	=	0x00ce
                           0000CF  1037 G$TF3$0$0 == 0x00cf
                           0000CF  1038 _TF3	=	0x00cf
                           0000C8  1039 G$CPRL4$0$0 == 0x00c8
                           0000C8  1040 _CPRL4	=	0x00c8
                           0000C9  1041 G$CT4$0$0 == 0x00c9
                           0000C9  1042 _CT4	=	0x00c9
                           0000CA  1043 G$TR4$0$0 == 0x00ca
                           0000CA  1044 _TR4	=	0x00ca
                           0000CB  1045 G$EXEN4$0$0 == 0x00cb
                           0000CB  1046 _EXEN4	=	0x00cb
                           0000CE  1047 G$EXF4$0$0 == 0x00ce
                           0000CE  1048 _EXF4	=	0x00ce
                           0000CF  1049 G$TF4$0$0 == 0x00cf
                           0000CF  1050 _TF4	=	0x00cf
                           0000C8  1051 G$P4_0$0$0 == 0x00c8
                           0000C8  1052 _P4_0	=	0x00c8
                           0000C9  1053 G$P4_1$0$0 == 0x00c9
                           0000C9  1054 _P4_1	=	0x00c9
                           0000CA  1055 G$P4_2$0$0 == 0x00ca
                           0000CA  1056 _P4_2	=	0x00ca
                           0000CB  1057 G$P4_3$0$0 == 0x00cb
                           0000CB  1058 _P4_3	=	0x00cb
                           0000CC  1059 G$P4_4$0$0 == 0x00cc
                           0000CC  1060 _P4_4	=	0x00cc
                           0000CD  1061 G$P4_5$0$0 == 0x00cd
                           0000CD  1062 _P4_5	=	0x00cd
                           0000CE  1063 G$P4_6$0$0 == 0x00ce
                           0000CE  1064 _P4_6	=	0x00ce
                           0000CF  1065 G$P4_7$0$0 == 0x00cf
                           0000CF  1066 _P4_7	=	0x00cf
                           0000D0  1067 G$P$0$0 == 0x00d0
                           0000D0  1068 _P	=	0x00d0
                           0000D1  1069 G$F1$0$0 == 0x00d1
                           0000D1  1070 _F1	=	0x00d1
                           0000D2  1071 G$OV$0$0 == 0x00d2
                           0000D2  1072 _OV	=	0x00d2
                           0000D3  1073 G$RS0$0$0 == 0x00d3
                           0000D3  1074 _RS0	=	0x00d3
                           0000D4  1075 G$RS1$0$0 == 0x00d4
                           0000D4  1076 _RS1	=	0x00d4
                           0000D5  1077 G$F0$0$0 == 0x00d5
                           0000D5  1078 _F0	=	0x00d5
                           0000D6  1079 G$AC$0$0 == 0x00d6
                           0000D6  1080 _AC	=	0x00d6
                           0000D7  1081 G$CY$0$0 == 0x00d7
                           0000D7  1082 _CY	=	0x00d7
                           0000D8  1083 G$CCF0$0$0 == 0x00d8
                           0000D8  1084 _CCF0	=	0x00d8
                           0000D9  1085 G$CCF1$0$0 == 0x00d9
                           0000D9  1086 _CCF1	=	0x00d9
                           0000DA  1087 G$CCF2$0$0 == 0x00da
                           0000DA  1088 _CCF2	=	0x00da
                           0000DB  1089 G$CCF3$0$0 == 0x00db
                           0000DB  1090 _CCF3	=	0x00db
                           0000DC  1091 G$CCF4$0$0 == 0x00dc
                           0000DC  1092 _CCF4	=	0x00dc
                           0000DD  1093 G$CCF5$0$0 == 0x00dd
                           0000DD  1094 _CCF5	=	0x00dd
                           0000DE  1095 G$CR$0$0 == 0x00de
                           0000DE  1096 _CR	=	0x00de
                           0000DF  1097 G$CF$0$0 == 0x00df
                           0000DF  1098 _CF	=	0x00df
                           0000D8  1099 G$P5_0$0$0 == 0x00d8
                           0000D8  1100 _P5_0	=	0x00d8
                           0000D9  1101 G$P5_1$0$0 == 0x00d9
                           0000D9  1102 _P5_1	=	0x00d9
                           0000DA  1103 G$P5_2$0$0 == 0x00da
                           0000DA  1104 _P5_2	=	0x00da
                           0000DB  1105 G$P5_3$0$0 == 0x00db
                           0000DB  1106 _P5_3	=	0x00db
                           0000DC  1107 G$P5_4$0$0 == 0x00dc
                           0000DC  1108 _P5_4	=	0x00dc
                           0000DD  1109 G$P5_5$0$0 == 0x00dd
                           0000DD  1110 _P5_5	=	0x00dd
                           0000DE  1111 G$P5_6$0$0 == 0x00de
                           0000DE  1112 _P5_6	=	0x00de
                           0000DF  1113 G$P5_7$0$0 == 0x00df
                           0000DF  1114 _P5_7	=	0x00df
                           0000E8  1115 G$AD0LJST$0$0 == 0x00e8
                           0000E8  1116 _AD0LJST	=	0x00e8
                           0000E9  1117 G$AD0WINT$0$0 == 0x00e9
                           0000E9  1118 _AD0WINT	=	0x00e9
                           0000EA  1119 G$AD0CM0$0$0 == 0x00ea
                           0000EA  1120 _AD0CM0	=	0x00ea
                           0000EB  1121 G$AD0CM1$0$0 == 0x00eb
                           0000EB  1122 _AD0CM1	=	0x00eb
                           0000EC  1123 G$AD0BUSY$0$0 == 0x00ec
                           0000EC  1124 _AD0BUSY	=	0x00ec
                           0000ED  1125 G$AD0INT$0$0 == 0x00ed
                           0000ED  1126 _AD0INT	=	0x00ed
                           0000EE  1127 G$AD0TM$0$0 == 0x00ee
                           0000EE  1128 _AD0TM	=	0x00ee
                           0000EF  1129 G$AD0EN$0$0 == 0x00ef
                           0000EF  1130 _AD0EN	=	0x00ef
                           0000E8  1131 G$AD2WINT$0$0 == 0x00e8
                           0000E8  1132 _AD2WINT	=	0x00e8
                           0000E9  1133 G$AD2CM0$0$0 == 0x00e9
                           0000E9  1134 _AD2CM0	=	0x00e9
                           0000EA  1135 G$AD2CM1$0$0 == 0x00ea
                           0000EA  1136 _AD2CM1	=	0x00ea
                           0000EB  1137 G$AD2CM2$0$0 == 0x00eb
                           0000EB  1138 _AD2CM2	=	0x00eb
                           0000EC  1139 G$AD2BUSY$0$0 == 0x00ec
                           0000EC  1140 _AD2BUSY	=	0x00ec
                           0000ED  1141 G$AD2INT$0$0 == 0x00ed
                           0000ED  1142 _AD2INT	=	0x00ed
                           0000EE  1143 G$AD2TM$0$0 == 0x00ee
                           0000EE  1144 _AD2TM	=	0x00ee
                           0000EF  1145 G$AD2EN$0$0 == 0x00ef
                           0000EF  1146 _AD2EN	=	0x00ef
                           0000E8  1147 G$P6_0$0$0 == 0x00e8
                           0000E8  1148 _P6_0	=	0x00e8
                           0000E9  1149 G$P6_1$0$0 == 0x00e9
                           0000E9  1150 _P6_1	=	0x00e9
                           0000EA  1151 G$P6_2$0$0 == 0x00ea
                           0000EA  1152 _P6_2	=	0x00ea
                           0000EB  1153 G$P6_3$0$0 == 0x00eb
                           0000EB  1154 _P6_3	=	0x00eb
                           0000EC  1155 G$P6_4$0$0 == 0x00ec
                           0000EC  1156 _P6_4	=	0x00ec
                           0000ED  1157 G$P6_5$0$0 == 0x00ed
                           0000ED  1158 _P6_5	=	0x00ed
                           0000EE  1159 G$P6_6$0$0 == 0x00ee
                           0000EE  1160 _P6_6	=	0x00ee
                           0000EF  1161 G$P6_7$0$0 == 0x00ef
                           0000EF  1162 _P6_7	=	0x00ef
                           0000F8  1163 G$SPIEN$0$0 == 0x00f8
                           0000F8  1164 _SPIEN	=	0x00f8
                           0000F9  1165 G$TXBMT$0$0 == 0x00f9
                           0000F9  1166 _TXBMT	=	0x00f9
                           0000FA  1167 G$NSSMD0$0$0 == 0x00fa
                           0000FA  1168 _NSSMD0	=	0x00fa
                           0000FB  1169 G$NSSMD1$0$0 == 0x00fb
                           0000FB  1170 _NSSMD1	=	0x00fb
                           0000FC  1171 G$RXOVRN$0$0 == 0x00fc
                           0000FC  1172 _RXOVRN	=	0x00fc
                           0000FD  1173 G$MODF$0$0 == 0x00fd
                           0000FD  1174 _MODF	=	0x00fd
                           0000FE  1175 G$WCOL$0$0 == 0x00fe
                           0000FE  1176 _WCOL	=	0x00fe
                           0000FF  1177 G$SPIF$0$0 == 0x00ff
                           0000FF  1178 _SPIF	=	0x00ff
                           0000F8  1179 G$P7_0$0$0 == 0x00f8
                           0000F8  1180 _P7_0	=	0x00f8
                           0000F9  1181 G$P7_1$0$0 == 0x00f9
                           0000F9  1182 _P7_1	=	0x00f9
                           0000FA  1183 G$P7_2$0$0 == 0x00fa
                           0000FA  1184 _P7_2	=	0x00fa
                           0000FB  1185 G$P7_3$0$0 == 0x00fb
                           0000FB  1186 _P7_3	=	0x00fb
                           0000FC  1187 G$P7_4$0$0 == 0x00fc
                           0000FC  1188 _P7_4	=	0x00fc
                           0000FD  1189 G$P7_5$0$0 == 0x00fd
                           0000FD  1190 _P7_5	=	0x00fd
                           0000FE  1191 G$P7_6$0$0 == 0x00fe
                           0000FE  1192 _P7_6	=	0x00fe
                           0000FF  1193 G$P7_7$0$0 == 0x00ff
                           0000FF  1194 _P7_7	=	0x00ff
                                   1195 ;--------------------------------------------------------
                                   1196 ; overlayable register banks
                                   1197 ;--------------------------------------------------------
                                   1198 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                       1199 	.ds 8
                                   1200 ;--------------------------------------------------------
                                   1201 ; internal ram data
                                   1202 ;--------------------------------------------------------
                                   1203 	.area DSEG    (DATA)
                           000000  1204 G$buttonPressed$0$0==.
      000000                       1205 _buttonPressed::
      000000                       1206 	.ds 1
                           000001  1207 G$TR0_count$0$0==.
      000001                       1208 _TR0_count::
      000001                       1209 	.ds 2
                           000003  1210 G$debounceCount$0$0==.
      000003                       1211 _debounceCount::
      000003                       1212 	.ds 2
                           000005  1213 G$startTime$0$0==.
      000005                       1214 _startTime::
      000005                       1215 	.ds 2
                           000007  1216 G$choice$0$0==.
      000007                       1217 _choice::
      000007                       1218 	.ds 1
                           000008  1219 G$random$0$0==.
      000008                       1220 _random::
      000008                       1221 	.ds 1
                           000009  1222 G$days$0$0==.
      000009                       1223 _days::
      000009                       1224 	.ds 21
                           00001E  1225 G$seed$0$0==.
      00001E                       1226 _seed::
      00001E                       1227 	.ds 3
                           000021  1228 Lmain.loop$lowerBound$1$31==.
      000021                       1229 _loop_lowerBound_1_31:
      000021                       1230 	.ds 1
                           000022  1231 Lmain.loop$sloc0$1$0==.
      000022                       1232 _loop_sloc0_1_0:
      000022                       1233 	.ds 2
                           000024  1234 Lmain.printFeels$buffer$1$39==.
      000024                       1235 _printFeels_buffer_1_39:
      000024                       1236 	.ds 6
                                   1237 ;--------------------------------------------------------
                                   1238 ; overlayable items in internal ram 
                                   1239 ;--------------------------------------------------------
                                   1240 	.area	OSEG    (OVR,DATA)
                                   1241 	.area	OSEG    (OVR,DATA)
                                   1242 	.area	OSEG    (OVR,DATA)
                                   1243 	.area	OSEG    (OVR,DATA)
                                   1244 ;--------------------------------------------------------
                                   1245 ; Stack segment in internal ram 
                                   1246 ;--------------------------------------------------------
                                   1247 	.area	SSEG
      000000                       1248 __start__stack:
      000000                       1249 	.ds	1
                                   1250 
                                   1251 ;--------------------------------------------------------
                                   1252 ; indirectly addressable internal ram data
                                   1253 ;--------------------------------------------------------
                                   1254 	.area ISEG    (DATA)
                                   1255 ;--------------------------------------------------------
                                   1256 ; absolute internal ram data
                                   1257 ;--------------------------------------------------------
                                   1258 	.area IABS    (ABS,DATA)
                                   1259 	.area IABS    (ABS,DATA)
                                   1260 ;--------------------------------------------------------
                                   1261 ; bit data
                                   1262 ;--------------------------------------------------------
                                   1263 	.area BSEG    (BIT)
                           000000  1264 G$SW2press$0$0==.
      000000                       1265 _SW2press::
      000000                       1266 	.ds 1
                                   1267 ;--------------------------------------------------------
                                   1268 ; paged external ram data
                                   1269 ;--------------------------------------------------------
                                   1270 	.area PSEG    (PAG,XDATA)
                                   1271 ;--------------------------------------------------------
                                   1272 ; external ram data
                                   1273 ;--------------------------------------------------------
                                   1274 	.area XSEG    (XDATA)
                                   1275 ;--------------------------------------------------------
                                   1276 ; absolute external ram data
                                   1277 ;--------------------------------------------------------
                                   1278 	.area XABS    (ABS,XDATA)
                                   1279 ;--------------------------------------------------------
                                   1280 ; external initialized ram data
                                   1281 ;--------------------------------------------------------
                                   1282 	.area XISEG   (XDATA)
                           000000  1283 G$guitar$0$0==.
      000000                       1284 _guitar::
      000000                       1285 	.ds 72
                           000048  1286 G$quotes$0$0==.
      000048                       1287 _quotes::
      000048                       1288 	.ds 63
                                   1289 	.area HOME    (CODE)
                                   1290 	.area GSINIT0 (CODE)
                                   1291 	.area GSINIT1 (CODE)
                                   1292 	.area GSINIT2 (CODE)
                                   1293 	.area GSINIT3 (CODE)
                                   1294 	.area GSINIT4 (CODE)
                                   1295 	.area GSINIT5 (CODE)
                                   1296 	.area GSINIT  (CODE)
                                   1297 	.area GSFINAL (CODE)
                                   1298 	.area CSEG    (CODE)
                                   1299 ;--------------------------------------------------------
                                   1300 ; interrupt vector 
                                   1301 ;--------------------------------------------------------
                                   1302 	.area HOME    (CODE)
      000000                       1303 __interrupt_vect:
      000000 02r00r00         [24] 1304 	ljmp	__sdcc_gsinit_startup
      000003 02r06r84         [24] 1305 	ljmp	_External_ISR
      000006                       1306 	.ds	5
      00000B 02r06r88         [24] 1307 	ljmp	_TR0_ISR
                                   1308 ;--------------------------------------------------------
                                   1309 ; global & static initialisations
                                   1310 ;--------------------------------------------------------
                                   1311 	.area HOME    (CODE)
                                   1312 	.area GSINIT  (CODE)
                                   1313 	.area GSFINAL (CODE)
                                   1314 	.area GSINIT  (CODE)
                                   1315 	.globl __sdcc_gsinit_startup
                                   1316 	.globl __sdcc_program_startup
                                   1317 	.globl __start__stack
                                   1318 	.globl __mcs51_genXINIT
                                   1319 	.globl __mcs51_genXRAMCLEAR
                                   1320 	.globl __mcs51_genRAMCLEAR
                           000000  1321 	C$main.c$34$1$51 ==.
                                   1322 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:34: char buttonPressed = 0;
      000000 75*00 00         [24] 1323 	mov	_buttonPressed,#0x00
                           000003  1324 	C$main.c$39$1$51 ==.
                                   1325 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:39: const char* days[7] = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"};
      000003 75*09r61         [24] 1326 	mov	(_days + 0),#___str_23
      000006 75*0As01         [24] 1327 	mov	(_days + 1),#(___str_23 >> 8)
      000009 75*0B 80         [24] 1328 	mov	(_days + 2),#0x80
      00000C 75*0Cr68         [24] 1329 	mov	((_days + 0x0003) + 0),#___str_24
      00000F 75*0Ds01         [24] 1330 	mov	((_days + 0x0003) + 1),#(___str_24 >> 8)
      000012 75*0E 80         [24] 1331 	mov	((_days + 0x0003) + 2),#0x80
      000015 75*0Fr70         [24] 1332 	mov	((_days + 0x0006) + 0),#___str_25
      000018 75*10s01         [24] 1333 	mov	((_days + 0x0006) + 1),#(___str_25 >> 8)
      00001B 75*11 80         [24] 1334 	mov	((_days + 0x0006) + 2),#0x80
      00001E 75*12r7A         [24] 1335 	mov	((_days + 0x0009) + 0),#___str_26
      000021 75*13s01         [24] 1336 	mov	((_days + 0x0009) + 1),#(___str_26 >> 8)
      000024 75*14 80         [24] 1337 	mov	((_days + 0x0009) + 2),#0x80
      000027 75*15r83         [24] 1338 	mov	((_days + 0x000c) + 0),#___str_27
      00002A 75*16s01         [24] 1339 	mov	((_days + 0x000c) + 1),#(___str_27 >> 8)
      00002D 75*17 80         [24] 1340 	mov	((_days + 0x000c) + 2),#0x80
      000030 75*18r8A         [24] 1341 	mov	((_days + 0x000f) + 0),#___str_28
      000033 75*19s01         [24] 1342 	mov	((_days + 0x000f) + 1),#(___str_28 >> 8)
      000036 75*1A 80         [24] 1343 	mov	((_days + 0x000f) + 2),#0x80
      000039 75*1Br93         [24] 1344 	mov	((_days + 0x0012) + 0),#___str_29
      00003C 75*1Cs01         [24] 1345 	mov	((_days + 0x0012) + 1),#(___str_29 >> 8)
      00003F 75*1D 80         [24] 1346 	mov	((_days + 0x0012) + 2),#0x80
                           000042  1347 	C$main.c$41$1$51 ==.
                                   1348 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:41: unsigned int* seed = &TR0_count;
      000042 75*1Er01         [24] 1349 	mov	_seed,#_TR0_count
      000045 75*1F 00         [24] 1350 	mov	(_seed + 1),#0x00
      000048 75*20 40         [24] 1351 	mov	(_seed + 2),#0x40
                           00004B  1352 	C$main.c$15$1$51 ==.
                                   1353 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:15: __bit SW2press = 0;
      00004B C2*00            [12] 1354 	clr	_SW2press
                                   1355 	.area GSFINAL (CODE)
      000000 02r00r0E         [24] 1356 	ljmp	__sdcc_program_startup
                                   1357 ;--------------------------------------------------------
                                   1358 ; Home
                                   1359 ;--------------------------------------------------------
                                   1360 	.area HOME    (CODE)
                                   1361 	.area HOME    (CODE)
      00000E                       1362 __sdcc_program_startup:
      00000E 02r00r19         [24] 1363 	ljmp	_main
                                   1364 ;	return from main will return to caller
                                   1365 ;--------------------------------------------------------
                                   1366 ; code
                                   1367 ;--------------------------------------------------------
                                   1368 	.area CSEG    (CODE)
                                   1369 ;------------------------------------------------------------
                                   1370 ;Allocation info for local variables in function 'putchar'
                                   1371 ;------------------------------------------------------------
                                   1372 ;c                         Allocated to registers r7 
                                   1373 ;------------------------------------------------------------
                           000000  1374 	G$putchar$0$0 ==.
                           000000  1375 	C$putget.h$18$0$0 ==.
                                   1376 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\/putget.h:18: void putchar(char c)
                                   1377 ;	-----------------------------------------
                                   1378 ;	 function putchar
                                   1379 ;	-----------------------------------------
      000000                       1380 _putchar:
                           000007  1381 	ar7 = 0x07
                           000006  1382 	ar6 = 0x06
                           000005  1383 	ar5 = 0x05
                           000004  1384 	ar4 = 0x04
                           000003  1385 	ar3 = 0x03
                           000002  1386 	ar2 = 0x02
                           000001  1387 	ar1 = 0x01
                           000000  1388 	ar0 = 0x00
      000000 AF 82            [24] 1389 	mov	r7,dpl
                           000002  1390 	C$putget.h$20$1$16 ==.
                                   1391 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\/putget.h:20: while(!TI0); 
      000002                       1392 00101$:
                           000002  1393 	C$putget.h$21$1$16 ==.
                                   1394 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\/putget.h:21: TI0=0;
      000002 10 99 02         [24] 1395 	jbc	_TI0,00112$
      000005 80 FB            [24] 1396 	sjmp	00101$
      000007                       1397 00112$:
                           000007  1398 	C$putget.h$22$1$16 ==.
                                   1399 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\/putget.h:22: SBUF0 = c;
      000007 8F 99            [24] 1400 	mov	_SBUF0,r7
                           000009  1401 	C$putget.h$23$1$16 ==.
                           000009  1402 	XG$putchar$0$0 ==.
      000009 22               [24] 1403 	ret
                                   1404 ;------------------------------------------------------------
                                   1405 ;Allocation info for local variables in function 'getchar'
                                   1406 ;------------------------------------------------------------
                                   1407 ;c                         Allocated to registers 
                                   1408 ;------------------------------------------------------------
                           00000A  1409 	G$getchar$0$0 ==.
                           00000A  1410 	C$putget.h$28$1$16 ==.
                                   1411 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\/putget.h:28: char getchar(void)
                                   1412 ;	-----------------------------------------
                                   1413 ;	 function getchar
                                   1414 ;	-----------------------------------------
      00000A                       1415 _getchar:
                           00000A  1416 	C$putget.h$31$1$18 ==.
                                   1417 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\/putget.h:31: while(!RI0);
      00000A                       1418 00101$:
                           00000A  1419 	C$putget.h$32$1$18 ==.
                                   1420 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\/putget.h:32: RI0 =0;
      00000A 10 98 02         [24] 1421 	jbc	_RI0,00112$
      00000D 80 FB            [24] 1422 	sjmp	00101$
      00000F                       1423 00112$:
                           00000F  1424 	C$putget.h$33$1$18 ==.
                                   1425 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\/putget.h:33: c = SBUF0;
      00000F 85 99 82         [24] 1426 	mov	dpl,_SBUF0
                           000012  1427 	C$putget.h$35$1$18 ==.
                                   1428 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\/putget.h:35: putchar(c);    // echo to terminal
      000012 12r00r00         [24] 1429 	lcall	_putchar
                           000015  1430 	C$putget.h$36$1$18 ==.
                                   1431 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\/putget.h:36: return SBUF0;
      000015 85 99 82         [24] 1432 	mov	dpl,_SBUF0
                           000018  1433 	C$putget.h$37$1$18 ==.
                           000018  1434 	XG$getchar$0$0 ==.
      000018 22               [24] 1435 	ret
                                   1436 ;------------------------------------------------------------
                                   1437 ;Allocation info for local variables in function 'main'
                                   1438 ;------------------------------------------------------------
                           000019  1439 	G$main$0$0 ==.
                           000019  1440 	C$main.c$98$1$18 ==.
                                   1441 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:98: void main (void)
                                   1442 ;	-----------------------------------------
                                   1443 ;	 function main
                                   1444 ;	-----------------------------------------
      000019                       1445 _main:
                           000019  1446 	C$main.c$106$1$28 ==.
                                   1447 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:106: SFRPAGE = CONFIG_PAGE;
      000019 75 84 0F         [24] 1448 	mov	_SFRPAGE,#0x0F
                           00001C  1449 	C$main.c$108$1$28 ==.
                                   1450 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:108: PORT_INIT();                // Configure the Crossbar and GPIO.
      00001C 12r06r9F         [24] 1451 	lcall	_PORT_INIT
                           00001F  1452 	C$main.c$109$1$28 ==.
                                   1453 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:109: SYSCLK_INIT();              // Initialize the oscillator.
      00001F 12r06rC1         [24] 1454 	lcall	_SYSCLK_INIT
                           000022  1455 	C$main.c$110$1$28 ==.
                                   1456 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:110: UART0_INIT();               // Initialize UART0.
      000022 12r07r2B         [24] 1457 	lcall	_UART0_INIT
                           000025  1458 	C$main.c$112$1$28 ==.
                                   1459 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:112: SFRPAGE = LEGACY_PAGE;
      000025 75 84 00         [24] 1460 	mov	_SFRPAGE,#0x00
                           000028  1461 	C$main.c$113$1$28 ==.
                                   1462 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:113: IT0     = 1;                // /INT0 is active low triggered.
      000028 D2 88            [12] 1463 	setb	_IT0
                           00002A  1464 	C$main.c$115$1$28 ==.
                                   1465 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:115: SFRPAGE = UART0_PAGE;       // Direct the output to UART0
      00002A 75 84 00         [24] 1466 	mov	_SFRPAGE,#0x00
                           00002D  1467 	C$main.c$117$1$28 ==.
                                   1468 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:117: printf("\033[2J");          // Erase screen and move cursor to the home position.
      00002D 74r00            [12] 1469 	mov	a,#___str_0
      00002F C0 E0            [24] 1470 	push	acc
      000031 74s00            [12] 1471 	mov	a,#(___str_0 >> 8)
      000033 C0 E0            [24] 1472 	push	acc
      000035 74 80            [12] 1473 	mov	a,#0x80
      000037 C0 E0            [24] 1474 	push	acc
      000039 12r00r00         [24] 1475 	lcall	_printf
      00003C 15 81            [12] 1476 	dec	sp
      00003E 15 81            [12] 1477 	dec	sp
      000040 15 81            [12] 1478 	dec	sp
                           000042  1479 	C$main.c$118$1$28 ==.
                                   1480 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:118: printf("Hello darkness my old friend\n\n\r");
      000042 74r05            [12] 1481 	mov	a,#___str_1
      000044 C0 E0            [24] 1482 	push	acc
      000046 74s00            [12] 1483 	mov	a,#(___str_1 >> 8)
      000048 C0 E0            [24] 1484 	push	acc
      00004A 74 80            [12] 1485 	mov	a,#0x80
      00004C C0 E0            [24] 1486 	push	acc
      00004E 12r00r00         [24] 1487 	lcall	_printf
      000051 15 81            [12] 1488 	dec	sp
      000053 15 81            [12] 1489 	dec	sp
      000055 15 81            [12] 1490 	dec	sp
                           000057  1491 	C$main.c$121$1$28 ==.
                                   1492 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:121: SFRPAGE = CONFIG_PAGE;
      000057 75 84 0F         [24] 1493 	mov	_SFRPAGE,#0x0F
                           00005A  1494 	C$main.c$122$1$28 ==.
                                   1495 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:122: EX0     = 1;                // Enable Ext Int 0 only after everything is settled.
      00005A D2 A8            [12] 1496 	setb	_EX0
                           00005C  1497 	C$main.c$124$1$28 ==.
                                   1498 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:124: SFRPAGE = UART0_PAGE;
                           00005C  1499 	C$main.c$126$1$28 ==.
                                   1500 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:126: TR0_count = debounceCount = 0;
      00005C E4               [12] 1501 	clr	a
      00005D F5 84            [12] 1502 	mov	_SFRPAGE,a
      00005F F5*03            [12] 1503 	mov	_debounceCount,a
      000061 F5*04            [12] 1504 	mov	(_debounceCount + 1),a
      000063 F5*01            [12] 1505 	mov	_TR0_count,a
      000065 F5*02            [12] 1506 	mov	(_TR0_count + 1),a
                           000067  1507 	C$main.c$127$1$28 ==.
                                   1508 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:127: TR0 = 1;
      000067 D2 8C            [12] 1509 	setb	_TR0
                           000069  1510 	C$main.c$129$1$28 ==.
                                   1511 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:129: printf("Select answer type if you feel like it I don't tell you what to do\n\r");
      000069 74r25            [12] 1512 	mov	a,#___str_2
      00006B C0 E0            [24] 1513 	push	acc
      00006D 74s00            [12] 1514 	mov	a,#(___str_2 >> 8)
      00006F C0 E0            [24] 1515 	push	acc
      000071 74 80            [12] 1516 	mov	a,#0x80
      000073 C0 E0            [24] 1517 	push	acc
      000075 12r00r00         [24] 1518 	lcall	_printf
      000078 15 81            [12] 1519 	dec	sp
      00007A 15 81            [12] 1520 	dec	sp
      00007C 15 81            [12] 1521 	dec	sp
                           00007E  1522 	C$main.c$130$1$28 ==.
                                   1523 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:130: printf("1. Yes/No\n\r");
      00007E 74r6A            [12] 1524 	mov	a,#___str_3
      000080 C0 E0            [24] 1525 	push	acc
      000082 74s00            [12] 1526 	mov	a,#(___str_3 >> 8)
      000084 C0 E0            [24] 1527 	push	acc
      000086 74 80            [12] 1528 	mov	a,#0x80
      000088 C0 E0            [24] 1529 	push	acc
      00008A 12r00r00         [24] 1530 	lcall	_printf
      00008D 15 81            [12] 1531 	dec	sp
      00008F 15 81            [12] 1532 	dec	sp
      000091 15 81            [12] 1533 	dec	sp
                           000093  1534 	C$main.c$131$1$28 ==.
                                   1535 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:131: printf("2. True/False\n\r");
      000093 74r76            [12] 1536 	mov	a,#___str_4
      000095 C0 E0            [24] 1537 	push	acc
      000097 74s00            [12] 1538 	mov	a,#(___str_4 >> 8)
      000099 C0 E0            [24] 1539 	push	acc
      00009B 74 80            [12] 1540 	mov	a,#0x80
      00009D C0 E0            [24] 1541 	push	acc
      00009F 12r00r00         [24] 1542 	lcall	_printf
      0000A2 15 81            [12] 1543 	dec	sp
      0000A4 15 81            [12] 1544 	dec	sp
      0000A6 15 81            [12] 1545 	dec	sp
                           0000A8  1546 	C$main.c$132$1$28 ==.
                                   1547 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:132: printf("3. Random day of week\n\r");
      0000A8 74r86            [12] 1548 	mov	a,#___str_5
      0000AA C0 E0            [24] 1549 	push	acc
      0000AC 74s00            [12] 1550 	mov	a,#(___str_5 >> 8)
      0000AE C0 E0            [24] 1551 	push	acc
      0000B0 74 80            [12] 1552 	mov	a,#0x80
      0000B2 C0 E0            [24] 1553 	push	acc
      0000B4 12r00r00         [24] 1554 	lcall	_printf
      0000B7 15 81            [12] 1555 	dec	sp
      0000B9 15 81            [12] 1556 	dec	sp
      0000BB 15 81            [12] 1557 	dec	sp
                           0000BD  1558 	C$main.c$133$1$28 ==.
                                   1559 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:133: printf("4. Random number\n\r");
      0000BD 74r9E            [12] 1560 	mov	a,#___str_6
      0000BF C0 E0            [24] 1561 	push	acc
      0000C1 74s00            [12] 1562 	mov	a,#(___str_6 >> 8)
      0000C3 C0 E0            [24] 1563 	push	acc
      0000C5 74 80            [12] 1564 	mov	a,#0x80
      0000C7 C0 E0            [24] 1565 	push	acc
      0000C9 12r00r00         [24] 1566 	lcall	_printf
      0000CC 15 81            [12] 1567 	dec	sp
      0000CE 15 81            [12] 1568 	dec	sp
      0000D0 15 81            [12] 1569 	dec	sp
                           0000D2  1570 	C$main.c$134$1$28 ==.
                                   1571 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:134: printf("5. Random feels\n\r");
      0000D2 74rB1            [12] 1572 	mov	a,#___str_7
      0000D4 C0 E0            [24] 1573 	push	acc
      0000D6 74s00            [12] 1574 	mov	a,#(___str_7 >> 8)
      0000D8 C0 E0            [24] 1575 	push	acc
      0000DA 74 80            [12] 1576 	mov	a,#0x80
      0000DC C0 E0            [24] 1577 	push	acc
      0000DE 12r00r00         [24] 1578 	lcall	_printf
      0000E1 15 81            [12] 1579 	dec	sp
      0000E3 15 81            [12] 1580 	dec	sp
      0000E5 15 81            [12] 1581 	dec	sp
                           0000E7  1582 	C$main.c$136$1$28 ==.
                                   1583 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:136: while (1)                  
      0000E7                       1584 00102$:
                           0000E7  1585 	C$main.c$138$2$29 ==.
                                   1586 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:138: loop();
      0000E7 12r00rED         [24] 1587 	lcall	_loop
      0000EA 80 FB            [24] 1588 	sjmp	00102$
                           0000EC  1589 	C$main.c$140$1$28 ==.
                           0000EC  1590 	XG$main$0$0 ==.
      0000EC 22               [24] 1591 	ret
                                   1592 ;------------------------------------------------------------
                                   1593 ;Allocation info for local variables in function 'loop'
                                   1594 ;------------------------------------------------------------
                                   1595 ;lowerBound                Allocated with name '_loop_lowerBound_1_31'
                                   1596 ;upperBound                Allocated to registers r7 
                                   1597 ;temp                      Allocated to registers r5 
                                   1598 ;sloc0                     Allocated with name '_loop_sloc0_1_0'
                                   1599 ;------------------------------------------------------------
                           0000ED  1600 	G$loop$0$0 ==.
                           0000ED  1601 	C$main.c$142$1$28 ==.
                                   1602 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:142: char loop(void){
                                   1603 ;	-----------------------------------------
                                   1604 ;	 function loop
                                   1605 ;	-----------------------------------------
      0000ED                       1606 _loop:
                           0000ED  1607 	C$main.c$145$1$31 ==.
                                   1608 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:145: lowerBound = upperBound = 0;
      0000ED 7F 00            [12] 1609 	mov	r7,#0x00
                                   1610 ;	1-genFromRTrack replaced	mov	_loop_lowerBound_1_31,#0x00
      0000EF 8F*21            [24] 1611 	mov	_loop_lowerBound_1_31,r7
                           0000F1  1612 	C$main.c$148$1$31 ==.
                                   1613 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:148: choice = getchar();
      0000F1 C0 07            [24] 1614 	push	ar7
      0000F3 12r00r0A         [24] 1615 	lcall	_getchar
      0000F6 85 82*07         [24] 1616 	mov	_choice,dpl
                           0000F9  1617 	C$main.c$150$1$31 ==.
                                   1618 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:150: printf("\033[2J");
      0000F9 74r00            [12] 1619 	mov	a,#___str_0
      0000FB C0 E0            [24] 1620 	push	acc
      0000FD 74s00            [12] 1621 	mov	a,#(___str_0 >> 8)
      0000FF C0 E0            [24] 1622 	push	acc
      000101 74 80            [12] 1623 	mov	a,#0x80
      000103 C0 E0            [24] 1624 	push	acc
      000105 12r00r00         [24] 1625 	lcall	_printf
      000108 15 81            [12] 1626 	dec	sp
      00010A 15 81            [12] 1627 	dec	sp
      00010C 15 81            [12] 1628 	dec	sp
                           00010E  1629 	C$main.c$152$1$31 ==.
                                   1630 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:152: printf("Select answer type if you feel like it I don't tell you what to do\n\r");
      00010E 74r25            [12] 1631 	mov	a,#___str_2
      000110 C0 E0            [24] 1632 	push	acc
      000112 74s00            [12] 1633 	mov	a,#(___str_2 >> 8)
      000114 C0 E0            [24] 1634 	push	acc
      000116 74 80            [12] 1635 	mov	a,#0x80
      000118 C0 E0            [24] 1636 	push	acc
      00011A 12r00r00         [24] 1637 	lcall	_printf
      00011D 15 81            [12] 1638 	dec	sp
      00011F 15 81            [12] 1639 	dec	sp
      000121 15 81            [12] 1640 	dec	sp
                           000123  1641 	C$main.c$153$1$31 ==.
                                   1642 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:153: printf("1. Yes/No\n\r");
      000123 74r6A            [12] 1643 	mov	a,#___str_3
      000125 C0 E0            [24] 1644 	push	acc
      000127 74s00            [12] 1645 	mov	a,#(___str_3 >> 8)
      000129 C0 E0            [24] 1646 	push	acc
      00012B 74 80            [12] 1647 	mov	a,#0x80
      00012D C0 E0            [24] 1648 	push	acc
      00012F 12r00r00         [24] 1649 	lcall	_printf
      000132 15 81            [12] 1650 	dec	sp
      000134 15 81            [12] 1651 	dec	sp
      000136 15 81            [12] 1652 	dec	sp
                           000138  1653 	C$main.c$154$1$31 ==.
                                   1654 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:154: printf("2. True/False\n\r");
      000138 74r76            [12] 1655 	mov	a,#___str_4
      00013A C0 E0            [24] 1656 	push	acc
      00013C 74s00            [12] 1657 	mov	a,#(___str_4 >> 8)
      00013E C0 E0            [24] 1658 	push	acc
      000140 74 80            [12] 1659 	mov	a,#0x80
      000142 C0 E0            [24] 1660 	push	acc
      000144 12r00r00         [24] 1661 	lcall	_printf
      000147 15 81            [12] 1662 	dec	sp
      000149 15 81            [12] 1663 	dec	sp
      00014B 15 81            [12] 1664 	dec	sp
                           00014D  1665 	C$main.c$155$1$31 ==.
                                   1666 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:155: printf("3. Random day of week\n\r");
      00014D 74r86            [12] 1667 	mov	a,#___str_5
      00014F C0 E0            [24] 1668 	push	acc
      000151 74s00            [12] 1669 	mov	a,#(___str_5 >> 8)
      000153 C0 E0            [24] 1670 	push	acc
      000155 74 80            [12] 1671 	mov	a,#0x80
      000157 C0 E0            [24] 1672 	push	acc
      000159 12r00r00         [24] 1673 	lcall	_printf
      00015C 15 81            [12] 1674 	dec	sp
      00015E 15 81            [12] 1675 	dec	sp
      000160 15 81            [12] 1676 	dec	sp
                           000162  1677 	C$main.c$156$1$31 ==.
                                   1678 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:156: printf("4. Random number\n\r");
      000162 74r9E            [12] 1679 	mov	a,#___str_6
      000164 C0 E0            [24] 1680 	push	acc
      000166 74s00            [12] 1681 	mov	a,#(___str_6 >> 8)
      000168 C0 E0            [24] 1682 	push	acc
      00016A 74 80            [12] 1683 	mov	a,#0x80
      00016C C0 E0            [24] 1684 	push	acc
      00016E 12r00r00         [24] 1685 	lcall	_printf
      000171 15 81            [12] 1686 	dec	sp
      000173 15 81            [12] 1687 	dec	sp
      000175 15 81            [12] 1688 	dec	sp
                           000177  1689 	C$main.c$157$1$31 ==.
                                   1690 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:157: printf("5. Random feels\n\r");
      000177 74rB1            [12] 1691 	mov	a,#___str_7
      000179 C0 E0            [24] 1692 	push	acc
      00017B 74s00            [12] 1693 	mov	a,#(___str_7 >> 8)
      00017D C0 E0            [24] 1694 	push	acc
      00017F 74 80            [12] 1695 	mov	a,#0x80
      000181 C0 E0            [24] 1696 	push	acc
      000183 12r00r00         [24] 1697 	lcall	_printf
      000186 15 81            [12] 1698 	dec	sp
      000188 15 81            [12] 1699 	dec	sp
      00018A 15 81            [12] 1700 	dec	sp
      00018C D0 07            [24] 1701 	pop	ar7
                           00018E  1702 	C$main.c$159$1$31 ==.
                                   1703 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:159: switch(choice){
      00018E 74 31            [12] 1704 	mov	a,#0x31
      000190 B5*07 02         [24] 1705 	cjne	a,_choice,00158$
      000193 80 22            [24] 1706 	sjmp	00101$
      000195                       1707 00158$:
      000195 74 32            [12] 1708 	mov	a,#0x32
      000197 B5*07 02         [24] 1709 	cjne	a,_choice,00159$
      00019A 80 75            [24] 1710 	sjmp	00105$
      00019C                       1711 00159$:
      00019C 74 33            [12] 1712 	mov	a,#0x33
      00019E B5*07 03         [24] 1713 	cjne	a,_choice,00160$
      0001A1 02r02r6B         [24] 1714 	ljmp	00109$
      0001A4                       1715 00160$:
      0001A4 74 34            [12] 1716 	mov	a,#0x34
      0001A6 B5*07 03         [24] 1717 	cjne	a,_choice,00161$
      0001A9 02r02rC3         [24] 1718 	ljmp	00110$
      0001AC                       1719 00161$:
      0001AC 74 35            [12] 1720 	mov	a,#0x35
      0001AE B5*07 03         [24] 1721 	cjne	a,_choice,00162$
      0001B1 02r03r92         [24] 1722 	ljmp	00121$
      0001B4                       1723 00162$:
      0001B4 02r03r95         [24] 1724 	ljmp	00122$
                           0001B7  1725 	C$main.c$160$2$32 ==.
                                   1726 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:160: case '1':
      0001B7                       1727 00101$:
                           0001B7  1728 	C$main.c$161$2$32 ==.
                                   1729 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:161: random = rand() % 2;
      0001B7 12r03r99         [24] 1730 	lcall	_rand
      0001BA AA 82            [24] 1731 	mov	r2,dpl
      0001BC AB 83            [24] 1732 	mov	r3,dph
      0001BE AC F0            [24] 1733 	mov	r4,b
      0001C0 FD               [12] 1734 	mov	r5,a
      0001C1 75*00 02         [24] 1735 	mov	__modslong_PARM_2,#0x02
      0001C4 E4               [12] 1736 	clr	a
      0001C5 F5*01            [12] 1737 	mov	(__modslong_PARM_2 + 1),a
      0001C7 F5*02            [12] 1738 	mov	(__modslong_PARM_2 + 2),a
      0001C9 F5*03            [12] 1739 	mov	(__modslong_PARM_2 + 3),a
      0001CB 8A 82            [24] 1740 	mov	dpl,r2
      0001CD 8B 83            [24] 1741 	mov	dph,r3
      0001CF 8C F0            [24] 1742 	mov	b,r4
      0001D1 ED               [12] 1743 	mov	a,r5
      0001D2 12r00r00         [24] 1744 	lcall	__modslong
      0001D5 AA 82            [24] 1745 	mov	r2,dpl
      0001D7 AB 83            [24] 1746 	mov	r3,dph
      0001D9 AC F0            [24] 1747 	mov	r4,b
      0001DB FD               [12] 1748 	mov	r5,a
                           0001DC  1749 	C$main.c$162$2$32 ==.
                                   1750 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:162: if(random == 0) printf("Yes\n\r");
      0001DC EA               [12] 1751 	mov	a,r2
      0001DD F5*08            [12] 1752 	mov	_random,a
      0001DF 70 18            [24] 1753 	jnz	00103$
      0001E1 74rC3            [12] 1754 	mov	a,#___str_8
      0001E3 C0 E0            [24] 1755 	push	acc
      0001E5 74s00            [12] 1756 	mov	a,#(___str_8 >> 8)
      0001E7 C0 E0            [24] 1757 	push	acc
      0001E9 74 80            [12] 1758 	mov	a,#0x80
      0001EB C0 E0            [24] 1759 	push	acc
      0001ED 12r00r00         [24] 1760 	lcall	_printf
      0001F0 15 81            [12] 1761 	dec	sp
      0001F2 15 81            [12] 1762 	dec	sp
      0001F4 15 81            [12] 1763 	dec	sp
      0001F6 02r03r95         [24] 1764 	ljmp	00122$
      0001F9                       1765 00103$:
                           0001F9  1766 	C$main.c$163$2$32 ==.
                                   1767 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:163: else printf("No\n\r");
      0001F9 74rC9            [12] 1768 	mov	a,#___str_9
      0001FB C0 E0            [24] 1769 	push	acc
      0001FD 74s00            [12] 1770 	mov	a,#(___str_9 >> 8)
      0001FF C0 E0            [24] 1771 	push	acc
      000201 74 80            [12] 1772 	mov	a,#0x80
      000203 C0 E0            [24] 1773 	push	acc
      000205 12r00r00         [24] 1774 	lcall	_printf
      000208 15 81            [12] 1775 	dec	sp
      00020A 15 81            [12] 1776 	dec	sp
      00020C 15 81            [12] 1777 	dec	sp
                           00020E  1778 	C$main.c$164$2$32 ==.
                                   1779 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:164: break;
      00020E 02r03r95         [24] 1780 	ljmp	00122$
                           000211  1781 	C$main.c$165$2$32 ==.
                                   1782 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:165: case '2':
      000211                       1783 00105$:
                           000211  1784 	C$main.c$166$2$32 ==.
                                   1785 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:166: random = rand() % 2;
      000211 12r03r99         [24] 1786 	lcall	_rand
      000214 AA 82            [24] 1787 	mov	r2,dpl
      000216 AB 83            [24] 1788 	mov	r3,dph
      000218 AC F0            [24] 1789 	mov	r4,b
      00021A FD               [12] 1790 	mov	r5,a
      00021B 75*00 02         [24] 1791 	mov	__modslong_PARM_2,#0x02
      00021E E4               [12] 1792 	clr	a
      00021F F5*01            [12] 1793 	mov	(__modslong_PARM_2 + 1),a
      000221 F5*02            [12] 1794 	mov	(__modslong_PARM_2 + 2),a
      000223 F5*03            [12] 1795 	mov	(__modslong_PARM_2 + 3),a
      000225 8A 82            [24] 1796 	mov	dpl,r2
      000227 8B 83            [24] 1797 	mov	dph,r3
      000229 8C F0            [24] 1798 	mov	b,r4
      00022B ED               [12] 1799 	mov	a,r5
      00022C 12r00r00         [24] 1800 	lcall	__modslong
      00022F AA 82            [24] 1801 	mov	r2,dpl
      000231 AB 83            [24] 1802 	mov	r3,dph
      000233 AC F0            [24] 1803 	mov	r4,b
      000235 FD               [12] 1804 	mov	r5,a
                           000236  1805 	C$main.c$167$2$32 ==.
                                   1806 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:167: if(random == 0) printf("True\n\r");
      000236 EA               [12] 1807 	mov	a,r2
      000237 F5*08            [12] 1808 	mov	_random,a
      000239 70 18            [24] 1809 	jnz	00107$
      00023B 74rCE            [12] 1810 	mov	a,#___str_10
      00023D C0 E0            [24] 1811 	push	acc
      00023F 74s00            [12] 1812 	mov	a,#(___str_10 >> 8)
      000241 C0 E0            [24] 1813 	push	acc
      000243 74 80            [12] 1814 	mov	a,#0x80
      000245 C0 E0            [24] 1815 	push	acc
      000247 12r00r00         [24] 1816 	lcall	_printf
      00024A 15 81            [12] 1817 	dec	sp
      00024C 15 81            [12] 1818 	dec	sp
      00024E 15 81            [12] 1819 	dec	sp
      000250 02r03r95         [24] 1820 	ljmp	00122$
      000253                       1821 00107$:
                           000253  1822 	C$main.c$168$2$32 ==.
                                   1823 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:168: else printf("False\n\r");
      000253 74rD5            [12] 1824 	mov	a,#___str_11
      000255 C0 E0            [24] 1825 	push	acc
      000257 74s00            [12] 1826 	mov	a,#(___str_11 >> 8)
      000259 C0 E0            [24] 1827 	push	acc
      00025B 74 80            [12] 1828 	mov	a,#0x80
      00025D C0 E0            [24] 1829 	push	acc
      00025F 12r00r00         [24] 1830 	lcall	_printf
      000262 15 81            [12] 1831 	dec	sp
      000264 15 81            [12] 1832 	dec	sp
      000266 15 81            [12] 1833 	dec	sp
                           000268  1834 	C$main.c$169$2$32 ==.
                                   1835 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:169: break;
      000268 02r03r95         [24] 1836 	ljmp	00122$
                           00026B  1837 	C$main.c$170$2$32 ==.
                                   1838 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:170: case '3':
      00026B                       1839 00109$:
                           00026B  1840 	C$main.c$171$2$32 ==.
                                   1841 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:171: random = rand() % 7;
      00026B 12r03r99         [24] 1842 	lcall	_rand
      00026E AA 82            [24] 1843 	mov	r2,dpl
      000270 AB 83            [24] 1844 	mov	r3,dph
      000272 AC F0            [24] 1845 	mov	r4,b
      000274 FD               [12] 1846 	mov	r5,a
      000275 75*00 07         [24] 1847 	mov	__modslong_PARM_2,#0x07
      000278 E4               [12] 1848 	clr	a
      000279 F5*01            [12] 1849 	mov	(__modslong_PARM_2 + 1),a
      00027B F5*02            [12] 1850 	mov	(__modslong_PARM_2 + 2),a
      00027D F5*03            [12] 1851 	mov	(__modslong_PARM_2 + 3),a
      00027F 8A 82            [24] 1852 	mov	dpl,r2
      000281 8B 83            [24] 1853 	mov	dph,r3
      000283 8C F0            [24] 1854 	mov	b,r4
      000285 ED               [12] 1855 	mov	a,r5
      000286 12r00r00         [24] 1856 	lcall	__modslong
                           000289  1857 	C$main.c$172$2$32 ==.
                                   1858 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:172: printf(days[random]);
      000289 E5 82            [12] 1859 	mov	a,dpl
      00028B F5*08            [12] 1860 	mov	_random,a
      00028D 75 F0 03         [24] 1861 	mov	b,#0x03
      000290 A4               [48] 1862 	mul	ab
      000291 24r09            [12] 1863 	add	a,#_days
      000293 F9               [12] 1864 	mov	r1,a
      000294 87 03            [24] 1865 	mov	ar3,@r1
      000296 09               [12] 1866 	inc	r1
      000297 87 04            [24] 1867 	mov	ar4,@r1
      000299 09               [12] 1868 	inc	r1
      00029A 87 05            [24] 1869 	mov	ar5,@r1
      00029C C0 03            [24] 1870 	push	ar3
      00029E C0 04            [24] 1871 	push	ar4
      0002A0 C0 05            [24] 1872 	push	ar5
      0002A2 12r00r00         [24] 1873 	lcall	_printf
      0002A5 15 81            [12] 1874 	dec	sp
      0002A7 15 81            [12] 1875 	dec	sp
      0002A9 15 81            [12] 1876 	dec	sp
                           0002AB  1877 	C$main.c$173$2$32 ==.
                                   1878 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:173: printf("\n\r");
      0002AB 74rDD            [12] 1879 	mov	a,#___str_12
      0002AD C0 E0            [24] 1880 	push	acc
      0002AF 74s00            [12] 1881 	mov	a,#(___str_12 >> 8)
      0002B1 C0 E0            [24] 1882 	push	acc
      0002B3 74 80            [12] 1883 	mov	a,#0x80
      0002B5 C0 E0            [24] 1884 	push	acc
      0002B7 12r00r00         [24] 1885 	lcall	_printf
      0002BA 15 81            [12] 1886 	dec	sp
      0002BC 15 81            [12] 1887 	dec	sp
      0002BE 15 81            [12] 1888 	dec	sp
                           0002C0  1889 	C$main.c$174$2$32 ==.
                                   1890 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:174: break;
      0002C0 02r03r95         [24] 1891 	ljmp	00122$
                           0002C3  1892 	C$main.c$175$2$32 ==.
                                   1893 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:175: case '4':
      0002C3                       1894 00110$:
                           0002C3  1895 	C$main.c$176$2$32 ==.
                                   1896 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:176: printf("Lower bound: ");
      0002C3 C0 07            [24] 1897 	push	ar7
      0002C5 74rE0            [12] 1898 	mov	a,#___str_13
      0002C7 C0 E0            [24] 1899 	push	acc
      0002C9 74s00            [12] 1900 	mov	a,#(___str_13 >> 8)
      0002CB C0 E0            [24] 1901 	push	acc
      0002CD 74 80            [12] 1902 	mov	a,#0x80
      0002CF C0 E0            [24] 1903 	push	acc
      0002D1 12r00r00         [24] 1904 	lcall	_printf
      0002D4 15 81            [12] 1905 	dec	sp
      0002D6 15 81            [12] 1906 	dec	sp
      0002D8 15 81            [12] 1907 	dec	sp
      0002DA D0 07            [24] 1908 	pop	ar7
                           0002DC  1909 	C$main.c$177$2$32 ==.
                                   1910 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:177: while(1){
      0002DC                       1911 00114$:
                           0002DC  1912 	C$main.c$178$3$33 ==.
                                   1913 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:178: temp = getchar();
      0002DC C0 07            [24] 1914 	push	ar7
      0002DE 12r00r0A         [24] 1915 	lcall	_getchar
      0002E1 AD 82            [24] 1916 	mov	r5,dpl
      0002E3 D0 07            [24] 1917 	pop	ar7
                           0002E5  1918 	C$main.c$179$3$33 ==.
                                   1919 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:179: if(temp == 0x0D) break;
      0002E5 BD 0D 02         [24] 1920 	cjne	r5,#0x0D,00165$
      0002E8 80 0D            [24] 1921 	sjmp	00115$
      0002EA                       1922 00165$:
                           0002EA  1923 	C$main.c$180$3$33 ==.
                                   1924 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:180: lowerBound = lowerBound * 10 + temp - '0';
      0002EA E5*21            [12] 1925 	mov	a,_loop_lowerBound_1_31
      0002EC 75 F0 0A         [24] 1926 	mov	b,#0x0A
      0002EF A4               [48] 1927 	mul	ab
      0002F0 2D               [12] 1928 	add	a,r5
      0002F1 24 D0            [12] 1929 	add	a,#0xD0
      0002F3 F5*21            [12] 1930 	mov	_loop_lowerBound_1_31,a
      0002F5 80 E5            [24] 1931 	sjmp	00114$
      0002F7                       1932 00115$:
                           0002F7  1933 	C$main.c$182$2$32 ==.
                                   1934 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:182: printf("\n\rUpper bound: ");
      0002F7 C0 07            [24] 1935 	push	ar7
      0002F9 74rEE            [12] 1936 	mov	a,#___str_14
      0002FB C0 E0            [24] 1937 	push	acc
      0002FD 74s00            [12] 1938 	mov	a,#(___str_14 >> 8)
      0002FF C0 E0            [24] 1939 	push	acc
      000301 74 80            [12] 1940 	mov	a,#0x80
      000303 C0 E0            [24] 1941 	push	acc
      000305 12r00r00         [24] 1942 	lcall	_printf
      000308 15 81            [12] 1943 	dec	sp
      00030A 15 81            [12] 1944 	dec	sp
      00030C 15 81            [12] 1945 	dec	sp
      00030E D0 07            [24] 1946 	pop	ar7
                           000310  1947 	C$main.c$183$2$32 ==.
                                   1948 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:183: while(1){
      000310                       1949 00119$:
                           000310  1950 	C$main.c$184$3$34 ==.
                                   1951 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:184: temp = getchar();
      000310 C0 07            [24] 1952 	push	ar7
      000312 12r00r0A         [24] 1953 	lcall	_getchar
      000315 AD 82            [24] 1954 	mov	r5,dpl
      000317 D0 07            [24] 1955 	pop	ar7
                           000319  1956 	C$main.c$185$3$34 ==.
                                   1957 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:185: if(temp == 0x0D) break;
      000319 BD 0D 02         [24] 1958 	cjne	r5,#0x0D,00166$
      00031C 80 0B            [24] 1959 	sjmp	00120$
      00031E                       1960 00166$:
                           00031E  1961 	C$main.c$186$3$34 ==.
                                   1962 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:186: upperBound = upperBound * 10 + temp - '0';
      00031E EF               [12] 1963 	mov	a,r7
      00031F 75 F0 0A         [24] 1964 	mov	b,#0x0A
      000322 A4               [48] 1965 	mul	ab
      000323 2D               [12] 1966 	add	a,r5
      000324 24 D0            [12] 1967 	add	a,#0xD0
      000326 FF               [12] 1968 	mov	r7,a
      000327 80 E7            [24] 1969 	sjmp	00119$
      000329                       1970 00120$:
                           000329  1971 	C$main.c$188$2$32 ==.
                                   1972 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:188: random = (rand() % (upperBound+1 - lowerBound)) + lowerBound;
      000329 C0 07            [24] 1973 	push	ar7
      00032B 12r03r99         [24] 1974 	lcall	_rand
      00032E AA 82            [24] 1975 	mov	r2,dpl
      000330 AB 83            [24] 1976 	mov	r3,dph
      000332 AC F0            [24] 1977 	mov	r4,b
      000334 FD               [12] 1978 	mov	r5,a
      000335 D0 07            [24] 1979 	pop	ar7
      000337 EF               [12] 1980 	mov	a,r7
      000338 FE               [12] 1981 	mov	r6,a
      000339 33               [12] 1982 	rlc	a
      00033A 95 E0            [12] 1983 	subb	a,acc
      00033C FF               [12] 1984 	mov	r7,a
      00033D 74 01            [12] 1985 	mov	a,#0x01
      00033F 2E               [12] 1986 	add	a,r6
      000340 F5*22            [12] 1987 	mov	_loop_sloc0_1_0,a
      000342 E4               [12] 1988 	clr	a
      000343 3F               [12] 1989 	addc	a,r7
      000344 F5*23            [12] 1990 	mov	(_loop_sloc0_1_0 + 1),a
      000346 E5*21            [12] 1991 	mov	a,_loop_lowerBound_1_31
      000348 FE               [12] 1992 	mov	r6,a
      000349 33               [12] 1993 	rlc	a
      00034A 95 E0            [12] 1994 	subb	a,acc
      00034C FF               [12] 1995 	mov	r7,a
      00034D E5*22            [12] 1996 	mov	a,_loop_sloc0_1_0
      00034F C3               [12] 1997 	clr	c
      000350 9E               [12] 1998 	subb	a,r6
      000351 FE               [12] 1999 	mov	r6,a
      000352 E5*23            [12] 2000 	mov	a,(_loop_sloc0_1_0 + 1)
      000354 9F               [12] 2001 	subb	a,r7
      000355 8E*00            [24] 2002 	mov	__modslong_PARM_2,r6
      000357 F5*01            [12] 2003 	mov	(__modslong_PARM_2 + 1),a
      000359 33               [12] 2004 	rlc	a
      00035A 95 E0            [12] 2005 	subb	a,acc
      00035C F5*02            [12] 2006 	mov	(__modslong_PARM_2 + 2),a
      00035E F5*03            [12] 2007 	mov	(__modslong_PARM_2 + 3),a
      000360 8A 82            [24] 2008 	mov	dpl,r2
      000362 8B 83            [24] 2009 	mov	dph,r3
      000364 8C F0            [24] 2010 	mov	b,r4
      000366 ED               [12] 2011 	mov	a,r5
      000367 12r00r00         [24] 2012 	lcall	__modslong
      00036A AC 82            [24] 2013 	mov	r4,dpl
      00036C E5*21            [12] 2014 	mov	a,_loop_lowerBound_1_31
      00036E 2C               [12] 2015 	add	a,r4
                           00036F  2016 	C$main.c$189$2$32 ==.
                                   2017 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:189: printf("\n\r%d\n\r", random);
      00036F F5*08            [12] 2018 	mov	_random,a
      000371 AE*08            [24] 2019 	mov	r6,_random
      000373 33               [12] 2020 	rlc	a
      000374 95 E0            [12] 2021 	subb	a,acc
      000376 FF               [12] 2022 	mov	r7,a
      000377 C0 06            [24] 2023 	push	ar6
      000379 C0 07            [24] 2024 	push	ar7
      00037B 74rFE            [12] 2025 	mov	a,#___str_15
      00037D C0 E0            [24] 2026 	push	acc
      00037F 74s00            [12] 2027 	mov	a,#(___str_15 >> 8)
      000381 C0 E0            [24] 2028 	push	acc
      000383 74 80            [12] 2029 	mov	a,#0x80
      000385 C0 E0            [24] 2030 	push	acc
      000387 12r00r00         [24] 2031 	lcall	_printf
      00038A E5 81            [12] 2032 	mov	a,sp
      00038C 24 FB            [12] 2033 	add	a,#0xfb
      00038E F5 81            [12] 2034 	mov	sp,a
                           000390  2035 	C$main.c$190$2$32 ==.
                                   2036 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:190: break;
                           000390  2037 	C$main.c$191$2$32 ==.
                                   2038 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:191: case '5':
      000390 80 03            [24] 2039 	sjmp	00122$
      000392                       2040 00121$:
                           000392  2041 	C$main.c$192$2$32 ==.
                                   2042 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:192: printFeels();
      000392 12r04r7D         [24] 2043 	lcall	_printFeels
                           000395  2044 	C$main.c$195$1$31 ==.
                                   2045 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:195: }
      000395                       2046 00122$:
                           000395  2047 	C$main.c$197$1$31 ==.
                                   2048 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:197: return 0;
      000395 75 82 00         [24] 2049 	mov	dpl,#0x00
                           000398  2050 	C$main.c$198$1$31 ==.
                           000398  2051 	XG$loop$0$0 ==.
      000398 22               [24] 2052 	ret
                                   2053 ;------------------------------------------------------------
                                   2054 ;Allocation info for local variables in function 'rand'
                                   2055 ;------------------------------------------------------------
                           000399  2056 	G$rand$0$0 ==.
                           000399  2057 	C$main.c$201$1$31 ==.
                                   2058 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:201: long rand() {
                                   2059 ;	-----------------------------------------
                                   2060 ;	 function rand
                                   2061 ;	-----------------------------------------
      000399                       2062 _rand:
                           000399  2063 	C$main.c$202$1$35 ==.
                                   2064 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:202: seed++;
      000399 74 02            [12] 2065 	mov	a,#0x02
      00039B 25*1E            [12] 2066 	add	a,_seed
      00039D F5*1E            [12] 2067 	mov	_seed,a
      00039F E4               [12] 2068 	clr	a
      0003A0 35*1F            [12] 2069 	addc	a,(_seed + 1)
      0003A2 F5*1F            [12] 2070 	mov	(_seed + 1),a
                           0003A4  2071 	C$main.c$203$1$35 ==.
                                   2072 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:203: return ((long)*seed) << 16 | TR0_count; 
      0003A4 AD*1E            [24] 2073 	mov	r5,_seed
      0003A6 AE*1F            [24] 2074 	mov	r6,(_seed + 1)
      0003A8 AF*20            [24] 2075 	mov	r7,(_seed + 2)
      0003AA 8D 82            [24] 2076 	mov	dpl,r5
      0003AC 8E 83            [24] 2077 	mov	dph,r6
      0003AE 8F F0            [24] 2078 	mov	b,r7
      0003B0 12r00r00         [24] 2079 	lcall	__gptrget
      0003B3 FD               [12] 2080 	mov	r5,a
      0003B4 A3               [24] 2081 	inc	dptr
      0003B5 12r00r00         [24] 2082 	lcall	__gptrget
      0003B8 FC               [12] 2083 	mov	r4,a
      0003B9 8D 07            [24] 2084 	mov	ar7,r5
      0003BB 7E 00            [12] 2085 	mov	r6,#0x00
      0003BD 7D 00            [12] 2086 	mov	r5,#0x00
      0003BF A8*01            [24] 2087 	mov	r0,_TR0_count
      0003C1 A9*02            [24] 2088 	mov	r1,(_TR0_count + 1)
      0003C3 E4               [12] 2089 	clr	a
      0003C4 FA               [12] 2090 	mov	r2,a
      0003C5 FB               [12] 2091 	mov	r3,a
      0003C6 E8               [12] 2092 	mov	a,r0
      0003C7 42 05            [12] 2093 	orl	ar5,a
      0003C9 E9               [12] 2094 	mov	a,r1
      0003CA 42 06            [12] 2095 	orl	ar6,a
      0003CC EA               [12] 2096 	mov	a,r2
      0003CD 42 07            [12] 2097 	orl	ar7,a
      0003CF EB               [12] 2098 	mov	a,r3
      0003D0 42 04            [12] 2099 	orl	ar4,a
      0003D2 8D 82            [24] 2100 	mov	dpl,r5
      0003D4 8E 83            [24] 2101 	mov	dph,r6
      0003D6 8F F0            [24] 2102 	mov	b,r7
      0003D8 EC               [12] 2103 	mov	a,r4
                           0003D9  2104 	C$main.c$204$1$35 ==.
                           0003D9  2105 	XG$rand$0$0 ==.
      0003D9 22               [24] 2106 	ret
                                   2107 ;------------------------------------------------------------
                                   2108 ;Allocation info for local variables in function 'rock'
                                   2109 ;------------------------------------------------------------
                                   2110 ;col                       Allocated to registers r7 
                                   2111 ;i                         Allocated to registers 
                                   2112 ;j                         Allocated to registers 
                                   2113 ;------------------------------------------------------------
                           0003DA  2114 	G$rock$0$0 ==.
                           0003DA  2115 	C$main.c$206$1$35 ==.
                                   2116 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:206: const char* rock(char col){
                                   2117 ;	-----------------------------------------
                                   2118 ;	 function rock
                                   2119 ;	-----------------------------------------
      0003DA                       2120 _rock:
      0003DA AF 82            [24] 2121 	mov	r7,dpl
                           0003DC  2122 	C$main.c$209$1$37 ==.
                                   2123 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:209: for(i=0; i<24; i++) {
      0003DC 7E 00            [12] 2124 	mov	r6,#0x00
      0003DE                       2125 00106$:
                           0003DE  2126 	C$main.c$210$2$38 ==.
                                   2127 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:210: for(j=0; j<col; j++) printf("\033[C");
      0003DE 7D 00            [12] 2128 	mov	r5,#0x00
      0003E0                       2129 00104$:
      0003E0 C3               [12] 2130 	clr	c
      0003E1 ED               [12] 2131 	mov	a,r5
      0003E2 64 80            [12] 2132 	xrl	a,#0x80
      0003E4 8F F0            [24] 2133 	mov	b,r7
      0003E6 63 F0 80         [24] 2134 	xrl	b,#0x80
      0003E9 95 F0            [12] 2135 	subb	a,b
      0003EB 50 24            [24] 2136 	jnc	00101$
      0003ED C0 07            [24] 2137 	push	ar7
      0003EF C0 06            [24] 2138 	push	ar6
      0003F1 C0 05            [24] 2139 	push	ar5
      0003F3 74r05            [12] 2140 	mov	a,#___str_16
      0003F5 C0 E0            [24] 2141 	push	acc
      0003F7 74s01            [12] 2142 	mov	a,#(___str_16 >> 8)
      0003F9 C0 E0            [24] 2143 	push	acc
      0003FB 74 80            [12] 2144 	mov	a,#0x80
      0003FD C0 E0            [24] 2145 	push	acc
      0003FF 12r00r00         [24] 2146 	lcall	_printf
      000402 15 81            [12] 2147 	dec	sp
      000404 15 81            [12] 2148 	dec	sp
      000406 15 81            [12] 2149 	dec	sp
      000408 D0 05            [24] 2150 	pop	ar5
      00040A D0 06            [24] 2151 	pop	ar6
      00040C D0 07            [24] 2152 	pop	ar7
      00040E 0D               [12] 2153 	inc	r5
      00040F 80 CF            [24] 2154 	sjmp	00104$
      000411                       2155 00101$:
                           000411  2156 	C$main.c$211$2$38 ==.
                                   2157 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:211: printf(guitar[i]); printf("\n\r");
      000411 C2 D5            [12] 2158 	clr	F0
      000413 75 F0 03         [24] 2159 	mov	b,#0x03
      000416 EE               [12] 2160 	mov	a,r6
      000417 30 E7 04         [24] 2161 	jnb	acc.7,00125$
      00041A B2 D5            [12] 2162 	cpl	F0
      00041C F4               [12] 2163 	cpl	a
      00041D 04               [12] 2164 	inc	a
      00041E                       2165 00125$:
      00041E A4               [48] 2166 	mul	ab
      00041F 30 D5 0A         [24] 2167 	jnb	F0,00126$
      000422 F4               [12] 2168 	cpl	a
      000423 24 01            [12] 2169 	add	a,#0x01
      000425 C5 F0            [12] 2170 	xch	a,b
      000427 F4               [12] 2171 	cpl	a
      000428 34 00            [12] 2172 	addc	a,#0x00
      00042A C5 F0            [12] 2173 	xch	a,b
      00042C                       2174 00126$:
      00042C 24r00            [12] 2175 	add	a,#_guitar
      00042E F5 82            [12] 2176 	mov	dpl,a
      000430 74s00            [12] 2177 	mov	a,#(_guitar >> 8)
      000432 35 F0            [12] 2178 	addc	a,b
      000434 F5 83            [12] 2179 	mov	dph,a
      000436 E0               [24] 2180 	movx	a,@dptr
      000437 FB               [12] 2181 	mov	r3,a
      000438 A3               [24] 2182 	inc	dptr
      000439 E0               [24] 2183 	movx	a,@dptr
      00043A FC               [12] 2184 	mov	r4,a
      00043B A3               [24] 2185 	inc	dptr
      00043C E0               [24] 2186 	movx	a,@dptr
      00043D FD               [12] 2187 	mov	r5,a
      00043E C0 07            [24] 2188 	push	ar7
      000440 C0 06            [24] 2189 	push	ar6
      000442 C0 03            [24] 2190 	push	ar3
      000444 C0 04            [24] 2191 	push	ar4
      000446 C0 05            [24] 2192 	push	ar5
      000448 12r00r00         [24] 2193 	lcall	_printf
      00044B 15 81            [12] 2194 	dec	sp
      00044D 15 81            [12] 2195 	dec	sp
      00044F 15 81            [12] 2196 	dec	sp
      000451 74rDD            [12] 2197 	mov	a,#___str_12
      000453 C0 E0            [24] 2198 	push	acc
      000455 74s00            [12] 2199 	mov	a,#(___str_12 >> 8)
      000457 C0 E0            [24] 2200 	push	acc
      000459 74 80            [12] 2201 	mov	a,#0x80
      00045B C0 E0            [24] 2202 	push	acc
      00045D 12r00r00         [24] 2203 	lcall	_printf
      000460 15 81            [12] 2204 	dec	sp
      000462 15 81            [12] 2205 	dec	sp
      000464 15 81            [12] 2206 	dec	sp
      000466 D0 06            [24] 2207 	pop	ar6
      000468 D0 07            [24] 2208 	pop	ar7
                           00046A  2209 	C$main.c$209$1$37 ==.
                                   2210 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:209: for(i=0; i<24; i++) {
      00046A 0E               [12] 2211 	inc	r6
      00046B C3               [12] 2212 	clr	c
      00046C EE               [12] 2213 	mov	a,r6
      00046D 64 80            [12] 2214 	xrl	a,#0x80
      00046F 94 98            [12] 2215 	subb	a,#0x98
      000471 50 03            [24] 2216 	jnc	00127$
      000473 02r03rDE         [24] 2217 	ljmp	00106$
      000476                       2218 00127$:
                           000476  2219 	C$main.c$213$1$37 ==.
                                   2220 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:213: return "Ooooo yeh";
      000476 90r01r09         [24] 2221 	mov	dptr,#___str_17
      000479 75 F0 80         [24] 2222 	mov	b,#0x80
                           00047C  2223 	C$main.c$214$1$37 ==.
                           00047C  2224 	XG$rock$0$0 ==.
      00047C 22               [24] 2225 	ret
                                   2226 ;------------------------------------------------------------
                                   2227 ;Allocation info for local variables in function 'printFeels'
                                   2228 ;------------------------------------------------------------
                                   2229 ;i                         Allocated to registers r7 
                                   2230 ;row                       Allocated to registers r3 
                                   2231 ;col                       Allocated to registers r2 
                                   2232 ;buffer                    Allocated with name '_printFeels_buffer_1_39'
                                   2233 ;------------------------------------------------------------
                           00047D  2234 	G$printFeels$0$0 ==.
                           00047D  2235 	C$main.c$216$1$37 ==.
                                   2236 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:216: void printFeels(){
                                   2237 ;	-----------------------------------------
                                   2238 ;	 function printFeels
                                   2239 ;	-----------------------------------------
      00047D                       2240 _printFeels:
                           00047D  2241 	C$main.c$219$1$39 ==.
                                   2242 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:219: buffer[0] = '\033';
      00047D 75*24 1B         [24] 2243 	mov	_printFeels_buffer_1_39,#0x1B
                           000480  2244 	C$main.c$220$1$39 ==.
                                   2245 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:220: buffer[1] = '[';
      000480 75*25 5B         [24] 2246 	mov	(_printFeels_buffer_1_39 + 0x0001),#0x5B
                           000483  2247 	C$main.c$221$1$39 ==.
                                   2248 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:221: buffer[3] = ';';
      000483 75*27 3B         [24] 2249 	mov	(_printFeels_buffer_1_39 + 0x0003),#0x3B
                           000486  2250 	C$main.c$222$1$39 ==.
                                   2251 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:222: buffer[5] = 'H';
      000486 75*29 48         [24] 2252 	mov	(_printFeels_buffer_1_39 + 0x0005),#0x48
                           000489  2253 	C$main.c$224$1$39 ==.
                                   2254 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:224: for(i=0; i<100; i++){
      000489 7F 00            [12] 2255 	mov	r7,#0x00
      00048B                       2256 00113$:
                           00048B  2257 	C$main.c$225$2$40 ==.
                                   2258 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:225: startTime = TR0_count;
      00048B 85*01*05         [24] 2259 	mov	_startTime,_TR0_count
      00048E 85*02*06         [24] 2260 	mov	(_startTime + 1),(_TR0_count + 1)
                           000491  2261 	C$main.c$227$2$40 ==.
                                   2262 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:227: row = rand() % 9 + 1;
      000491 C0 07            [24] 2263 	push	ar7
      000493 12r03r99         [24] 2264 	lcall	_rand
      000496 AB 82            [24] 2265 	mov	r3,dpl
      000498 AC 83            [24] 2266 	mov	r4,dph
      00049A AD F0            [24] 2267 	mov	r5,b
      00049C FE               [12] 2268 	mov	r6,a
      00049D 75*00 09         [24] 2269 	mov	__modslong_PARM_2,#0x09
      0004A0 E4               [12] 2270 	clr	a
      0004A1 F5*01            [12] 2271 	mov	(__modslong_PARM_2 + 1),a
      0004A3 F5*02            [12] 2272 	mov	(__modslong_PARM_2 + 2),a
      0004A5 F5*03            [12] 2273 	mov	(__modslong_PARM_2 + 3),a
      0004A7 8B 82            [24] 2274 	mov	dpl,r3
      0004A9 8C 83            [24] 2275 	mov	dph,r4
      0004AB 8D F0            [24] 2276 	mov	b,r5
      0004AD EE               [12] 2277 	mov	a,r6
      0004AE 12r00r00         [24] 2278 	lcall	__modslong
      0004B1 AB 82            [24] 2279 	mov	r3,dpl
      0004B3 0B               [12] 2280 	inc	r3
                           0004B4  2281 	C$main.c$228$2$40 ==.
                                   2282 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:228: col = rand() % 9 + 1;	
      0004B4 C0 03            [24] 2283 	push	ar3
      0004B6 12r03r99         [24] 2284 	lcall	_rand
      0004B9 AA 82            [24] 2285 	mov	r2,dpl
      0004BB AC 83            [24] 2286 	mov	r4,dph
      0004BD AD F0            [24] 2287 	mov	r5,b
      0004BF FE               [12] 2288 	mov	r6,a
      0004C0 75*00 09         [24] 2289 	mov	__modslong_PARM_2,#0x09
      0004C3 E4               [12] 2290 	clr	a
      0004C4 F5*01            [12] 2291 	mov	(__modslong_PARM_2 + 1),a
      0004C6 F5*02            [12] 2292 	mov	(__modslong_PARM_2 + 2),a
      0004C8 F5*03            [12] 2293 	mov	(__modslong_PARM_2 + 3),a
      0004CA 8A 82            [24] 2294 	mov	dpl,r2
      0004CC 8C 83            [24] 2295 	mov	dph,r4
      0004CE 8D F0            [24] 2296 	mov	b,r5
      0004D0 EE               [12] 2297 	mov	a,r6
      0004D1 12r00r00         [24] 2298 	lcall	__modslong
      0004D4 AA 82            [24] 2299 	mov	r2,dpl
      0004D6 D0 03            [24] 2300 	pop	ar3
      0004D8 0A               [12] 2301 	inc	r2
                           0004D9  2302 	C$main.c$230$2$40 ==.
                                   2303 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:230: buffer[2] = row + '0';
      0004D9 74 30            [12] 2304 	mov	a,#0x30
      0004DB 2B               [12] 2305 	add	a,r3
      0004DC F5*26            [12] 2306 	mov	(_printFeels_buffer_1_39 + 0x0002),a
                           0004DE  2307 	C$main.c$231$2$40 ==.
                                   2308 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:231: buffer[4] = col + '0';
      0004DE 74 30            [12] 2309 	mov	a,#0x30
      0004E0 2A               [12] 2310 	add	a,r2
      0004E1 F5*28            [12] 2311 	mov	(_printFeels_buffer_1_39 + 0x0004),a
                           0004E3  2312 	C$main.c$232$2$40 ==.
                                   2313 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:232: printf((const char*) buffer);
      0004E3 74r24            [12] 2314 	mov	a,#_printFeels_buffer_1_39
      0004E5 C0 E0            [24] 2315 	push	acc
      0004E7 74s00            [12] 2316 	mov	a,#(_printFeels_buffer_1_39 >> 8)
      0004E9 C0 E0            [24] 2317 	push	acc
      0004EB 74 40            [12] 2318 	mov	a,#0x40
      0004ED C0 E0            [24] 2319 	push	acc
      0004EF 12r00r00         [24] 2320 	lcall	_printf
      0004F2 15 81            [12] 2321 	dec	sp
      0004F4 15 81            [12] 2322 	dec	sp
      0004F6 15 81            [12] 2323 	dec	sp
                           0004F8  2324 	C$main.c$234$2$40 ==.
                                   2325 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:234: if(rand() % 2 == 0) printf("\033[10B");
      0004F8 12r03r99         [24] 2326 	lcall	_rand
      0004FB AB 82            [24] 2327 	mov	r3,dpl
      0004FD AC 83            [24] 2328 	mov	r4,dph
      0004FF AD F0            [24] 2329 	mov	r5,b
      000501 FE               [12] 2330 	mov	r6,a
      000502 75*00 02         [24] 2331 	mov	__modslong_PARM_2,#0x02
      000505 E4               [12] 2332 	clr	a
      000506 F5*01            [12] 2333 	mov	(__modslong_PARM_2 + 1),a
      000508 F5*02            [12] 2334 	mov	(__modslong_PARM_2 + 2),a
      00050A F5*03            [12] 2335 	mov	(__modslong_PARM_2 + 3),a
      00050C 8B 82            [24] 2336 	mov	dpl,r3
      00050E 8C 83            [24] 2337 	mov	dph,r4
      000510 8D F0            [24] 2338 	mov	b,r5
      000512 EE               [12] 2339 	mov	a,r6
      000513 12r00r00         [24] 2340 	lcall	__modslong
      000516 AB 82            [24] 2341 	mov	r3,dpl
      000518 AC 83            [24] 2342 	mov	r4,dph
      00051A AD F0            [24] 2343 	mov	r5,b
      00051C FE               [12] 2344 	mov	r6,a
      00051D D0 07            [24] 2345 	pop	ar7
      00051F EB               [12] 2346 	mov	a,r3
      000520 4C               [12] 2347 	orl	a,r4
      000521 4D               [12] 2348 	orl	a,r5
      000522 4E               [12] 2349 	orl	a,r6
      000523 70 19            [24] 2350 	jnz	00102$
      000525 C0 07            [24] 2351 	push	ar7
      000527 74r13            [12] 2352 	mov	a,#___str_18
      000529 C0 E0            [24] 2353 	push	acc
      00052B 74s01            [12] 2354 	mov	a,#(___str_18 >> 8)
      00052D C0 E0            [24] 2355 	push	acc
      00052F 74 80            [12] 2356 	mov	a,#0x80
      000531 C0 E0            [24] 2357 	push	acc
      000533 12r00r00         [24] 2358 	lcall	_printf
      000536 15 81            [12] 2359 	dec	sp
      000538 15 81            [12] 2360 	dec	sp
      00053A 15 81            [12] 2361 	dec	sp
      00053C D0 07            [24] 2362 	pop	ar7
      00053E                       2363 00102$:
                           00053E  2364 	C$main.c$236$2$40 ==.
                                   2365 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:236: printf(quotes[rand() % 21]);
      00053E C0 07            [24] 2366 	push	ar7
      000540 12r03r99         [24] 2367 	lcall	_rand
      000543 AB 82            [24] 2368 	mov	r3,dpl
      000545 AC 83            [24] 2369 	mov	r4,dph
      000547 AD F0            [24] 2370 	mov	r5,b
      000549 FE               [12] 2371 	mov	r6,a
      00054A 75*00 15         [24] 2372 	mov	__modslong_PARM_2,#0x15
      00054D E4               [12] 2373 	clr	a
      00054E F5*01            [12] 2374 	mov	(__modslong_PARM_2 + 1),a
      000550 F5*02            [12] 2375 	mov	(__modslong_PARM_2 + 2),a
      000552 F5*03            [12] 2376 	mov	(__modslong_PARM_2 + 3),a
      000554 8B 82            [24] 2377 	mov	dpl,r3
      000556 8C 83            [24] 2378 	mov	dph,r4
      000558 8D F0            [24] 2379 	mov	b,r5
      00055A EE               [12] 2380 	mov	a,r6
      00055B 12r00r00         [24] 2381 	lcall	__modslong
      00055E 85 82*00         [24] 2382 	mov	__mullong_PARM_2,dpl
      000561 85 83*01         [24] 2383 	mov	(__mullong_PARM_2 + 1),dph
      000564 85 F0*02         [24] 2384 	mov	(__mullong_PARM_2 + 2),b
      000567 F5*03            [12] 2385 	mov	(__mullong_PARM_2 + 3),a
      000569 90 00 03         [24] 2386 	mov	dptr,#(0x03&0x00ff)
      00056C E4               [12] 2387 	clr	a
      00056D F5 F0            [12] 2388 	mov	b,a
      00056F 12r00r00         [24] 2389 	lcall	__mullong
      000572 AB 82            [24] 2390 	mov	r3,dpl
      000574 AC 83            [24] 2391 	mov	r4,dph
      000576 EB               [12] 2392 	mov	a,r3
      000577 24r48            [12] 2393 	add	a,#_quotes
      000579 F5 82            [12] 2394 	mov	dpl,a
      00057B EC               [12] 2395 	mov	a,r4
      00057C 34s00            [12] 2396 	addc	a,#(_quotes >> 8)
      00057E F5 83            [12] 2397 	mov	dph,a
      000580 E0               [24] 2398 	movx	a,@dptr
      000581 FC               [12] 2399 	mov	r4,a
      000582 A3               [24] 2400 	inc	dptr
      000583 E0               [24] 2401 	movx	a,@dptr
      000584 FD               [12] 2402 	mov	r5,a
      000585 A3               [24] 2403 	inc	dptr
      000586 E0               [24] 2404 	movx	a,@dptr
      000587 FE               [12] 2405 	mov	r6,a
      000588 C0 04            [24] 2406 	push	ar4
      00058A C0 05            [24] 2407 	push	ar5
      00058C C0 06            [24] 2408 	push	ar6
      00058E 12r00r00         [24] 2409 	lcall	_printf
      000591 15 81            [12] 2410 	dec	sp
      000593 15 81            [12] 2411 	dec	sp
      000595 15 81            [12] 2412 	dec	sp
                           000597  2413 	C$main.c$238$2$40 ==.
                                   2414 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:238: if(rand() % 4 == 0) printf("\033D");
      000597 12r03r99         [24] 2415 	lcall	_rand
      00059A AB 82            [24] 2416 	mov	r3,dpl
      00059C AC 83            [24] 2417 	mov	r4,dph
      00059E AD F0            [24] 2418 	mov	r5,b
      0005A0 FE               [12] 2419 	mov	r6,a
      0005A1 75*00 04         [24] 2420 	mov	__modslong_PARM_2,#0x04
      0005A4 E4               [12] 2421 	clr	a
      0005A5 F5*01            [12] 2422 	mov	(__modslong_PARM_2 + 1),a
      0005A7 F5*02            [12] 2423 	mov	(__modslong_PARM_2 + 2),a
      0005A9 F5*03            [12] 2424 	mov	(__modslong_PARM_2 + 3),a
      0005AB 8B 82            [24] 2425 	mov	dpl,r3
      0005AD 8C 83            [24] 2426 	mov	dph,r4
      0005AF 8D F0            [24] 2427 	mov	b,r5
      0005B1 EE               [12] 2428 	mov	a,r6
      0005B2 12r00r00         [24] 2429 	lcall	__modslong
      0005B5 AB 82            [24] 2430 	mov	r3,dpl
      0005B7 AC 83            [24] 2431 	mov	r4,dph
      0005B9 AD F0            [24] 2432 	mov	r5,b
      0005BB FE               [12] 2433 	mov	r6,a
      0005BC D0 07            [24] 2434 	pop	ar7
      0005BE EB               [12] 2435 	mov	a,r3
      0005BF 4C               [12] 2436 	orl	a,r4
      0005C0 4D               [12] 2437 	orl	a,r5
      0005C1 4E               [12] 2438 	orl	a,r6
      0005C2 70 19            [24] 2439 	jnz	00105$
      0005C4 C0 07            [24] 2440 	push	ar7
      0005C6 74r19            [12] 2441 	mov	a,#___str_19
      0005C8 C0 E0            [24] 2442 	push	acc
      0005CA 74s01            [12] 2443 	mov	a,#(___str_19 >> 8)
      0005CC C0 E0            [24] 2444 	push	acc
      0005CE 74 80            [12] 2445 	mov	a,#0x80
      0005D0 C0 E0            [24] 2446 	push	acc
      0005D2 12r00r00         [24] 2447 	lcall	_printf
      0005D5 15 81            [12] 2448 	dec	sp
      0005D7 15 81            [12] 2449 	dec	sp
      0005D9 15 81            [12] 2450 	dec	sp
      0005DB D0 07            [24] 2451 	pop	ar7
                           0005DD  2452 	C$main.c$240$2$40 ==.
                                   2453 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:240: while(TR0_count - startTime < 20);
      0005DD                       2454 00105$:
      0005DD E5*01            [12] 2455 	mov	a,_TR0_count
      0005DF C3               [12] 2456 	clr	c
      0005E0 95*05            [12] 2457 	subb	a,_startTime
      0005E2 FD               [12] 2458 	mov	r5,a
      0005E3 E5*02            [12] 2459 	mov	a,(_TR0_count + 1)
      0005E5 95*06            [12] 2460 	subb	a,(_startTime + 1)
      0005E7 FE               [12] 2461 	mov	r6,a
      0005E8 C3               [12] 2462 	clr	c
      0005E9 ED               [12] 2463 	mov	a,r5
      0005EA 94 14            [12] 2464 	subb	a,#0x14
      0005EC EE               [12] 2465 	mov	a,r6
      0005ED 94 00            [12] 2466 	subb	a,#0x00
      0005EF 40 EC            [24] 2467 	jc	00105$
                           0005F1  2468 	C$main.c$224$1$39 ==.
                                   2469 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:224: for(i=0; i<100; i++){
      0005F1 0F               [12] 2470 	inc	r7
      0005F2 C3               [12] 2471 	clr	c
      0005F3 EF               [12] 2472 	mov	a,r7
      0005F4 64 80            [12] 2473 	xrl	a,#0x80
      0005F6 94 E4            [12] 2474 	subb	a,#0xe4
      0005F8 50 03            [24] 2475 	jnc	00154$
      0005FA 02r04r8B         [24] 2476 	ljmp	00113$
      0005FD                       2477 00154$:
                           0005FD  2478 	C$main.c$242$1$39 ==.
                                   2479 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:242: for(i=0; i<50; i++){
      0005FD 7F 00            [12] 2480 	mov	r7,#0x00
      0005FF                       2481 00115$:
                           0005FF  2482 	C$main.c$243$2$41 ==.
                                   2483 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:243: startTime = TR0_count;
      0005FF 85*01*05         [24] 2484 	mov	_startTime,_TR0_count
      000602 85*02*06         [24] 2485 	mov	(_startTime + 1),(_TR0_count + 1)
                           000605  2486 	C$main.c$245$2$41 ==.
                                   2487 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:245: printf("\033[2J");
      000605 C0 07            [24] 2488 	push	ar7
      000607 74r00            [12] 2489 	mov	a,#___str_0
      000609 C0 E0            [24] 2490 	push	acc
      00060B 74s00            [12] 2491 	mov	a,#(___str_0 >> 8)
      00060D C0 E0            [24] 2492 	push	acc
      00060F 74 80            [12] 2493 	mov	a,#0x80
      000611 C0 E0            [24] 2494 	push	acc
      000613 12r00r00         [24] 2495 	lcall	_printf
      000616 15 81            [12] 2496 	dec	sp
      000618 15 81            [12] 2497 	dec	sp
      00061A 15 81            [12] 2498 	dec	sp
      00061C D0 07            [24] 2499 	pop	ar7
                           00061E  2500 	C$main.c$247$2$41 ==.
                                   2501 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:247: rock(i);
      00061E 8F 82            [24] 2502 	mov	dpl,r7
      000620 C0 07            [24] 2503 	push	ar7
      000622 12r03rDA         [24] 2504 	lcall	_rock
      000625 D0 07            [24] 2505 	pop	ar7
                           000627  2506 	C$main.c$249$2$41 ==.
                                   2507 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:249: while(TR0_count - startTime < 30);
      000627                       2508 00109$:
      000627 E5*01            [12] 2509 	mov	a,_TR0_count
      000629 C3               [12] 2510 	clr	c
      00062A 95*05            [12] 2511 	subb	a,_startTime
      00062C FD               [12] 2512 	mov	r5,a
      00062D E5*02            [12] 2513 	mov	a,(_TR0_count + 1)
      00062F 95*06            [12] 2514 	subb	a,(_startTime + 1)
      000631 FE               [12] 2515 	mov	r6,a
      000632 C3               [12] 2516 	clr	c
      000633 ED               [12] 2517 	mov	a,r5
      000634 94 1E            [12] 2518 	subb	a,#0x1E
      000636 EE               [12] 2519 	mov	a,r6
      000637 94 00            [12] 2520 	subb	a,#0x00
      000639 40 EC            [24] 2521 	jc	00109$
                           00063B  2522 	C$main.c$242$1$39 ==.
                                   2523 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:242: for(i=0; i<50; i++){
      00063B 0F               [12] 2524 	inc	r7
      00063C C3               [12] 2525 	clr	c
      00063D EF               [12] 2526 	mov	a,r7
      00063E 64 80            [12] 2527 	xrl	a,#0x80
      000640 94 B2            [12] 2528 	subb	a,#0xb2
      000642 40 BB            [24] 2529 	jc	00115$
                           000644  2530 	C$main.c$251$1$39 ==.
                                   2531 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:251: printf("\033[5;3HDon't let your");
      000644 74r1C            [12] 2532 	mov	a,#___str_20
      000646 C0 E0            [24] 2533 	push	acc
      000648 74s01            [12] 2534 	mov	a,#(___str_20 >> 8)
      00064A C0 E0            [24] 2535 	push	acc
      00064C 74 80            [12] 2536 	mov	a,#0x80
      00064E C0 E0            [24] 2537 	push	acc
      000650 12r00r00         [24] 2538 	lcall	_printf
      000653 15 81            [12] 2539 	dec	sp
      000655 15 81            [12] 2540 	dec	sp
      000657 15 81            [12] 2541 	dec	sp
                           000659  2542 	C$main.c$252$1$39 ==.
                                   2543 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:252: printf("\033[6;3H dreams be memes");
      000659 74r31            [12] 2544 	mov	a,#___str_21
      00065B C0 E0            [24] 2545 	push	acc
      00065D 74s01            [12] 2546 	mov	a,#(___str_21 >> 8)
      00065F C0 E0            [24] 2547 	push	acc
      000661 74 80            [12] 2548 	mov	a,#0x80
      000663 C0 E0            [24] 2549 	push	acc
      000665 12r00r00         [24] 2550 	lcall	_printf
      000668 15 81            [12] 2551 	dec	sp
      00066A 15 81            [12] 2552 	dec	sp
      00066C 15 81            [12] 2553 	dec	sp
                           00066E  2554 	C$main.c$253$1$39 ==.
                                   2555 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:253: printf("\033[7;3H-Garfunkel & Simon");
      00066E 74r48            [12] 2556 	mov	a,#___str_22
      000670 C0 E0            [24] 2557 	push	acc
      000672 74s01            [12] 2558 	mov	a,#(___str_22 >> 8)
      000674 C0 E0            [24] 2559 	push	acc
      000676 74 80            [12] 2560 	mov	a,#0x80
      000678 C0 E0            [24] 2561 	push	acc
      00067A 12r00r00         [24] 2562 	lcall	_printf
      00067D 15 81            [12] 2563 	dec	sp
      00067F 15 81            [12] 2564 	dec	sp
      000681 15 81            [12] 2565 	dec	sp
                           000683  2566 	C$main.c$254$1$39 ==.
                           000683  2567 	XG$printFeels$0$0 ==.
      000683 22               [24] 2568 	ret
                                   2569 ;------------------------------------------------------------
                                   2570 ;Allocation info for local variables in function 'External_ISR'
                                   2571 ;------------------------------------------------------------
                           000684  2572 	G$External_ISR$0$0 ==.
                           000684  2573 	C$main.c$265$1$39 ==.
                                   2574 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:265: void External_ISR (void) __interrupt 0   // Interrupt 0 corresponds to vector address 0003h.
                                   2575 ;	-----------------------------------------
                                   2576 ;	 function External_ISR
                                   2577 ;	-----------------------------------------
      000684                       2578 _External_ISR:
                           000684  2579 	C$main.c$269$1$43 ==.
                                   2580 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:269: buttonPressed = 1;
      000684 75*00 01         [24] 2581 	mov	_buttonPressed,#0x01
                           000687  2582 	C$main.c$270$1$43 ==.
                           000687  2583 	XG$External_ISR$0$0 ==.
      000687 32               [24] 2584 	reti
                                   2585 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   2586 ;	eliminated unneeded push/pop psw
                                   2587 ;	eliminated unneeded push/pop dpl
                                   2588 ;	eliminated unneeded push/pop dph
                                   2589 ;	eliminated unneeded push/pop b
                                   2590 ;	eliminated unneeded push/pop acc
                                   2591 ;------------------------------------------------------------
                                   2592 ;Allocation info for local variables in function 'TR0_ISR'
                                   2593 ;------------------------------------------------------------
                           000688  2594 	G$TR0_ISR$0$0 ==.
                           000688  2595 	C$main.c$273$1$43 ==.
                                   2596 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:273: void TR0_ISR(void) __interrupt 1{
                                   2597 ;	-----------------------------------------
                                   2598 ;	 function TR0_ISR
                                   2599 ;	-----------------------------------------
      000688                       2600 _TR0_ISR:
      000688 C0 E0            [24] 2601 	push	acc
      00068A C0 D0            [24] 2602 	push	psw
                           00068C  2603 	C$main.c$274$1$45 ==.
                                   2604 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:274: TR0_count++;
      00068C 05*01            [12] 2605 	inc	_TR0_count
      00068E E4               [12] 2606 	clr	a
      00068F B5*01 02         [24] 2607 	cjne	a,_TR0_count,00103$
      000692 05*02            [12] 2608 	inc	(_TR0_count + 1)
      000694                       2609 00103$:
                           000694  2610 	C$main.c$275$1$45 ==.
                                   2611 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:275: TH0 = 0x0D;
      000694 75 8C 0D         [24] 2612 	mov	_TH0,#0x0D
                           000697  2613 	C$main.c$276$1$45 ==.
                                   2614 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:276: TL0 = 0x00;
      000697 75 8A 00         [24] 2615 	mov	_TL0,#0x00
      00069A D0 D0            [24] 2616 	pop	psw
      00069C D0 E0            [24] 2617 	pop	acc
                           00069E  2618 	C$main.c$277$1$45 ==.
                           00069E  2619 	XG$TR0_ISR$0$0 ==.
      00069E 32               [24] 2620 	reti
                                   2621 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   2622 ;	eliminated unneeded push/pop dpl
                                   2623 ;	eliminated unneeded push/pop dph
                                   2624 ;	eliminated unneeded push/pop b
                                   2625 ;------------------------------------------------------------
                                   2626 ;Allocation info for local variables in function 'PORT_INIT'
                                   2627 ;------------------------------------------------------------
                                   2628 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   2629 ;------------------------------------------------------------
                           00069F  2630 	G$PORT_INIT$0$0 ==.
                           00069F  2631 	C$main.c$286$1$45 ==.
                                   2632 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:286: void PORT_INIT(void)
                                   2633 ;	-----------------------------------------
                                   2634 ;	 function PORT_INIT
                                   2635 ;	-----------------------------------------
      00069F                       2636 _PORT_INIT:
                           00069F  2637 	C$main.c$290$1$47 ==.
                                   2638 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:290: SFRPAGE_SAVE = SFRPAGE;     // Save Current SFR page.
      00069F AF 84            [24] 2639 	mov	r7,_SFRPAGE
                           0006A1  2640 	C$main.c$292$1$47 ==.
                                   2641 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:292: SFRPAGE = CONFIG_PAGE;
      0006A1 75 84 0F         [24] 2642 	mov	_SFRPAGE,#0x0F
                           0006A4  2643 	C$main.c$293$1$47 ==.
                                   2644 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:293: WDTCN   = 0xDE;             // Disable watchdog timer.
      0006A4 75 FF DE         [24] 2645 	mov	_WDTCN,#0xDE
                           0006A7  2646 	C$main.c$294$1$47 ==.
                                   2647 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:294: WDTCN   = 0xAD;
      0006A7 75 FF AD         [24] 2648 	mov	_WDTCN,#0xAD
                           0006AA  2649 	C$main.c$295$1$47 ==.
                                   2650 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:295: EA      = 1;                // Enable interrupts as selected.
      0006AA D2 AF            [12] 2651 	setb	_EA
                           0006AC  2652 	C$main.c$297$1$47 ==.
                                   2653 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:297: XBR0    = 0x04;             // Enable UART0.
      0006AC 75 E1 04         [24] 2654 	mov	_XBR0,#0x04
                           0006AF  2655 	C$main.c$298$1$47 ==.
                                   2656 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:298: XBR1    = 0x04;             // /INT0 routed to port pin.
      0006AF 75 E2 04         [24] 2657 	mov	_XBR1,#0x04
                           0006B2  2658 	C$main.c$299$1$47 ==.
                                   2659 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:299: XBR2    = 0x40;             // Enable Crossbar and weak pull-ups.
      0006B2 75 E3 40         [24] 2660 	mov	_XBR2,#0x40
                           0006B5  2661 	C$main.c$301$1$47 ==.
                                   2662 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:301: P0MDOUT = 0x01;             // P0.0 (TX0) is configured as Push-Pull for output.
      0006B5 75 A4 01         [24] 2663 	mov	_P0MDOUT,#0x01
                           0006B8  2664 	C$main.c$304$1$47 ==.
                                   2665 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:304: P0      = 0x06;             // Additionally, set P0.0=0, P0.1=1, and P0.2=1.
      0006B8 75 80 06         [24] 2666 	mov	_P0,#0x06
                           0006BB  2667 	C$main.c$306$1$47 ==.
                                   2668 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:306: P2MDOUT = 0xFF;
      0006BB 75 A6 FF         [24] 2669 	mov	_P2MDOUT,#0xFF
                           0006BE  2670 	C$main.c$308$1$47 ==.
                                   2671 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:308: SFRPAGE = SFRPAGE_SAVE;     // Restore SFR page.
      0006BE 8F 84            [24] 2672 	mov	_SFRPAGE,r7
                           0006C0  2673 	C$main.c$309$1$47 ==.
                           0006C0  2674 	XG$PORT_INIT$0$0 ==.
      0006C0 22               [24] 2675 	ret
                                   2676 ;------------------------------------------------------------
                                   2677 ;Allocation info for local variables in function 'SYSCLK_INIT'
                                   2678 ;------------------------------------------------------------
                                   2679 ;i                         Allocated to registers r5 r6 
                                   2680 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   2681 ;------------------------------------------------------------
                           0006C1  2682 	G$SYSCLK_INIT$0$0 ==.
                           0006C1  2683 	C$main.c$317$1$47 ==.
                                   2684 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:317: void SYSCLK_INIT(void)
                                   2685 ;	-----------------------------------------
                                   2686 ;	 function SYSCLK_INIT
                                   2687 ;	-----------------------------------------
      0006C1                       2688 _SYSCLK_INIT:
                           0006C1  2689 	C$main.c$323$1$49 ==.
                                   2690 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:323: SFRPAGE_SAVE = SFRPAGE;     // Save Current SFR page.
      0006C1 AF 84            [24] 2691 	mov	r7,_SFRPAGE
                           0006C3  2692 	C$main.c$325$1$49 ==.
                                   2693 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:325: SFRPAGE = CONFIG_PAGE;
      0006C3 75 84 0F         [24] 2694 	mov	_SFRPAGE,#0x0F
                           0006C6  2695 	C$main.c$326$1$49 ==.
                                   2696 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:326: OSCXCN  = 0x67;             // Start external oscillator
      0006C6 75 8C 67         [24] 2697 	mov	_OSCXCN,#0x67
                           0006C9  2698 	C$main.c$327$1$49 ==.
                                   2699 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:327: for(i=0; i < 256; i++);     // Wait for the oscillator to start up.
      0006C9 7D 00            [12] 2700 	mov	r5,#0x00
      0006CB 7E 01            [12] 2701 	mov	r6,#0x01
      0006CD                       2702 00111$:
      0006CD 1D               [12] 2703 	dec	r5
      0006CE BD FF 01         [24] 2704 	cjne	r5,#0xFF,00141$
      0006D1 1E               [12] 2705 	dec	r6
      0006D2                       2706 00141$:
      0006D2 ED               [12] 2707 	mov	a,r5
      0006D3 4E               [12] 2708 	orl	a,r6
      0006D4 70 F7            [24] 2709 	jnz	00111$
                           0006D6  2710 	C$main.c$328$1$49 ==.
                                   2711 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:328: while(!(OSCXCN & 0x80));    // Check to see if the Crystal Oscillator Valid Flag is set.
      0006D6                       2712 00102$:
      0006D6 E5 8C            [12] 2713 	mov	a,_OSCXCN
      0006D8 30 E7 FB         [24] 2714 	jnb	acc.7,00102$
                           0006DB  2715 	C$main.c$329$1$49 ==.
                                   2716 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:329: CLKSEL  = 0x01;             // SYSCLK derived from the External Oscillator circuit.
      0006DB 75 97 01         [24] 2717 	mov	_CLKSEL,#0x01
                           0006DE  2718 	C$main.c$330$1$49 ==.
                                   2719 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:330: OSCICN  = 0x00;             // Disable the internal oscillator.
      0006DE 75 8A 00         [24] 2720 	mov	_OSCICN,#0x00
                           0006E1  2721 	C$main.c$332$1$49 ==.
                                   2722 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:332: SFRPAGE = CONFIG_PAGE;
      0006E1 75 84 0F         [24] 2723 	mov	_SFRPAGE,#0x0F
                           0006E4  2724 	C$main.c$333$1$49 ==.
                                   2725 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:333: PLL0CN  = 0x04;
      0006E4 75 89 04         [24] 2726 	mov	_PLL0CN,#0x04
                           0006E7  2727 	C$main.c$334$1$49 ==.
                                   2728 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:334: SFRPAGE = LEGACY_PAGE;
      0006E7 75 84 00         [24] 2729 	mov	_SFRPAGE,#0x00
                           0006EA  2730 	C$main.c$335$1$49 ==.
                                   2731 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:335: FLSCL   = 0x10;
      0006EA 75 B7 10         [24] 2732 	mov	_FLSCL,#0x10
                           0006ED  2733 	C$main.c$336$1$49 ==.
                                   2734 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:336: SFRPAGE = CONFIG_PAGE;
      0006ED 75 84 0F         [24] 2735 	mov	_SFRPAGE,#0x0F
                           0006F0  2736 	C$main.c$337$1$49 ==.
                                   2737 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:337: PLL0CN |= 0x01;
      0006F0 43 89 01         [24] 2738 	orl	_PLL0CN,#0x01
                           0006F3  2739 	C$main.c$338$1$49 ==.
                                   2740 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:338: PLL0DIV = 0x04;
      0006F3 75 8D 04         [24] 2741 	mov	_PLL0DIV,#0x04
                           0006F6  2742 	C$main.c$339$1$49 ==.
                                   2743 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:339: PLL0FLT = 0x01;
      0006F6 75 8F 01         [24] 2744 	mov	_PLL0FLT,#0x01
                           0006F9  2745 	C$main.c$340$1$49 ==.
                                   2746 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:340: PLL0MUL = 0x09;
      0006F9 75 8E 09         [24] 2747 	mov	_PLL0MUL,#0x09
                           0006FC  2748 	C$main.c$341$1$49 ==.
                                   2749 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:341: for(i=0; i < 256; i++);
      0006FC 7D 00            [12] 2750 	mov	r5,#0x00
      0006FE 7E 01            [12] 2751 	mov	r6,#0x01
      000700                       2752 00114$:
      000700 1D               [12] 2753 	dec	r5
      000701 BD FF 01         [24] 2754 	cjne	r5,#0xFF,00144$
      000704 1E               [12] 2755 	dec	r6
      000705                       2756 00144$:
      000705 ED               [12] 2757 	mov	a,r5
      000706 4E               [12] 2758 	orl	a,r6
      000707 70 F7            [24] 2759 	jnz	00114$
                           000709  2760 	C$main.c$342$1$49 ==.
                                   2761 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:342: PLL0CN |= 0x02;
      000709 43 89 02         [24] 2762 	orl	_PLL0CN,#0x02
                           00070C  2763 	C$main.c$343$1$49 ==.
                                   2764 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:343: while(!(PLL0CN & 0x10));
      00070C                       2765 00106$:
      00070C E5 89            [12] 2766 	mov	a,_PLL0CN
      00070E 30 E4 FB         [24] 2767 	jnb	acc.4,00106$
                           000711  2768 	C$main.c$344$1$49 ==.
                                   2769 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:344: CLKSEL  = 0x02;             // SYSCLK derived from the PLL.
      000711 75 97 02         [24] 2770 	mov	_CLKSEL,#0x02
                           000714  2771 	C$main.c$346$1$49 ==.
                                   2772 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:346: ET0 = 1;
      000714 D2 A9            [12] 2773 	setb	_ET0
                           000716  2774 	C$main.c$347$1$49 ==.
                                   2775 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:347: CKCON |= 0x08;
      000716 43 8E 08         [24] 2776 	orl	_CKCON,#0x08
                           000719  2777 	C$main.c$349$1$49 ==.
                                   2778 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:349: SFRPAGE = TIMER01_PAGE;
      000719 75 84 00         [24] 2779 	mov	_SFRPAGE,#0x00
                           00071C  2780 	C$main.c$350$1$49 ==.
                                   2781 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:350: TMOD &= 0xFD;
      00071C 53 89 FD         [24] 2782 	anl	_TMOD,#0xFD
                           00071F  2783 	C$main.c$351$1$49 ==.
                                   2784 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:351: TMOD |= 0x01;
      00071F 43 89 01         [24] 2785 	orl	_TMOD,#0x01
                           000722  2786 	C$main.c$353$1$49 ==.
                                   2787 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:353: TH0 = 0x0D;
      000722 75 8C 0D         [24] 2788 	mov	_TH0,#0x0D
                           000725  2789 	C$main.c$354$1$49 ==.
                                   2790 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:354: TL0 = 0x00;
      000725 75 8A 00         [24] 2791 	mov	_TL0,#0x00
                           000728  2792 	C$main.c$356$1$49 ==.
                                   2793 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:356: SFRPAGE = SFRPAGE_SAVE;     // Restore SFR page.
      000728 8F 84            [24] 2794 	mov	_SFRPAGE,r7
                           00072A  2795 	C$main.c$357$1$49 ==.
                           00072A  2796 	XG$SYSCLK_INIT$0$0 ==.
      00072A 22               [24] 2797 	ret
                                   2798 ;------------------------------------------------------------
                                   2799 ;Allocation info for local variables in function 'UART0_INIT'
                                   2800 ;------------------------------------------------------------
                                   2801 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   2802 ;------------------------------------------------------------
                           00072B  2803 	G$UART0_INIT$0$0 ==.
                           00072B  2804 	C$main.c$365$1$49 ==.
                                   2805 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:365: void UART0_INIT(void)
                                   2806 ;	-----------------------------------------
                                   2807 ;	 function UART0_INIT
                                   2808 ;	-----------------------------------------
      00072B                       2809 _UART0_INIT:
                           00072B  2810 	C$main.c$369$1$51 ==.
                                   2811 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:369: SFRPAGE_SAVE = SFRPAGE;     // Save Current SFR page.
      00072B AF 84            [24] 2812 	mov	r7,_SFRPAGE
                           00072D  2813 	C$main.c$371$1$51 ==.
                                   2814 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:371: SFRPAGE = TIMER01_PAGE;
      00072D 75 84 00         [24] 2815 	mov	_SFRPAGE,#0x00
                           000730  2816 	C$main.c$372$1$51 ==.
                                   2817 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:372: TMOD   &= ~0xF0;
      000730 AE 89            [24] 2818 	mov	r6,_TMOD
      000732 74 0F            [12] 2819 	mov	a,#0x0F
      000734 5E               [12] 2820 	anl	a,r6
      000735 F5 89            [12] 2821 	mov	_TMOD,a
                           000737  2822 	C$main.c$373$1$51 ==.
                                   2823 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:373: TMOD   |=  0x20;            // Timer1, Mode 2: 8-bit counter/timer with auto-reload.
      000737 43 89 20         [24] 2824 	orl	_TMOD,#0x20
                           00073A  2825 	C$main.c$374$1$51 ==.
                                   2826 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:374: TH1     = (unsigned char)-(SYSCLK/BAUDRATE/16); // Set Timer1 reload value for baudrate
      00073A 75 8D E5         [24] 2827 	mov	_TH1,#0xE5
                           00073D  2828 	C$main.c$375$1$51 ==.
                                   2829 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:375: CKCON  |= 0x10;             // Timer1 uses SYSCLK as time base.
      00073D 43 8E 10         [24] 2830 	orl	_CKCON,#0x10
                           000740  2831 	C$main.c$376$1$51 ==.
                                   2832 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:376: TL1     = TH1;
      000740 85 8D 8B         [24] 2833 	mov	_TL1,_TH1
                           000743  2834 	C$main.c$377$1$51 ==.
                                   2835 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:377: TR1     = 1;                // Start Timer1.
      000743 D2 8E            [12] 2836 	setb	_TR1
                           000745  2837 	C$main.c$379$1$51 ==.
                                   2838 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:379: SFRPAGE = UART0_PAGE;
      000745 75 84 00         [24] 2839 	mov	_SFRPAGE,#0x00
                           000748  2840 	C$main.c$380$1$51 ==.
                                   2841 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:380: SCON0   = 0x50;             // Set Mode 1: 8-Bit UART
      000748 75 98 50         [24] 2842 	mov	_SCON0,#0x50
                           00074B  2843 	C$main.c$381$1$51 ==.
                                   2844 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:381: SSTA0   = 0x10;             // UART0 baud rate divide-by-two disabled (SMOD0 = 1).
      00074B 75 91 10         [24] 2845 	mov	_SSTA0,#0x10
                           00074E  2846 	C$main.c$382$1$51 ==.
                                   2847 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:382: TI0     = 1;                // Indicate TX0 ready.
      00074E D2 99            [12] 2848 	setb	_TI0
                           000750  2849 	C$main.c$384$1$51 ==.
                                   2850 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 6\main.c:384: SFRPAGE = SFRPAGE_SAVE;     // Restore SFR page.
      000750 8F 84            [24] 2851 	mov	_SFRPAGE,r7
                           000752  2852 	C$main.c$385$1$51 ==.
                           000752  2853 	XG$UART0_INIT$0$0 ==.
      000752 22               [24] 2854 	ret
                                   2855 	.area CSEG    (CODE)
                                   2856 	.area CONST   (CODE)
                           000000  2857 Fmain$__str_0$0$0 == .
      000000                       2858 ___str_0:
      000000 1B                    2859 	.db 0x1B
      000001 5B 32 4A              2860 	.ascii "[2J"
      000004 00                    2861 	.db 0x00
                           000005  2862 Fmain$__str_1$0$0 == .
      000005                       2863 ___str_1:
      000005 48 65 6C 6C 6F 20 64  2864 	.ascii "Hello darkness my old friend"
             61 72 6B 6E 65 73 73
             20 6D 79 20 6F 6C 64
             20 66 72 69 65 6E 64
      000021 0A                    2865 	.db 0x0A
      000022 0A                    2866 	.db 0x0A
      000023 0D                    2867 	.db 0x0D
      000024 00                    2868 	.db 0x00
                           000025  2869 Fmain$__str_2$0$0 == .
      000025                       2870 ___str_2:
      000025 53 65 6C 65 63 74 20  2871 	.ascii "Select answer type if you feel like it I don't tell you what"
             61 6E 73 77 65 72 20
             74 79 70 65 20 69 66
             20 79 6F 75 20 66 65
             65 6C 20 6C 69 6B 65
             20 69 74 20 49 20 64
             6F 6E 27 74 20 74 65
             6C 6C 20 79 6F 75 20
             77 68 61 74
      000061 20 74 6F 20 64 6F     2872 	.ascii " to do"
      000067 0A                    2873 	.db 0x0A
      000068 0D                    2874 	.db 0x0D
      000069 00                    2875 	.db 0x00
                           00006A  2876 Fmain$__str_3$0$0 == .
      00006A                       2877 ___str_3:
      00006A 31 2E 20 59 65 73 2F  2878 	.ascii "1. Yes/No"
             4E 6F
      000073 0A                    2879 	.db 0x0A
      000074 0D                    2880 	.db 0x0D
      000075 00                    2881 	.db 0x00
                           000076  2882 Fmain$__str_4$0$0 == .
      000076                       2883 ___str_4:
      000076 32 2E 20 54 72 75 65  2884 	.ascii "2. True/False"
             2F 46 61 6C 73 65
      000083 0A                    2885 	.db 0x0A
      000084 0D                    2886 	.db 0x0D
      000085 00                    2887 	.db 0x00
                           000086  2888 Fmain$__str_5$0$0 == .
      000086                       2889 ___str_5:
      000086 33 2E 20 52 61 6E 64  2890 	.ascii "3. Random day of week"
             6F 6D 20 64 61 79 20
             6F 66 20 77 65 65 6B
      00009B 0A                    2891 	.db 0x0A
      00009C 0D                    2892 	.db 0x0D
      00009D 00                    2893 	.db 0x00
                           00009E  2894 Fmain$__str_6$0$0 == .
      00009E                       2895 ___str_6:
      00009E 34 2E 20 52 61 6E 64  2896 	.ascii "4. Random number"
             6F 6D 20 6E 75 6D 62
             65 72
      0000AE 0A                    2897 	.db 0x0A
      0000AF 0D                    2898 	.db 0x0D
      0000B0 00                    2899 	.db 0x00
                           0000B1  2900 Fmain$__str_7$0$0 == .
      0000B1                       2901 ___str_7:
      0000B1 35 2E 20 52 61 6E 64  2902 	.ascii "5. Random feels"
             6F 6D 20 66 65 65 6C
             73
      0000C0 0A                    2903 	.db 0x0A
      0000C1 0D                    2904 	.db 0x0D
      0000C2 00                    2905 	.db 0x00
                           0000C3  2906 Fmain$__str_8$0$0 == .
      0000C3                       2907 ___str_8:
      0000C3 59 65 73              2908 	.ascii "Yes"
      0000C6 0A                    2909 	.db 0x0A
      0000C7 0D                    2910 	.db 0x0D
      0000C8 00                    2911 	.db 0x00
                           0000C9  2912 Fmain$__str_9$0$0 == .
      0000C9                       2913 ___str_9:
      0000C9 4E 6F                 2914 	.ascii "No"
      0000CB 0A                    2915 	.db 0x0A
      0000CC 0D                    2916 	.db 0x0D
      0000CD 00                    2917 	.db 0x00
                           0000CE  2918 Fmain$__str_10$0$0 == .
      0000CE                       2919 ___str_10:
      0000CE 54 72 75 65           2920 	.ascii "True"
      0000D2 0A                    2921 	.db 0x0A
      0000D3 0D                    2922 	.db 0x0D
      0000D4 00                    2923 	.db 0x00
                           0000D5  2924 Fmain$__str_11$0$0 == .
      0000D5                       2925 ___str_11:
      0000D5 46 61 6C 73 65        2926 	.ascii "False"
      0000DA 0A                    2927 	.db 0x0A
      0000DB 0D                    2928 	.db 0x0D
      0000DC 00                    2929 	.db 0x00
                           0000DD  2930 Fmain$__str_12$0$0 == .
      0000DD                       2931 ___str_12:
      0000DD 0A                    2932 	.db 0x0A
      0000DE 0D                    2933 	.db 0x0D
      0000DF 00                    2934 	.db 0x00
                           0000E0  2935 Fmain$__str_13$0$0 == .
      0000E0                       2936 ___str_13:
      0000E0 4C 6F 77 65 72 20 62  2937 	.ascii "Lower bound: "
             6F 75 6E 64 3A 20
      0000ED 00                    2938 	.db 0x00
                           0000EE  2939 Fmain$__str_14$0$0 == .
      0000EE                       2940 ___str_14:
      0000EE 0A                    2941 	.db 0x0A
      0000EF 0D                    2942 	.db 0x0D
      0000F0 55 70 70 65 72 20 62  2943 	.ascii "Upper bound: "
             6F 75 6E 64 3A 20
      0000FD 00                    2944 	.db 0x00
                           0000FE  2945 Fmain$__str_15$0$0 == .
      0000FE                       2946 ___str_15:
      0000FE 0A                    2947 	.db 0x0A
      0000FF 0D                    2948 	.db 0x0D
      000100 25 64                 2949 	.ascii "%d"
      000102 0A                    2950 	.db 0x0A
      000103 0D                    2951 	.db 0x0D
      000104 00                    2952 	.db 0x00
                           000105  2953 Fmain$__str_16$0$0 == .
      000105                       2954 ___str_16:
      000105 1B                    2955 	.db 0x1B
      000106 5B 43                 2956 	.ascii "[C"
      000108 00                    2957 	.db 0x00
                           000109  2958 Fmain$__str_17$0$0 == .
      000109                       2959 ___str_17:
      000109 4F 6F 6F 6F 6F 20 79  2960 	.ascii "Ooooo yeh"
             65 68
      000112 00                    2961 	.db 0x00
                           000113  2962 Fmain$__str_18$0$0 == .
      000113                       2963 ___str_18:
      000113 1B                    2964 	.db 0x1B
      000114 5B 31 30 42           2965 	.ascii "[10B"
      000118 00                    2966 	.db 0x00
                           000119  2967 Fmain$__str_19$0$0 == .
      000119                       2968 ___str_19:
      000119 1B                    2969 	.db 0x1B
      00011A 44                    2970 	.ascii "D"
      00011B 00                    2971 	.db 0x00
                           00011C  2972 Fmain$__str_20$0$0 == .
      00011C                       2973 ___str_20:
      00011C 1B                    2974 	.db 0x1B
      00011D 5B 35 3B 33 48 44 6F  2975 	.ascii "[5;3HDon't let your"
             6E 27 74 20 6C 65 74
             20 79 6F 75 72
      000130 00                    2976 	.db 0x00
                           000131  2977 Fmain$__str_21$0$0 == .
      000131                       2978 ___str_21:
      000131 1B                    2979 	.db 0x1B
      000132 5B 36 3B 33 48 20 64  2980 	.ascii "[6;3H dreams be memes"
             72 65 61 6D 73 20 62
             65 20 6D 65 6D 65 73
      000147 00                    2981 	.db 0x00
                           000148  2982 Fmain$__str_22$0$0 == .
      000148                       2983 ___str_22:
      000148 1B                    2984 	.db 0x1B
      000149 5B 37 3B 33 48 2D 47  2985 	.ascii "[7;3H-Garfunkel & Simon"
             61 72 66 75 6E 6B 65
             6C 20 26 20 53 69 6D
             6F 6E
      000160 00                    2986 	.db 0x00
                           000161  2987 Fmain$__str_23$0$0 == .
      000161                       2988 ___str_23:
      000161 4D 6F 6E 64 61 79     2989 	.ascii "Monday"
      000167 00                    2990 	.db 0x00
                           000168  2991 Fmain$__str_24$0$0 == .
      000168                       2992 ___str_24:
      000168 54 75 65 73 64 61 79  2993 	.ascii "Tuesday"
      00016F 00                    2994 	.db 0x00
                           000170  2995 Fmain$__str_25$0$0 == .
      000170                       2996 ___str_25:
      000170 57 65 64 6E 65 73 64  2997 	.ascii "Wednesday"
             61 79
      000179 00                    2998 	.db 0x00
                           00017A  2999 Fmain$__str_26$0$0 == .
      00017A                       3000 ___str_26:
      00017A 54 68 75 72 73 64 61  3001 	.ascii "Thursday"
             79
      000182 00                    3002 	.db 0x00
                           000183  3003 Fmain$__str_27$0$0 == .
      000183                       3004 ___str_27:
      000183 46 72 69 64 61 79     3005 	.ascii "Friday"
      000189 00                    3006 	.db 0x00
                           00018A  3007 Fmain$__str_28$0$0 == .
      00018A                       3008 ___str_28:
      00018A 53 61 74 75 72 64 61  3009 	.ascii "Saturday"
             79
      000192 00                    3010 	.db 0x00
                           000193  3011 Fmain$__str_29$0$0 == .
      000193                       3012 ___str_29:
      000193 53 75 6E 64 61 79     3013 	.ascii "Sunday"
      000199 00                    3014 	.db 0x00
                           00019A  3015 Fmain$__str_30$0$0 == .
      00019A                       3016 ___str_30:
      00019A 20 20 20 20 20 20 20  3017 	.ascii "            /   ,'"
             20 20 20 20 20 2F 20
             20 20 2C 27
      0001AC 00                    3018 	.db 0x00
                           0001AD  3019 Fmain$__str_31$0$0 == .
      0001AD                       3020 ___str_31:
      0001AD 20 20 20 20 20 20 20  3021 	.ascii "            '.__|"
             20 20 20 20 20 27 2E
             5F 5F 7C
      0001BE 00                    3022 	.db 0x00
                           0001BF  3023 Fmain$__str_32$0$0 == .
      0001BF                       3024 ___str_32:
      0001BF 20 20 20 20 20 20 20  3025 	.ascii "             |, |"
             20 20 20 20 20 20 7C
             2C 20 7C
      0001D0 00                    3026 	.db 0x00
                           0001D1  3027 Fmain$__str_33$0$0 == .
      0001D1                       3028 ___str_33:
      0001D1 20 20 20 20 20 20 20  3029 	.ascii "             |--|"
             20 20 20 20 20 20 7C
             2D 2D 7C
      0001E2 00                    3030 	.db 0x00
                           0001E3  3031 Fmain$__str_34$0$0 == .
      0001E3                       3032 ___str_34:
      0001E3 20 20 20 20 20 20 20  3033 	.ascii "             |__|"
             20 20 20 20 20 20 7C
             5F 5F 7C
      0001F4 00                    3034 	.db 0x00
                           0001F5  3035 Fmain$__str_35$0$0 == .
      0001F5                       3036 ___str_35:
      0001F5 20 20 20 20 20 20 20  3037 	.ascii "             |  |"
             20 20 20 20 20 20 7C
             20 20 7C
      000206 00                    3038 	.db 0x00
                           000207  3039 Fmain$__str_36$0$0 == .
      000207                       3040 ___str_36:
      000207 20 20 20 20 20 20 20  3041 	.ascii "             |__|        ,-."
             20 20 20 20 20 20 7C
             5F 5F 7C 20 20 20 20
             20 20 20 20 2C 2D 2E
      000223 00                    3042 	.db 0x00
                           000224  3043 Fmain$__str_37$0$0 == .
      000224                       3044 ___str_37:
      000224 20 20 20 20 20 20 20  3045 	.ascii "             |__|'     ,'  /"
             20 20 20 20 20 20 7C
             5F 5F 7C 27 20 20 20
             20 20 2C 27 20 20 2F
      000240 00                    3046 	.db 0x00
                           000241  3047 Fmain$__str_38$0$0 == .
      000241                       3048 ___str_38:
      000241 20 20 20 20 20 20 20  3049 	.ascii "        _,.-'     ',_,' o /"
             20 5F 2C 2E 2D 27 20
             20 20 20 20 27 2C 5F
             2C 27 20 6F 20 2F
      00025C 00                    3050 	.db 0x00
                           00025D  3051 Fmain$__str_39$0$0 == .
      00025D                       3052 ___str_39:
      00025D 20 20 20 20 20 20 20  3053 	.ascii "       /     8888        /"
             2F 20 20 20 20 20 38
             38 38 38 20 20 20 20
             20 20 20 20 2F
      000277 00                    3054 	.db 0x00
                           000278  3055 Fmain$__str_40$0$0 == .
      000278                       3056 ___str_40:
      000278 20 20 20 20 20 20 20  3057 	.ascii "       |                /"
             7C 20 20 20 20 20 20
             20 20 20 20 20 20 20
             20 20 20 2F
      000291 00                    3058 	.db 0x00
                           000292  3059 Fmain$__str_41$0$0 == .
      000292                       3060 ___str_41:
      000292 20 20 20 20 20 20 20  3061 	.ascii "        1              /"
             20 31 20 20 20 20 20
             20 20 20 20 20 20 20
             20 20 2F
      0002AA 00                    3062 	.db 0x00
                           0002AB  3063 Fmain$__str_42$0$0 == .
      0002AB                       3064 ___str_42:
      0002AB 20 20 20 20 20 20 20  3065 	.ascii "        `L   8888     /"
             20 60 4C 20 20 20 38
             38 38 38 20 20 20 20
             20 2F
      0002C2 00                    3066 	.db 0x00
                           0002C3  3067 Fmain$__str_43$0$0 == .
      0002C3                       3068 ___str_43:
      0002C3 20 20 20 20 20 20 20  3069 	.ascii "         |           /"
             20 20 7C 20 20 20 20
             20 20 20 20 20 20 20
             2F
      0002D9 00                    3070 	.db 0x00
                           0002DA  3071 Fmain$__str_44$0$0 == .
      0002DA                       3072 ___str_44:
      0002DA 20 20 20 20 20 20 20  3073 	.ascii "        /    ====    "
             20 2F 20 20 20 20 3D
             3D 3D 3D 20 20 20 20
      0002EF 5C                    3074 	.db 0x5C
      0002F0 00                    3075 	.db 0x00
                           0002F1  3076 Fmain$__str_45$0$0 == .
      0002F1                       3077 ___str_45:
      0002F1 20 20 20 20 20 20 20  3078 	.ascii "       /     ____     "
             2F 20 20 20 20 20 5F
             5F 5F 5F 20 20 20 20
             20
      000307 5C                    3079 	.db 0x5C
      000308 00                    3080 	.db 0x00
                           000309  3081 Fmain$__str_46$0$0 == .
      000309                       3082 ___str_46:
      000309 20 20 20 20 20 20 2F  3083 	.ascii "      /     (____)  o  "
             20 20 20 20 20 28 5F
             5F 5F 5F 29 20 20 6F
             20 20
      000320 5C                    3084 	.db 0x5C
      000321 00                    3085 	.db 0x00
                           000322  3086 Fmain$__str_47$0$0 == .
      000322                       3087 ___str_47:
      000322 20 20 20 20 20 2F 20  3088 	.ascii "     /             o    "
             20 20 20 20 20 20 20
             20 20 20 20 20 6F 20
             20 20 20
      00033A 5C                    3089 	.db 0x5C
      00033B 00                    3090 	.db 0x00
                           00033C  3091 Fmain$__str_48$0$0 == .
      00033C                       3092 ___str_48:
      00033C 20 20 20 20 2F 20 20  3093 	.ascii "    /             o     ,'"
             20 20 20 20 20 20 20
             20 20 20 20 6F 20 20
             20 20 20 2C 27
      000356 00                    3094 	.db 0x00
                           000357  3095 Fmain$__str_49$0$0 == .
      000357                       3096 ___str_49:
      000357 20 20 20 2F 20 20 20  3097 	.ascii "   /               _,.'^"
             20 20 20 20 20 20 20
             20 20 20 20 20 5F 2C
             2E 27 5E
      00036F 00                    3098 	.db 0x00
                           000370  3099 Fmain$__str_50$0$0 == .
      000370                       3100 ___str_50:
      000370 20 20 2F 20 20 20 20  3101 	.ascii "  /        __,.-"
             20 20 20 20 5F 5F 2C
             2E 2D
      000380 22                    3102 	.db 0x22
      000381 7E 5E                 3103 	.ascii "~^"
      000383 00                    3104 	.db 0x00
                           000384  3105 Fmain$__str_51$0$0 == .
      000384                       3106 ___str_51:
      000384 20 27 2C 2C 2E 2E 2D  3107 	.ascii " ',,..--~~^"
             2D 7E 7E 5E
      00038F 00                    3108 	.db 0x00
                           000390  3109 Fmain$__str_52$0$0 == .
      000390                       3110 ___str_52:
      000390 41 20 72 6F 63 6B 20  3111 	.ascii "A rock feels no pain, And an island never cries :("
             66 65 65 6C 73 20 6E
             6F 20 70 61 69 6E 2C
             20 41 6E 64 20 61 6E
             20 69 73 6C 61 6E 64
             20 6E 65 76 65 72 20
             63 72 69 65 73 20 3A
             28
      0003C2 00                    3112 	.db 0x00
                           0003C3  3113 Fmain$__str_53$0$0 == .
      0003C3                       3114 ___str_53:
      0003C3 59 6F 75 27 72 65 20  3115 	.ascii "You're a stranger now onto me."
             61 20 73 74 72 61 6E
             67 65 72 20 6E 6F 77
             20 6F 6E 74 6F 20 6D
             65 2E
      0003E1 00                    3116 	.db 0x00
                           0003E2  3117 Fmain$__str_54$0$0 == .
      0003E2                       3118 ___str_54:
      0003E2 53 68 65 20 6F 6E 63  3119 	.ascii "She once was a true love of mine."
             65 20 77 61 73 20 61
             20 74 72 75 65 20 6C
             6F 76 65 20 6F 66 20
             6D 69 6E 65 2E
      000403 00                    3120 	.db 0x00
                           000404  3121 Fmain$__str_55$0$0 == .
      000404                       3122 ___str_55:
      000404 49 20 6B 6E 6F 77 20  3123 	.ascii "I know I'm faking it, faking it, I'm not really making it."
             49 27 6D 20 66 61 6B
             69 6E 67 20 69 74 2C
             20 66 61 6B 69 6E 67
             20 69 74 2C 20 49 27
             6D 20 6E 6F 74 20 72
             65 61 6C 6C 79 20 6D
             61 6B 69 6E 67 20 69
             74 2E
      00043E 00                    3124 	.db 0x00
                           00043F  3125 Fmain$__str_56$0$0 == .
      00043F                       3126 ___str_56:
      00043F 4A 65 73 75 73 20 6C  3127 	.ascii "Jesus loves you more than you will know."
             6F 76 65 73 20 79 6F
             75 20 6D 6F 72 65 20
             74 68 61 6E 20 79 6F
             75 20 77 69 6C 6C 20
             6B 6E 6F 77 2E
      000467 00                    3128 	.db 0x00
                           000468  3129 Fmain$__str_57$0$0 == .
      000468                       3130 ___str_57:
      000468 49 20 61 6D 20 6A 75  3131 	.ascii "I am just a poor boy, though my stories seldom told."
             73 74 20 61 20 70 6F
             6F 72 20 62 6F 79 2C
             20 74 68 6F 75 67 68
             20 6D 79 20 73 74 6F
             72 69 65 73 20 73 65
             6C 64 6F 6D 20 74 6F
             6C 64 2E
      00049C 00                    3132 	.db 0x00
                           00049D  3133 Fmain$__str_58$0$0 == .
      00049D                       3134 ___str_58:
      00049D 49 20 77 61 6E 64 65  3135 	.ascii "I wandered empty streets down, past the shop displays."
             72 65 64 20 65 6D 70
             74 79 20 73 74 72 65
             65 74 73 20 64 6F 77
             6E 2C 20 70 61 73 74
             20 74 68 65 20 73 68
             6F 70 20 64 69 73 70
             6C 61 79 73 2E
      0004D3 00                    3136 	.db 0x00
                           0004D4  3137 Fmain$__str_59$0$0 == .
      0004D4                       3138 ___str_59:
      0004D4 4C 65 61 76 69 6E 67  3139 	.ascii "Leaving nothing but the dead and dying back in my little tow"
             20 6E 6F 74 68 69 6E
             67 20 62 75 74 20 74
             68 65 20 64 65 61 64
             20 61 6E 64 20 64 79
             69 6E 67 20 62 61 63
             6B 20 69 6E 20 6D 79
             20 6C 69 74 74 6C 65
             20 74 6F 77
      000510 6E 2E                 3140 	.ascii "n."
      000512 00                    3141 	.db 0x00
                           000513  3142 Fmain$__str_60$0$0 == .
      000513                       3143 ___str_60:
      000513 43 61 74 68 79 2C 20  3144 	.ascii "Cathy, I'm lost I said, though I knew she was sleeping."
             49 27 6D 20 6C 6F 73
             74 20 49 20 73 61 69
             64 2C 20 74 68 6F 75
             67 68 20 49 20 6B 6E
             65 77 20 73 68 65 20
             77 61 73 20 73 6C 65
             65 70 69 6E 67 2E
      00054A 00                    3145 	.db 0x00
                           00054B  3146 Fmain$__str_61$0$0 == .
      00054B                       3147 ___str_61:
      00054B 49 20 6B 69 73 73 65  3148 	.ascii "I kissed her honey hair with my grateful tears."
             64 20 68 65 72 20 68
             6F 6E 65 79 20 68 61
             69 72 20 77 69 74 68
             20 6D 79 20 67 72 61
             74 65 66 75 6C 20 74
             65 61 72 73 2E
      00057A 00                    3149 	.db 0x00
                           00057B  3150 Fmain$__str_62$0$0 == .
      00057B                       3151 ___str_62:
      00057B 57 68 65 6E 20 74 65  3152 	.ascii "When tears are in your eyes, I will dry them off."
             61 72 73 20 61 72 65
             20 69 6E 20 79 6F 75
             72 20 65 79 65 73 2C
             20 49 20 77 69 6C 6C
             20 64 72 79 20 74 68
             65 6D 20 6F 66 66 2E
      0005AC 00                    3153 	.db 0x00
                           0005AD  3154 Fmain$__str_63$0$0 == .
      0005AD                       3155 ___str_63:
      0005AD 43 61 6E 20 79 6F 75  3156 	.ascii "Can you imagine us years from today, sharing a park bench qu"
             20 69 6D 61 67 69 6E
             65 20 75 73 20 79 65
             61 72 73 20 66 72 6F
             6D 20 74 6F 64 61 79
             2C 20 73 68 61 72 69
             6E 67 20 61 20 70 61
             72 6B 20 62 65 6E 63
             68 20 71 75
      0005E9 69 65 74 6C 79 2E     3157 	.ascii "ietly."
      0005EF 00                    3158 	.db 0x00
                           0005F0  3159 Fmain$__str_64$0$0 == .
      0005F0                       3160 ___str_64:
      0005F0 54 68 65 20 65 6C 65  3161 	.ascii "The elephants are kindly but they're dumb."
             70 68 61 6E 74 73 20
             61 72 65 20 6B 69 6E
             64 6C 79 20 62 75 74
             20 74 68 65 79 27 72
             65 20 64 75 6D 62 2E
      00061A 00                    3162 	.db 0x00
                           00061B  3163 Fmain$__str_65$0$0 == .
      00061B                       3164 ___str_65:
      00061B 49 27 64 20 72 61 74  3165 	.ascii "I'd rather be a forest than a street"
             68 65 72 20 62 65 20
             61 20 66 6F 72 65 73
             74 20 74 68 61 6E 20
             61 20 73 74 72 65 65
             74
      00063F 00                    3166 	.db 0x00
                           000640  3167 Fmain$__str_66$0$0 == .
      000640                       3168 ___str_66:
      000640 41 73 6B 20 6D 65 20  3169 	.ascii "Ask me and I'll play so sweetly I'll make you smile."
             61 6E 64 20 49 27 6C
             6C 20 70 6C 61 79 20
             73 6F 20 73 77 65 65
             74 6C 79 20 49 27 6C
             6C 20 6D 61 6B 65 20
             79 6F 75 20 73 6D 69
             6C 65 2E
      000674 00                    3170 	.db 0x00
                           000675  3171 Fmain$__str_67$0$0 == .
      000675                       3172 ___str_67:
      000675 48 61 6C 66 20 6F 66  3173 	.ascii "Half of the time they're gone and they dont know where."
             20 74 68 65 20 74 69
             6D 65 20 74 68 65 79
             27 72 65 20 67 6F 6E
             65 20 61 6E 64 20 74
             68 65 79 20 64 6F 6E
             74 20 6B 6E 6F 77 20
             77 68 65 72 65 2E
      0006AC 00                    3174 	.db 0x00
                           0006AD  3175 Fmain$__str_68$0$0 == .
      0006AD                       3176 ___str_68:
      0006AD 59 6F 75 27 72 65 20  3177 	.ascii "You're breaking my heart, you're shaking my confidence daily"
             62 72 65 61 6B 69 6E
             67 20 6D 79 20 68 65
             61 72 74 2C 20 79 6F
             75 27 72 65 20 73 68
             61 6B 69 6E 67 20 6D
             79 20 63 6F 6E 66 69
             64 65 6E 63 65 20 64
             61 69 6C 79
      0006E9 2E                    3178 	.ascii "."
      0006EA 00                    3179 	.db 0x00
                           0006EB  3180 Fmain$__str_69$0$0 == .
      0006EB                       3181 ___str_69:
      0006EB 49 27 6D 20 64 61 70  3182 	.ascii "I'm dappled and drowsy and ready to sleep."
             70 6C 65 64 20 61 6E
             64 20 64 72 6F 77 73
             79 20 61 6E 64 20 72
             65 61 64 79 20 74 6F
             20 73 6C 65 65 70 2E
      000715 00                    3183 	.db 0x00
                           000716  3184 Fmain$__str_70$0$0 == .
      000716                       3185 ___str_70:
      000716 4C 65 61 76 65 73 20  3186 	.ascii "Leaves are brown, there's a patch of snow on the ground."
             61 72 65 20 62 72 6F
             77 6E 2C 20 74 68 65
             72 65 27 73 20 61 20
             70 61 74 63 68 20 6F
             66 20 73 6E 6F 77 20
             6F 6E 20 74 68 65 20
             67 72 6F 75 6E 64 2E
      00074E 00                    3187 	.db 0x00
                           00074F  3188 Fmain$__str_71$0$0 == .
      00074F                       3189 ___str_71:
      00074F 48 6F 6D 65 2C 20 77  3190 	.ascii "Home, where my love life's waiting silently for me."
             68 65 72 65 20 6D 79
             20 6C 6F 76 65 20 6C
             69 66 65 27 73 20 77
             61 69 74 69 6E 67 20
             73 69 6C 65 6E 74 6C
             79 20 66 6F 72 20 6D
             65 2E
      000782 00                    3191 	.db 0x00
                           000783  3192 Fmain$__str_72$0$0 == .
      000783                       3193 ___str_72:
      000783 41 6E 64 20 74 68 65  3194 	.ascii "And the people bowed and prayed to the neon god they made."
             20 70 65 6F 70 6C 65
             20 62 6F 77 65 64 20
             61 6E 64 20 70 72 61
             79 65 64 20 74 6F 20
             74 68 65 20 6E 65 6F
             6E 20 67 6F 64 20 74
             68 65 79 20 6D 61 64
             65 2E
      0007BD 00                    3195 	.db 0x00
                                   3196 	.area XINIT   (CODE)
                           000000  3197 Fmain$__xinit_guitar$0$0 == .
      000000                       3198 __xinit__guitar:
      000000r9As01 80              3199 	.byte ___str_30,(___str_30 >> 8),#0x80
      000003rADs01 80              3200 	.byte ___str_31,(___str_31 >> 8),#0x80
      000006rBFs01 80              3201 	.byte ___str_32,(___str_32 >> 8),#0x80
      000009rD1s01 80              3202 	.byte ___str_33,(___str_33 >> 8),#0x80
      00000CrE3s01 80              3203 	.byte ___str_34,(___str_34 >> 8),#0x80
      00000FrF5s01 80              3204 	.byte ___str_35,(___str_35 >> 8),#0x80
      000012rD1s01 80              3205 	.byte ___str_33,(___str_33 >> 8),#0x80
      000015rE3s01 80              3206 	.byte ___str_34,(___str_34 >> 8),#0x80
      000018r07s02 80              3207 	.byte ___str_36,(___str_36 >> 8),#0x80
      00001Br24s02 80              3208 	.byte ___str_37,(___str_37 >> 8),#0x80
      00001Er41s02 80              3209 	.byte ___str_38,(___str_38 >> 8),#0x80
      000021r5Ds02 80              3210 	.byte ___str_39,(___str_39 >> 8),#0x80
      000024r78s02 80              3211 	.byte ___str_40,(___str_40 >> 8),#0x80
      000027r92s02 80              3212 	.byte ___str_41,(___str_41 >> 8),#0x80
      00002ArABs02 80              3213 	.byte ___str_42,(___str_42 >> 8),#0x80
      00002DrC3s02 80              3214 	.byte ___str_43,(___str_43 >> 8),#0x80
      000030rDAs02 80              3215 	.byte ___str_44,(___str_44 >> 8),#0x80
      000033rF1s02 80              3216 	.byte ___str_45,(___str_45 >> 8),#0x80
      000036r09s03 80              3217 	.byte ___str_46,(___str_46 >> 8),#0x80
      000039r22s03 80              3218 	.byte ___str_47,(___str_47 >> 8),#0x80
      00003Cr3Cs03 80              3219 	.byte ___str_48,(___str_48 >> 8),#0x80
      00003Fr57s03 80              3220 	.byte ___str_49,(___str_49 >> 8),#0x80
      000042r70s03 80              3221 	.byte ___str_50,(___str_50 >> 8),#0x80
      000045r84s03 80              3222 	.byte ___str_51,(___str_51 >> 8),#0x80
                           000048  3223 Fmain$__xinit_quotes$0$0 == .
      000048                       3224 __xinit__quotes:
      000048r90s03 80              3225 	.byte ___str_52,(___str_52 >> 8),#0x80
      00004BrC3s03 80              3226 	.byte ___str_53,(___str_53 >> 8),#0x80
      00004ErE2s03 80              3227 	.byte ___str_54,(___str_54 >> 8),#0x80
      000051r04s04 80              3228 	.byte ___str_55,(___str_55 >> 8),#0x80
      000054r3Fs04 80              3229 	.byte ___str_56,(___str_56 >> 8),#0x80
      000057r68s04 80              3230 	.byte ___str_57,(___str_57 >> 8),#0x80
      00005Ar9Ds04 80              3231 	.byte ___str_58,(___str_58 >> 8),#0x80
      00005DrD4s04 80              3232 	.byte ___str_59,(___str_59 >> 8),#0x80
      000060r13s05 80              3233 	.byte ___str_60,(___str_60 >> 8),#0x80
      000063r4Bs05 80              3234 	.byte ___str_61,(___str_61 >> 8),#0x80
      000066r7Bs05 80              3235 	.byte ___str_62,(___str_62 >> 8),#0x80
      000069rADs05 80              3236 	.byte ___str_63,(___str_63 >> 8),#0x80
      00006CrF0s05 80              3237 	.byte ___str_64,(___str_64 >> 8),#0x80
      00006Fr1Bs06 80              3238 	.byte ___str_65,(___str_65 >> 8),#0x80
      000072r40s06 80              3239 	.byte ___str_66,(___str_66 >> 8),#0x80
      000075r75s06 80              3240 	.byte ___str_67,(___str_67 >> 8),#0x80
      000078rADs06 80              3241 	.byte ___str_68,(___str_68 >> 8),#0x80
      00007BrEBs06 80              3242 	.byte ___str_69,(___str_69 >> 8),#0x80
      00007Er16s07 80              3243 	.byte ___str_70,(___str_70 >> 8),#0x80
      000081r4Fs07 80              3244 	.byte ___str_71,(___str_71 >> 8),#0x80
      000084r83s07 80              3245 	.byte ___str_72,(___str_72 >> 8),#0x80
                                   3246 	.area CABS    (ABS,CODE)
