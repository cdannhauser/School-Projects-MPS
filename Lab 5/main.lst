                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW64)
                                      4 ; This file was generated Thu Nov 03 16:27:54 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module main
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _map
                                     13 	.globl _printf
                                     14 	.globl _P7_7
                                     15 	.globl _P7_6
                                     16 	.globl _P7_5
                                     17 	.globl _P7_4
                                     18 	.globl _P7_3
                                     19 	.globl _P7_2
                                     20 	.globl _P7_1
                                     21 	.globl _P7_0
                                     22 	.globl _SPIF
                                     23 	.globl _WCOL
                                     24 	.globl _MODF
                                     25 	.globl _RXOVRN
                                     26 	.globl _NSSMD1
                                     27 	.globl _NSSMD0
                                     28 	.globl _TXBMT
                                     29 	.globl _SPIEN
                                     30 	.globl _P6_7
                                     31 	.globl _P6_6
                                     32 	.globl _P6_5
                                     33 	.globl _P6_4
                                     34 	.globl _P6_3
                                     35 	.globl _P6_2
                                     36 	.globl _P6_1
                                     37 	.globl _P6_0
                                     38 	.globl _AD2EN
                                     39 	.globl _AD2TM
                                     40 	.globl _AD2INT
                                     41 	.globl _AD2BUSY
                                     42 	.globl _AD2CM2
                                     43 	.globl _AD2CM1
                                     44 	.globl _AD2CM0
                                     45 	.globl _AD2WINT
                                     46 	.globl _AD0EN
                                     47 	.globl _AD0TM
                                     48 	.globl _AD0INT
                                     49 	.globl _AD0BUSY
                                     50 	.globl _AD0CM1
                                     51 	.globl _AD0CM0
                                     52 	.globl _AD0WINT
                                     53 	.globl _AD0LJST
                                     54 	.globl _P5_7
                                     55 	.globl _P5_6
                                     56 	.globl _P5_5
                                     57 	.globl _P5_4
                                     58 	.globl _P5_3
                                     59 	.globl _P5_2
                                     60 	.globl _P5_1
                                     61 	.globl _P5_0
                                     62 	.globl _CF
                                     63 	.globl _CR
                                     64 	.globl _CCF5
                                     65 	.globl _CCF4
                                     66 	.globl _CCF3
                                     67 	.globl _CCF2
                                     68 	.globl _CCF1
                                     69 	.globl _CCF0
                                     70 	.globl _CY
                                     71 	.globl _AC
                                     72 	.globl _F0
                                     73 	.globl _RS1
                                     74 	.globl _RS0
                                     75 	.globl _OV
                                     76 	.globl _F1
                                     77 	.globl _P
                                     78 	.globl _P4_7
                                     79 	.globl _P4_6
                                     80 	.globl _P4_5
                                     81 	.globl _P4_4
                                     82 	.globl _P4_3
                                     83 	.globl _P4_2
                                     84 	.globl _P4_1
                                     85 	.globl _P4_0
                                     86 	.globl _TF4
                                     87 	.globl _EXF4
                                     88 	.globl _EXEN4
                                     89 	.globl _TR4
                                     90 	.globl _CT4
                                     91 	.globl _CPRL4
                                     92 	.globl _TF3
                                     93 	.globl _EXF3
                                     94 	.globl _EXEN3
                                     95 	.globl _TR3
                                     96 	.globl _CT3
                                     97 	.globl _CPRL3
                                     98 	.globl _TF2
                                     99 	.globl _EXF2
                                    100 	.globl _EXEN2
                                    101 	.globl _TR2
                                    102 	.globl _CT2
                                    103 	.globl _CPRL2
                                    104 	.globl _MAC0HO
                                    105 	.globl _MAC0Z
                                    106 	.globl _MAC0SO
                                    107 	.globl _MAC0N
                                    108 	.globl _BUSY
                                    109 	.globl _ENSMB
                                    110 	.globl _STA
                                    111 	.globl _STO
                                    112 	.globl _SI
                                    113 	.globl _AA
                                    114 	.globl _SMBFTE
                                    115 	.globl _SMBTOE
                                    116 	.globl _PT2
                                    117 	.globl _PS
                                    118 	.globl _PS0
                                    119 	.globl _PT1
                                    120 	.globl _PX1
                                    121 	.globl _PT0
                                    122 	.globl _PX0
                                    123 	.globl _P3_7
                                    124 	.globl _P3_6
                                    125 	.globl _P3_5
                                    126 	.globl _P3_4
                                    127 	.globl _P3_3
                                    128 	.globl _P3_2
                                    129 	.globl _P3_1
                                    130 	.globl _P3_0
                                    131 	.globl _EA
                                    132 	.globl _ET2
                                    133 	.globl _ES
                                    134 	.globl _ES0
                                    135 	.globl _ET1
                                    136 	.globl _EX1
                                    137 	.globl _ET0
                                    138 	.globl _EX0
                                    139 	.globl _P2_7
                                    140 	.globl _P2_6
                                    141 	.globl _P2_5
                                    142 	.globl _P2_4
                                    143 	.globl _P2_3
                                    144 	.globl _P2_2
                                    145 	.globl _P2_1
                                    146 	.globl _P2_0
                                    147 	.globl _S1MODE
                                    148 	.globl _MCE1
                                    149 	.globl _REN1
                                    150 	.globl _TB81
                                    151 	.globl _RB81
                                    152 	.globl _TI1
                                    153 	.globl _RI1
                                    154 	.globl _SM00
                                    155 	.globl _SM10
                                    156 	.globl _SM20
                                    157 	.globl _REN
                                    158 	.globl _REN0
                                    159 	.globl _TB80
                                    160 	.globl _RB80
                                    161 	.globl _TI
                                    162 	.globl _TI0
                                    163 	.globl _RI
                                    164 	.globl _RI0
                                    165 	.globl _P1_7
                                    166 	.globl _P1_6
                                    167 	.globl _P1_5
                                    168 	.globl _P1_4
                                    169 	.globl _P1_3
                                    170 	.globl _P1_2
                                    171 	.globl _P1_1
                                    172 	.globl _P1_0
                                    173 	.globl _FLHBUSY
                                    174 	.globl _CP1EN
                                    175 	.globl _CP1OUT
                                    176 	.globl _CP1RIF
                                    177 	.globl _CP1FIF
                                    178 	.globl _CP1HYP1
                                    179 	.globl _CP1HYP0
                                    180 	.globl _CP1HYN1
                                    181 	.globl _CP1HYN0
                                    182 	.globl _CP0EN
                                    183 	.globl _CP0OUT
                                    184 	.globl _CP0RIF
                                    185 	.globl _CP0FIF
                                    186 	.globl _CP0HYP1
                                    187 	.globl _CP0HYP0
                                    188 	.globl _CP0HYN1
                                    189 	.globl _CP0HYN0
                                    190 	.globl _TF1
                                    191 	.globl _TR1
                                    192 	.globl _TF0
                                    193 	.globl _TR0
                                    194 	.globl _IE1
                                    195 	.globl _IT1
                                    196 	.globl _IE0
                                    197 	.globl _IT0
                                    198 	.globl _P0_7
                                    199 	.globl _P0_6
                                    200 	.globl _P0_5
                                    201 	.globl _P0_4
                                    202 	.globl _P0_3
                                    203 	.globl _P0_2
                                    204 	.globl _P0_1
                                    205 	.globl _P0_0
                                    206 	.globl _MAC0RND
                                    207 	.globl _MAC0ACC
                                    208 	.globl _MAC0A
                                    209 	.globl _RCAP4
                                    210 	.globl _TMR4
                                    211 	.globl _DAC1
                                    212 	.globl _RCAP3
                                    213 	.globl _TMR3
                                    214 	.globl _PCA0CP5
                                    215 	.globl _PCA0CP4
                                    216 	.globl _PCA0CP3
                                    217 	.globl _PCA0CP2
                                    218 	.globl _PCA0CP1
                                    219 	.globl _PCA0CP0
                                    220 	.globl _PCA0
                                    221 	.globl _DAC0
                                    222 	.globl _ADC0LT
                                    223 	.globl _ADC0GT
                                    224 	.globl _ADC0
                                    225 	.globl _RCAP2
                                    226 	.globl _TMR2
                                    227 	.globl _TMR1
                                    228 	.globl _TMR0
                                    229 	.globl _P7
                                    230 	.globl _P6
                                    231 	.globl _XBR2
                                    232 	.globl _XBR1
                                    233 	.globl _XBR0
                                    234 	.globl _P5
                                    235 	.globl _P4
                                    236 	.globl _FLACL
                                    237 	.globl _P1MDIN
                                    238 	.globl _P3MDOUT
                                    239 	.globl _P2MDOUT
                                    240 	.globl _P1MDOUT
                                    241 	.globl _P0MDOUT
                                    242 	.globl _CCH0LC
                                    243 	.globl _CCH0TN
                                    244 	.globl _CCH0CN
                                    245 	.globl _P7MDOUT
                                    246 	.globl _P6MDOUT
                                    247 	.globl _P5MDOUT
                                    248 	.globl _P4MDOUT
                                    249 	.globl _CCH0MA
                                    250 	.globl _CLKSEL
                                    251 	.globl _SFRPGCN
                                    252 	.globl _PLL0FLT
                                    253 	.globl _PLL0MUL
                                    254 	.globl _PLL0DIV
                                    255 	.globl _OSCXCN
                                    256 	.globl _OSCICL
                                    257 	.globl _OSCICN
                                    258 	.globl _PLL0CN
                                    259 	.globl _FLSTAT
                                    260 	.globl _MAC0RNDH
                                    261 	.globl _MAC0RNDL
                                    262 	.globl _MAC0CF
                                    263 	.globl _MAC0AH
                                    264 	.globl _MAC0AL
                                    265 	.globl _MAC0STA
                                    266 	.globl _MAC0OVR
                                    267 	.globl _MAC0ACC3
                                    268 	.globl _MAC0ACC2
                                    269 	.globl _MAC0ACC1
                                    270 	.globl _MAC0ACC0
                                    271 	.globl _MAC0BH
                                    272 	.globl _MAC0BL
                                    273 	.globl _ADC2CN
                                    274 	.globl _TMR4H
                                    275 	.globl _TMR4L
                                    276 	.globl _RCAP4H
                                    277 	.globl _RCAP4L
                                    278 	.globl _TMR4CF
                                    279 	.globl _TMR4CN
                                    280 	.globl _ADC2LT
                                    281 	.globl _ADC2GT
                                    282 	.globl _ADC2
                                    283 	.globl _ADC2CF
                                    284 	.globl _AMX2SL
                                    285 	.globl _AMX2CF
                                    286 	.globl _CPT1MD
                                    287 	.globl _CPT1CN
                                    288 	.globl _DAC1CN
                                    289 	.globl _DAC1H
                                    290 	.globl _DAC1L
                                    291 	.globl _TMR3H
                                    292 	.globl _TMR3L
                                    293 	.globl _RCAP3H
                                    294 	.globl _RCAP3L
                                    295 	.globl _TMR3CF
                                    296 	.globl _TMR3CN
                                    297 	.globl _SBUF1
                                    298 	.globl _SCON1
                                    299 	.globl _CPT0MD
                                    300 	.globl _CPT0CN
                                    301 	.globl _PCA0CPH1
                                    302 	.globl _PCA0CPL1
                                    303 	.globl _PCA0CPH0
                                    304 	.globl _PCA0CPL0
                                    305 	.globl _PCA0H
                                    306 	.globl _PCA0L
                                    307 	.globl _SPI0CN
                                    308 	.globl _RSTSRC
                                    309 	.globl _PCA0CPH4
                                    310 	.globl _PCA0CPL4
                                    311 	.globl _PCA0CPH3
                                    312 	.globl _PCA0CPL3
                                    313 	.globl _PCA0CPH2
                                    314 	.globl _PCA0CPL2
                                    315 	.globl _ADC0CN
                                    316 	.globl _PCA0CPH5
                                    317 	.globl _PCA0CPL5
                                    318 	.globl _PCA0CPM5
                                    319 	.globl _PCA0CPM4
                                    320 	.globl _PCA0CPM3
                                    321 	.globl _PCA0CPM2
                                    322 	.globl _PCA0CPM1
                                    323 	.globl _PCA0CPM0
                                    324 	.globl _PCA0MD
                                    325 	.globl _PCA0CN
                                    326 	.globl _DAC0CN
                                    327 	.globl _DAC0H
                                    328 	.globl _DAC0L
                                    329 	.globl _REF0CN
                                    330 	.globl _SMB0CR
                                    331 	.globl _TH2
                                    332 	.globl _TMR2H
                                    333 	.globl _TL2
                                    334 	.globl _TMR2L
                                    335 	.globl _RCAP2H
                                    336 	.globl _RCAP2L
                                    337 	.globl _TMR2CF
                                    338 	.globl _TMR2CN
                                    339 	.globl _ADC0LTH
                                    340 	.globl _ADC0LTL
                                    341 	.globl _ADC0GTH
                                    342 	.globl _ADC0GTL
                                    343 	.globl _SMB0ADR
                                    344 	.globl _SMB0DAT
                                    345 	.globl _SMB0STA
                                    346 	.globl _SMB0CN
                                    347 	.globl _ADC0H
                                    348 	.globl _ADC0L
                                    349 	.globl _ADC0CF
                                    350 	.globl _AMX0SL
                                    351 	.globl _AMX0CF
                                    352 	.globl _SADEN0
                                    353 	.globl _FLSCL
                                    354 	.globl _SADDR0
                                    355 	.globl _EMI0CF
                                    356 	.globl __XPAGE
                                    357 	.globl _EMI0CN
                                    358 	.globl _EMI0TC
                                    359 	.globl _SPI0CKR
                                    360 	.globl _SPI0DAT
                                    361 	.globl _SPI0CFG
                                    362 	.globl _SBUF
                                    363 	.globl _SBUF0
                                    364 	.globl _SCON
                                    365 	.globl _SCON0
                                    366 	.globl _SSTA0
                                    367 	.globl _PSCTL
                                    368 	.globl _CKCON
                                    369 	.globl _TH1
                                    370 	.globl _TH0
                                    371 	.globl _TL1
                                    372 	.globl _TL0
                                    373 	.globl _TMOD
                                    374 	.globl _TCON
                                    375 	.globl _WDTCN
                                    376 	.globl _EIP2
                                    377 	.globl _EIP1
                                    378 	.globl _B
                                    379 	.globl _EIE2
                                    380 	.globl _EIE1
                                    381 	.globl _ACC
                                    382 	.globl _PSW
                                    383 	.globl _IP
                                    384 	.globl _PSBANK
                                    385 	.globl _P3
                                    386 	.globl _IE
                                    387 	.globl _P2
                                    388 	.globl _P1
                                    389 	.globl _PCON
                                    390 	.globl _SFRLAST
                                    391 	.globl _SFRNEXT
                                    392 	.globl _SFRPAGE
                                    393 	.globl _DPH
                                    394 	.globl _DPL
                                    395 	.globl _SP
                                    396 	.globl _P0
                                    397 	.globl _count
                                    398 	.globl _putchar
                                    399 	.globl _getchar
                                    400 	.globl _main
                                    401 	.globl _loop
                                    402 	.globl _PORT_INIT
                                    403 	.globl _SYSCLK_INIT
                                    404 	.globl _UART0_INIT
                                    405 	.globl _MEM_INIT
                                    406 ;--------------------------------------------------------
                                    407 ; special function registers
                                    408 ;--------------------------------------------------------
                                    409 	.area RSEG    (ABS,DATA)
      000000                        410 	.org 0x0000
                           000080   411 G$P0$0$0 == 0x0080
                           000080   412 _P0	=	0x0080
                           000081   413 G$SP$0$0 == 0x0081
                           000081   414 _SP	=	0x0081
                           000082   415 G$DPL$0$0 == 0x0082
                           000082   416 _DPL	=	0x0082
                           000083   417 G$DPH$0$0 == 0x0083
                           000083   418 _DPH	=	0x0083
                           000084   419 G$SFRPAGE$0$0 == 0x0084
                           000084   420 _SFRPAGE	=	0x0084
                           000085   421 G$SFRNEXT$0$0 == 0x0085
                           000085   422 _SFRNEXT	=	0x0085
                           000086   423 G$SFRLAST$0$0 == 0x0086
                           000086   424 _SFRLAST	=	0x0086
                           000087   425 G$PCON$0$0 == 0x0087
                           000087   426 _PCON	=	0x0087
                           000090   427 G$P1$0$0 == 0x0090
                           000090   428 _P1	=	0x0090
                           0000A0   429 G$P2$0$0 == 0x00a0
                           0000A0   430 _P2	=	0x00a0
                           0000A8   431 G$IE$0$0 == 0x00a8
                           0000A8   432 _IE	=	0x00a8
                           0000B0   433 G$P3$0$0 == 0x00b0
                           0000B0   434 _P3	=	0x00b0
                           0000B1   435 G$PSBANK$0$0 == 0x00b1
                           0000B1   436 _PSBANK	=	0x00b1
                           0000B8   437 G$IP$0$0 == 0x00b8
                           0000B8   438 _IP	=	0x00b8
                           0000D0   439 G$PSW$0$0 == 0x00d0
                           0000D0   440 _PSW	=	0x00d0
                           0000E0   441 G$ACC$0$0 == 0x00e0
                           0000E0   442 _ACC	=	0x00e0
                           0000E6   443 G$EIE1$0$0 == 0x00e6
                           0000E6   444 _EIE1	=	0x00e6
                           0000E7   445 G$EIE2$0$0 == 0x00e7
                           0000E7   446 _EIE2	=	0x00e7
                           0000F0   447 G$B$0$0 == 0x00f0
                           0000F0   448 _B	=	0x00f0
                           0000F6   449 G$EIP1$0$0 == 0x00f6
                           0000F6   450 _EIP1	=	0x00f6
                           0000F7   451 G$EIP2$0$0 == 0x00f7
                           0000F7   452 _EIP2	=	0x00f7
                           0000FF   453 G$WDTCN$0$0 == 0x00ff
                           0000FF   454 _WDTCN	=	0x00ff
                           000088   455 G$TCON$0$0 == 0x0088
                           000088   456 _TCON	=	0x0088
                           000089   457 G$TMOD$0$0 == 0x0089
                           000089   458 _TMOD	=	0x0089
                           00008A   459 G$TL0$0$0 == 0x008a
                           00008A   460 _TL0	=	0x008a
                           00008B   461 G$TL1$0$0 == 0x008b
                           00008B   462 _TL1	=	0x008b
                           00008C   463 G$TH0$0$0 == 0x008c
                           00008C   464 _TH0	=	0x008c
                           00008D   465 G$TH1$0$0 == 0x008d
                           00008D   466 _TH1	=	0x008d
                           00008E   467 G$CKCON$0$0 == 0x008e
                           00008E   468 _CKCON	=	0x008e
                           00008F   469 G$PSCTL$0$0 == 0x008f
                           00008F   470 _PSCTL	=	0x008f
                           000091   471 G$SSTA0$0$0 == 0x0091
                           000091   472 _SSTA0	=	0x0091
                           000098   473 G$SCON0$0$0 == 0x0098
                           000098   474 _SCON0	=	0x0098
                           000098   475 G$SCON$0$0 == 0x0098
                           000098   476 _SCON	=	0x0098
                           000099   477 G$SBUF0$0$0 == 0x0099
                           000099   478 _SBUF0	=	0x0099
                           000099   479 G$SBUF$0$0 == 0x0099
                           000099   480 _SBUF	=	0x0099
                           00009A   481 G$SPI0CFG$0$0 == 0x009a
                           00009A   482 _SPI0CFG	=	0x009a
                           00009B   483 G$SPI0DAT$0$0 == 0x009b
                           00009B   484 _SPI0DAT	=	0x009b
                           00009D   485 G$SPI0CKR$0$0 == 0x009d
                           00009D   486 _SPI0CKR	=	0x009d
                           0000A1   487 G$EMI0TC$0$0 == 0x00a1
                           0000A1   488 _EMI0TC	=	0x00a1
                           0000A2   489 G$EMI0CN$0$0 == 0x00a2
                           0000A2   490 _EMI0CN	=	0x00a2
                           0000A2   491 G$_XPAGE$0$0 == 0x00a2
                           0000A2   492 __XPAGE	=	0x00a2
                           0000A3   493 G$EMI0CF$0$0 == 0x00a3
                           0000A3   494 _EMI0CF	=	0x00a3
                           0000A9   495 G$SADDR0$0$0 == 0x00a9
                           0000A9   496 _SADDR0	=	0x00a9
                           0000B7   497 G$FLSCL$0$0 == 0x00b7
                           0000B7   498 _FLSCL	=	0x00b7
                           0000B9   499 G$SADEN0$0$0 == 0x00b9
                           0000B9   500 _SADEN0	=	0x00b9
                           0000BA   501 G$AMX0CF$0$0 == 0x00ba
                           0000BA   502 _AMX0CF	=	0x00ba
                           0000BB   503 G$AMX0SL$0$0 == 0x00bb
                           0000BB   504 _AMX0SL	=	0x00bb
                           0000BC   505 G$ADC0CF$0$0 == 0x00bc
                           0000BC   506 _ADC0CF	=	0x00bc
                           0000BE   507 G$ADC0L$0$0 == 0x00be
                           0000BE   508 _ADC0L	=	0x00be
                           0000BF   509 G$ADC0H$0$0 == 0x00bf
                           0000BF   510 _ADC0H	=	0x00bf
                           0000C0   511 G$SMB0CN$0$0 == 0x00c0
                           0000C0   512 _SMB0CN	=	0x00c0
                           0000C1   513 G$SMB0STA$0$0 == 0x00c1
                           0000C1   514 _SMB0STA	=	0x00c1
                           0000C2   515 G$SMB0DAT$0$0 == 0x00c2
                           0000C2   516 _SMB0DAT	=	0x00c2
                           0000C3   517 G$SMB0ADR$0$0 == 0x00c3
                           0000C3   518 _SMB0ADR	=	0x00c3
                           0000C4   519 G$ADC0GTL$0$0 == 0x00c4
                           0000C4   520 _ADC0GTL	=	0x00c4
                           0000C5   521 G$ADC0GTH$0$0 == 0x00c5
                           0000C5   522 _ADC0GTH	=	0x00c5
                           0000C6   523 G$ADC0LTL$0$0 == 0x00c6
                           0000C6   524 _ADC0LTL	=	0x00c6
                           0000C7   525 G$ADC0LTH$0$0 == 0x00c7
                           0000C7   526 _ADC0LTH	=	0x00c7
                           0000C8   527 G$TMR2CN$0$0 == 0x00c8
                           0000C8   528 _TMR2CN	=	0x00c8
                           0000C9   529 G$TMR2CF$0$0 == 0x00c9
                           0000C9   530 _TMR2CF	=	0x00c9
                           0000CA   531 G$RCAP2L$0$0 == 0x00ca
                           0000CA   532 _RCAP2L	=	0x00ca
                           0000CB   533 G$RCAP2H$0$0 == 0x00cb
                           0000CB   534 _RCAP2H	=	0x00cb
                           0000CC   535 G$TMR2L$0$0 == 0x00cc
                           0000CC   536 _TMR2L	=	0x00cc
                           0000CC   537 G$TL2$0$0 == 0x00cc
                           0000CC   538 _TL2	=	0x00cc
                           0000CD   539 G$TMR2H$0$0 == 0x00cd
                           0000CD   540 _TMR2H	=	0x00cd
                           0000CD   541 G$TH2$0$0 == 0x00cd
                           0000CD   542 _TH2	=	0x00cd
                           0000CF   543 G$SMB0CR$0$0 == 0x00cf
                           0000CF   544 _SMB0CR	=	0x00cf
                           0000D1   545 G$REF0CN$0$0 == 0x00d1
                           0000D1   546 _REF0CN	=	0x00d1
                           0000D2   547 G$DAC0L$0$0 == 0x00d2
                           0000D2   548 _DAC0L	=	0x00d2
                           0000D3   549 G$DAC0H$0$0 == 0x00d3
                           0000D3   550 _DAC0H	=	0x00d3
                           0000D4   551 G$DAC0CN$0$0 == 0x00d4
                           0000D4   552 _DAC0CN	=	0x00d4
                           0000D8   553 G$PCA0CN$0$0 == 0x00d8
                           0000D8   554 _PCA0CN	=	0x00d8
                           0000D9   555 G$PCA0MD$0$0 == 0x00d9
                           0000D9   556 _PCA0MD	=	0x00d9
                           0000DA   557 G$PCA0CPM0$0$0 == 0x00da
                           0000DA   558 _PCA0CPM0	=	0x00da
                           0000DB   559 G$PCA0CPM1$0$0 == 0x00db
                           0000DB   560 _PCA0CPM1	=	0x00db
                           0000DC   561 G$PCA0CPM2$0$0 == 0x00dc
                           0000DC   562 _PCA0CPM2	=	0x00dc
                           0000DD   563 G$PCA0CPM3$0$0 == 0x00dd
                           0000DD   564 _PCA0CPM3	=	0x00dd
                           0000DE   565 G$PCA0CPM4$0$0 == 0x00de
                           0000DE   566 _PCA0CPM4	=	0x00de
                           0000DF   567 G$PCA0CPM5$0$0 == 0x00df
                           0000DF   568 _PCA0CPM5	=	0x00df
                           0000E1   569 G$PCA0CPL5$0$0 == 0x00e1
                           0000E1   570 _PCA0CPL5	=	0x00e1
                           0000E2   571 G$PCA0CPH5$0$0 == 0x00e2
                           0000E2   572 _PCA0CPH5	=	0x00e2
                           0000E8   573 G$ADC0CN$0$0 == 0x00e8
                           0000E8   574 _ADC0CN	=	0x00e8
                           0000E9   575 G$PCA0CPL2$0$0 == 0x00e9
                           0000E9   576 _PCA0CPL2	=	0x00e9
                           0000EA   577 G$PCA0CPH2$0$0 == 0x00ea
                           0000EA   578 _PCA0CPH2	=	0x00ea
                           0000EB   579 G$PCA0CPL3$0$0 == 0x00eb
                           0000EB   580 _PCA0CPL3	=	0x00eb
                           0000EC   581 G$PCA0CPH3$0$0 == 0x00ec
                           0000EC   582 _PCA0CPH3	=	0x00ec
                           0000ED   583 G$PCA0CPL4$0$0 == 0x00ed
                           0000ED   584 _PCA0CPL4	=	0x00ed
                           0000EE   585 G$PCA0CPH4$0$0 == 0x00ee
                           0000EE   586 _PCA0CPH4	=	0x00ee
                           0000EF   587 G$RSTSRC$0$0 == 0x00ef
                           0000EF   588 _RSTSRC	=	0x00ef
                           0000F8   589 G$SPI0CN$0$0 == 0x00f8
                           0000F8   590 _SPI0CN	=	0x00f8
                           0000F9   591 G$PCA0L$0$0 == 0x00f9
                           0000F9   592 _PCA0L	=	0x00f9
                           0000FA   593 G$PCA0H$0$0 == 0x00fa
                           0000FA   594 _PCA0H	=	0x00fa
                           0000FB   595 G$PCA0CPL0$0$0 == 0x00fb
                           0000FB   596 _PCA0CPL0	=	0x00fb
                           0000FC   597 G$PCA0CPH0$0$0 == 0x00fc
                           0000FC   598 _PCA0CPH0	=	0x00fc
                           0000FD   599 G$PCA0CPL1$0$0 == 0x00fd
                           0000FD   600 _PCA0CPL1	=	0x00fd
                           0000FE   601 G$PCA0CPH1$0$0 == 0x00fe
                           0000FE   602 _PCA0CPH1	=	0x00fe
                           000088   603 G$CPT0CN$0$0 == 0x0088
                           000088   604 _CPT0CN	=	0x0088
                           000089   605 G$CPT0MD$0$0 == 0x0089
                           000089   606 _CPT0MD	=	0x0089
                           000098   607 G$SCON1$0$0 == 0x0098
                           000098   608 _SCON1	=	0x0098
                           000099   609 G$SBUF1$0$0 == 0x0099
                           000099   610 _SBUF1	=	0x0099
                           0000C8   611 G$TMR3CN$0$0 == 0x00c8
                           0000C8   612 _TMR3CN	=	0x00c8
                           0000C9   613 G$TMR3CF$0$0 == 0x00c9
                           0000C9   614 _TMR3CF	=	0x00c9
                           0000CA   615 G$RCAP3L$0$0 == 0x00ca
                           0000CA   616 _RCAP3L	=	0x00ca
                           0000CB   617 G$RCAP3H$0$0 == 0x00cb
                           0000CB   618 _RCAP3H	=	0x00cb
                           0000CC   619 G$TMR3L$0$0 == 0x00cc
                           0000CC   620 _TMR3L	=	0x00cc
                           0000CD   621 G$TMR3H$0$0 == 0x00cd
                           0000CD   622 _TMR3H	=	0x00cd
                           0000D2   623 G$DAC1L$0$0 == 0x00d2
                           0000D2   624 _DAC1L	=	0x00d2
                           0000D3   625 G$DAC1H$0$0 == 0x00d3
                           0000D3   626 _DAC1H	=	0x00d3
                           0000D4   627 G$DAC1CN$0$0 == 0x00d4
                           0000D4   628 _DAC1CN	=	0x00d4
                           000088   629 G$CPT1CN$0$0 == 0x0088
                           000088   630 _CPT1CN	=	0x0088
                           000089   631 G$CPT1MD$0$0 == 0x0089
                           000089   632 _CPT1MD	=	0x0089
                           0000BA   633 G$AMX2CF$0$0 == 0x00ba
                           0000BA   634 _AMX2CF	=	0x00ba
                           0000BB   635 G$AMX2SL$0$0 == 0x00bb
                           0000BB   636 _AMX2SL	=	0x00bb
                           0000BC   637 G$ADC2CF$0$0 == 0x00bc
                           0000BC   638 _ADC2CF	=	0x00bc
                           0000BE   639 G$ADC2$0$0 == 0x00be
                           0000BE   640 _ADC2	=	0x00be
                           0000C4   641 G$ADC2GT$0$0 == 0x00c4
                           0000C4   642 _ADC2GT	=	0x00c4
                           0000C6   643 G$ADC2LT$0$0 == 0x00c6
                           0000C6   644 _ADC2LT	=	0x00c6
                           0000C8   645 G$TMR4CN$0$0 == 0x00c8
                           0000C8   646 _TMR4CN	=	0x00c8
                           0000C9   647 G$TMR4CF$0$0 == 0x00c9
                           0000C9   648 _TMR4CF	=	0x00c9
                           0000CA   649 G$RCAP4L$0$0 == 0x00ca
                           0000CA   650 _RCAP4L	=	0x00ca
                           0000CB   651 G$RCAP4H$0$0 == 0x00cb
                           0000CB   652 _RCAP4H	=	0x00cb
                           0000CC   653 G$TMR4L$0$0 == 0x00cc
                           0000CC   654 _TMR4L	=	0x00cc
                           0000CD   655 G$TMR4H$0$0 == 0x00cd
                           0000CD   656 _TMR4H	=	0x00cd
                           0000E8   657 G$ADC2CN$0$0 == 0x00e8
                           0000E8   658 _ADC2CN	=	0x00e8
                           000091   659 G$MAC0BL$0$0 == 0x0091
                           000091   660 _MAC0BL	=	0x0091
                           000092   661 G$MAC0BH$0$0 == 0x0092
                           000092   662 _MAC0BH	=	0x0092
                           000093   663 G$MAC0ACC0$0$0 == 0x0093
                           000093   664 _MAC0ACC0	=	0x0093
                           000094   665 G$MAC0ACC1$0$0 == 0x0094
                           000094   666 _MAC0ACC1	=	0x0094
                           000095   667 G$MAC0ACC2$0$0 == 0x0095
                           000095   668 _MAC0ACC2	=	0x0095
                           000096   669 G$MAC0ACC3$0$0 == 0x0096
                           000096   670 _MAC0ACC3	=	0x0096
                           000097   671 G$MAC0OVR$0$0 == 0x0097
                           000097   672 _MAC0OVR	=	0x0097
                           0000C0   673 G$MAC0STA$0$0 == 0x00c0
                           0000C0   674 _MAC0STA	=	0x00c0
                           0000C1   675 G$MAC0AL$0$0 == 0x00c1
                           0000C1   676 _MAC0AL	=	0x00c1
                           0000C2   677 G$MAC0AH$0$0 == 0x00c2
                           0000C2   678 _MAC0AH	=	0x00c2
                           0000C3   679 G$MAC0CF$0$0 == 0x00c3
                           0000C3   680 _MAC0CF	=	0x00c3
                           0000CE   681 G$MAC0RNDL$0$0 == 0x00ce
                           0000CE   682 _MAC0RNDL	=	0x00ce
                           0000CF   683 G$MAC0RNDH$0$0 == 0x00cf
                           0000CF   684 _MAC0RNDH	=	0x00cf
                           000088   685 G$FLSTAT$0$0 == 0x0088
                           000088   686 _FLSTAT	=	0x0088
                           000089   687 G$PLL0CN$0$0 == 0x0089
                           000089   688 _PLL0CN	=	0x0089
                           00008A   689 G$OSCICN$0$0 == 0x008a
                           00008A   690 _OSCICN	=	0x008a
                           00008B   691 G$OSCICL$0$0 == 0x008b
                           00008B   692 _OSCICL	=	0x008b
                           00008C   693 G$OSCXCN$0$0 == 0x008c
                           00008C   694 _OSCXCN	=	0x008c
                           00008D   695 G$PLL0DIV$0$0 == 0x008d
                           00008D   696 _PLL0DIV	=	0x008d
                           00008E   697 G$PLL0MUL$0$0 == 0x008e
                           00008E   698 _PLL0MUL	=	0x008e
                           00008F   699 G$PLL0FLT$0$0 == 0x008f
                           00008F   700 _PLL0FLT	=	0x008f
                           000096   701 G$SFRPGCN$0$0 == 0x0096
                           000096   702 _SFRPGCN	=	0x0096
                           000097   703 G$CLKSEL$0$0 == 0x0097
                           000097   704 _CLKSEL	=	0x0097
                           00009A   705 G$CCH0MA$0$0 == 0x009a
                           00009A   706 _CCH0MA	=	0x009a
                           00009C   707 G$P4MDOUT$0$0 == 0x009c
                           00009C   708 _P4MDOUT	=	0x009c
                           00009D   709 G$P5MDOUT$0$0 == 0x009d
                           00009D   710 _P5MDOUT	=	0x009d
                           00009E   711 G$P6MDOUT$0$0 == 0x009e
                           00009E   712 _P6MDOUT	=	0x009e
                           00009F   713 G$P7MDOUT$0$0 == 0x009f
                           00009F   714 _P7MDOUT	=	0x009f
                           0000A1   715 G$CCH0CN$0$0 == 0x00a1
                           0000A1   716 _CCH0CN	=	0x00a1
                           0000A2   717 G$CCH0TN$0$0 == 0x00a2
                           0000A2   718 _CCH0TN	=	0x00a2
                           0000A3   719 G$CCH0LC$0$0 == 0x00a3
                           0000A3   720 _CCH0LC	=	0x00a3
                           0000A4   721 G$P0MDOUT$0$0 == 0x00a4
                           0000A4   722 _P0MDOUT	=	0x00a4
                           0000A5   723 G$P1MDOUT$0$0 == 0x00a5
                           0000A5   724 _P1MDOUT	=	0x00a5
                           0000A6   725 G$P2MDOUT$0$0 == 0x00a6
                           0000A6   726 _P2MDOUT	=	0x00a6
                           0000A7   727 G$P3MDOUT$0$0 == 0x00a7
                           0000A7   728 _P3MDOUT	=	0x00a7
                           0000AD   729 G$P1MDIN$0$0 == 0x00ad
                           0000AD   730 _P1MDIN	=	0x00ad
                           0000B7   731 G$FLACL$0$0 == 0x00b7
                           0000B7   732 _FLACL	=	0x00b7
                           0000C8   733 G$P4$0$0 == 0x00c8
                           0000C8   734 _P4	=	0x00c8
                           0000D8   735 G$P5$0$0 == 0x00d8
                           0000D8   736 _P5	=	0x00d8
                           0000E1   737 G$XBR0$0$0 == 0x00e1
                           0000E1   738 _XBR0	=	0x00e1
                           0000E2   739 G$XBR1$0$0 == 0x00e2
                           0000E2   740 _XBR1	=	0x00e2
                           0000E3   741 G$XBR2$0$0 == 0x00e3
                           0000E3   742 _XBR2	=	0x00e3
                           0000E8   743 G$P6$0$0 == 0x00e8
                           0000E8   744 _P6	=	0x00e8
                           0000F8   745 G$P7$0$0 == 0x00f8
                           0000F8   746 _P7	=	0x00f8
                           008C8A   747 G$TMR0$0$0 == 0x8c8a
                           008C8A   748 _TMR0	=	0x8c8a
                           008D8B   749 G$TMR1$0$0 == 0x8d8b
                           008D8B   750 _TMR1	=	0x8d8b
                           00CDCC   751 G$TMR2$0$0 == 0xcdcc
                           00CDCC   752 _TMR2	=	0xcdcc
                           00CBCA   753 G$RCAP2$0$0 == 0xcbca
                           00CBCA   754 _RCAP2	=	0xcbca
                           00BFBE   755 G$ADC0$0$0 == 0xbfbe
                           00BFBE   756 _ADC0	=	0xbfbe
                           00C5C4   757 G$ADC0GT$0$0 == 0xc5c4
                           00C5C4   758 _ADC0GT	=	0xc5c4
                           00C7C6   759 G$ADC0LT$0$0 == 0xc7c6
                           00C7C6   760 _ADC0LT	=	0xc7c6
                           00D3D2   761 G$DAC0$0$0 == 0xd3d2
                           00D3D2   762 _DAC0	=	0xd3d2
                           00FAF9   763 G$PCA0$0$0 == 0xfaf9
                           00FAF9   764 _PCA0	=	0xfaf9
                           00FCFB   765 G$PCA0CP0$0$0 == 0xfcfb
                           00FCFB   766 _PCA0CP0	=	0xfcfb
                           00FEFD   767 G$PCA0CP1$0$0 == 0xfefd
                           00FEFD   768 _PCA0CP1	=	0xfefd
                           00EAE9   769 G$PCA0CP2$0$0 == 0xeae9
                           00EAE9   770 _PCA0CP2	=	0xeae9
                           00ECEB   771 G$PCA0CP3$0$0 == 0xeceb
                           00ECEB   772 _PCA0CP3	=	0xeceb
                           00EEED   773 G$PCA0CP4$0$0 == 0xeeed
                           00EEED   774 _PCA0CP4	=	0xeeed
                           00E2E1   775 G$PCA0CP5$0$0 == 0xe2e1
                           00E2E1   776 _PCA0CP5	=	0xe2e1
                           00CDCC   777 G$TMR3$0$0 == 0xcdcc
                           00CDCC   778 _TMR3	=	0xcdcc
                           00CBCA   779 G$RCAP3$0$0 == 0xcbca
                           00CBCA   780 _RCAP3	=	0xcbca
                           00D3D2   781 G$DAC1$0$0 == 0xd3d2
                           00D3D2   782 _DAC1	=	0xd3d2
                           00CDCC   783 G$TMR4$0$0 == 0xcdcc
                           00CDCC   784 _TMR4	=	0xcdcc
                           00CBCA   785 G$RCAP4$0$0 == 0xcbca
                           00CBCA   786 _RCAP4	=	0xcbca
                           00C2C1   787 G$MAC0A$0$0 == 0xc2c1
                           00C2C1   788 _MAC0A	=	0xc2c1
                           96959493   789 G$MAC0ACC$0$0 == 0x96959493
                           96959493   790 _MAC0ACC	=	0x96959493
                           00CFCE   791 G$MAC0RND$0$0 == 0xcfce
                           00CFCE   792 _MAC0RND	=	0xcfce
                                    793 ;--------------------------------------------------------
                                    794 ; special function bits
                                    795 ;--------------------------------------------------------
                                    796 	.area RSEG    (ABS,DATA)
      000000                        797 	.org 0x0000
                           000080   798 G$P0_0$0$0 == 0x0080
                           000080   799 _P0_0	=	0x0080
                           000081   800 G$P0_1$0$0 == 0x0081
                           000081   801 _P0_1	=	0x0081
                           000082   802 G$P0_2$0$0 == 0x0082
                           000082   803 _P0_2	=	0x0082
                           000083   804 G$P0_3$0$0 == 0x0083
                           000083   805 _P0_3	=	0x0083
                           000084   806 G$P0_4$0$0 == 0x0084
                           000084   807 _P0_4	=	0x0084
                           000085   808 G$P0_5$0$0 == 0x0085
                           000085   809 _P0_5	=	0x0085
                           000086   810 G$P0_6$0$0 == 0x0086
                           000086   811 _P0_6	=	0x0086
                           000087   812 G$P0_7$0$0 == 0x0087
                           000087   813 _P0_7	=	0x0087
                           000088   814 G$IT0$0$0 == 0x0088
                           000088   815 _IT0	=	0x0088
                           000089   816 G$IE0$0$0 == 0x0089
                           000089   817 _IE0	=	0x0089
                           00008A   818 G$IT1$0$0 == 0x008a
                           00008A   819 _IT1	=	0x008a
                           00008B   820 G$IE1$0$0 == 0x008b
                           00008B   821 _IE1	=	0x008b
                           00008C   822 G$TR0$0$0 == 0x008c
                           00008C   823 _TR0	=	0x008c
                           00008D   824 G$TF0$0$0 == 0x008d
                           00008D   825 _TF0	=	0x008d
                           00008E   826 G$TR1$0$0 == 0x008e
                           00008E   827 _TR1	=	0x008e
                           00008F   828 G$TF1$0$0 == 0x008f
                           00008F   829 _TF1	=	0x008f
                           000088   830 G$CP0HYN0$0$0 == 0x0088
                           000088   831 _CP0HYN0	=	0x0088
                           000089   832 G$CP0HYN1$0$0 == 0x0089
                           000089   833 _CP0HYN1	=	0x0089
                           00008A   834 G$CP0HYP0$0$0 == 0x008a
                           00008A   835 _CP0HYP0	=	0x008a
                           00008B   836 G$CP0HYP1$0$0 == 0x008b
                           00008B   837 _CP0HYP1	=	0x008b
                           00008C   838 G$CP0FIF$0$0 == 0x008c
                           00008C   839 _CP0FIF	=	0x008c
                           00008D   840 G$CP0RIF$0$0 == 0x008d
                           00008D   841 _CP0RIF	=	0x008d
                           00008E   842 G$CP0OUT$0$0 == 0x008e
                           00008E   843 _CP0OUT	=	0x008e
                           00008F   844 G$CP0EN$0$0 == 0x008f
                           00008F   845 _CP0EN	=	0x008f
                           000088   846 G$CP1HYN0$0$0 == 0x0088
                           000088   847 _CP1HYN0	=	0x0088
                           000089   848 G$CP1HYN1$0$0 == 0x0089
                           000089   849 _CP1HYN1	=	0x0089
                           00008A   850 G$CP1HYP0$0$0 == 0x008a
                           00008A   851 _CP1HYP0	=	0x008a
                           00008B   852 G$CP1HYP1$0$0 == 0x008b
                           00008B   853 _CP1HYP1	=	0x008b
                           00008C   854 G$CP1FIF$0$0 == 0x008c
                           00008C   855 _CP1FIF	=	0x008c
                           00008D   856 G$CP1RIF$0$0 == 0x008d
                           00008D   857 _CP1RIF	=	0x008d
                           00008E   858 G$CP1OUT$0$0 == 0x008e
                           00008E   859 _CP1OUT	=	0x008e
                           00008F   860 G$CP1EN$0$0 == 0x008f
                           00008F   861 _CP1EN	=	0x008f
                           000088   862 G$FLHBUSY$0$0 == 0x0088
                           000088   863 _FLHBUSY	=	0x0088
                           000090   864 G$P1_0$0$0 == 0x0090
                           000090   865 _P1_0	=	0x0090
                           000091   866 G$P1_1$0$0 == 0x0091
                           000091   867 _P1_1	=	0x0091
                           000092   868 G$P1_2$0$0 == 0x0092
                           000092   869 _P1_2	=	0x0092
                           000093   870 G$P1_3$0$0 == 0x0093
                           000093   871 _P1_3	=	0x0093
                           000094   872 G$P1_4$0$0 == 0x0094
                           000094   873 _P1_4	=	0x0094
                           000095   874 G$P1_5$0$0 == 0x0095
                           000095   875 _P1_5	=	0x0095
                           000096   876 G$P1_6$0$0 == 0x0096
                           000096   877 _P1_6	=	0x0096
                           000097   878 G$P1_7$0$0 == 0x0097
                           000097   879 _P1_7	=	0x0097
                           000098   880 G$RI0$0$0 == 0x0098
                           000098   881 _RI0	=	0x0098
                           000098   882 G$RI$0$0 == 0x0098
                           000098   883 _RI	=	0x0098
                           000099   884 G$TI0$0$0 == 0x0099
                           000099   885 _TI0	=	0x0099
                           000099   886 G$TI$0$0 == 0x0099
                           000099   887 _TI	=	0x0099
                           00009A   888 G$RB80$0$0 == 0x009a
                           00009A   889 _RB80	=	0x009a
                           00009B   890 G$TB80$0$0 == 0x009b
                           00009B   891 _TB80	=	0x009b
                           00009C   892 G$REN0$0$0 == 0x009c
                           00009C   893 _REN0	=	0x009c
                           00009C   894 G$REN$0$0 == 0x009c
                           00009C   895 _REN	=	0x009c
                           00009D   896 G$SM20$0$0 == 0x009d
                           00009D   897 _SM20	=	0x009d
                           00009E   898 G$SM10$0$0 == 0x009e
                           00009E   899 _SM10	=	0x009e
                           00009F   900 G$SM00$0$0 == 0x009f
                           00009F   901 _SM00	=	0x009f
                           000098   902 G$RI1$0$0 == 0x0098
                           000098   903 _RI1	=	0x0098
                           000099   904 G$TI1$0$0 == 0x0099
                           000099   905 _TI1	=	0x0099
                           00009A   906 G$RB81$0$0 == 0x009a
                           00009A   907 _RB81	=	0x009a
                           00009B   908 G$TB81$0$0 == 0x009b
                           00009B   909 _TB81	=	0x009b
                           00009C   910 G$REN1$0$0 == 0x009c
                           00009C   911 _REN1	=	0x009c
                           00009D   912 G$MCE1$0$0 == 0x009d
                           00009D   913 _MCE1	=	0x009d
                           00009F   914 G$S1MODE$0$0 == 0x009f
                           00009F   915 _S1MODE	=	0x009f
                           0000A0   916 G$P2_0$0$0 == 0x00a0
                           0000A0   917 _P2_0	=	0x00a0
                           0000A1   918 G$P2_1$0$0 == 0x00a1
                           0000A1   919 _P2_1	=	0x00a1
                           0000A2   920 G$P2_2$0$0 == 0x00a2
                           0000A2   921 _P2_2	=	0x00a2
                           0000A3   922 G$P2_3$0$0 == 0x00a3
                           0000A3   923 _P2_3	=	0x00a3
                           0000A4   924 G$P2_4$0$0 == 0x00a4
                           0000A4   925 _P2_4	=	0x00a4
                           0000A5   926 G$P2_5$0$0 == 0x00a5
                           0000A5   927 _P2_5	=	0x00a5
                           0000A6   928 G$P2_6$0$0 == 0x00a6
                           0000A6   929 _P2_6	=	0x00a6
                           0000A7   930 G$P2_7$0$0 == 0x00a7
                           0000A7   931 _P2_7	=	0x00a7
                           0000A8   932 G$EX0$0$0 == 0x00a8
                           0000A8   933 _EX0	=	0x00a8
                           0000A9   934 G$ET0$0$0 == 0x00a9
                           0000A9   935 _ET0	=	0x00a9
                           0000AA   936 G$EX1$0$0 == 0x00aa
                           0000AA   937 _EX1	=	0x00aa
                           0000AB   938 G$ET1$0$0 == 0x00ab
                           0000AB   939 _ET1	=	0x00ab
                           0000AC   940 G$ES0$0$0 == 0x00ac
                           0000AC   941 _ES0	=	0x00ac
                           0000AC   942 G$ES$0$0 == 0x00ac
                           0000AC   943 _ES	=	0x00ac
                           0000AD   944 G$ET2$0$0 == 0x00ad
                           0000AD   945 _ET2	=	0x00ad
                           0000AF   946 G$EA$0$0 == 0x00af
                           0000AF   947 _EA	=	0x00af
                           0000B0   948 G$P3_0$0$0 == 0x00b0
                           0000B0   949 _P3_0	=	0x00b0
                           0000B1   950 G$P3_1$0$0 == 0x00b1
                           0000B1   951 _P3_1	=	0x00b1
                           0000B2   952 G$P3_2$0$0 == 0x00b2
                           0000B2   953 _P3_2	=	0x00b2
                           0000B3   954 G$P3_3$0$0 == 0x00b3
                           0000B3   955 _P3_3	=	0x00b3
                           0000B4   956 G$P3_4$0$0 == 0x00b4
                           0000B4   957 _P3_4	=	0x00b4
                           0000B5   958 G$P3_5$0$0 == 0x00b5
                           0000B5   959 _P3_5	=	0x00b5
                           0000B6   960 G$P3_6$0$0 == 0x00b6
                           0000B6   961 _P3_6	=	0x00b6
                           0000B7   962 G$P3_7$0$0 == 0x00b7
                           0000B7   963 _P3_7	=	0x00b7
                           0000B8   964 G$PX0$0$0 == 0x00b8
                           0000B8   965 _PX0	=	0x00b8
                           0000B9   966 G$PT0$0$0 == 0x00b9
                           0000B9   967 _PT0	=	0x00b9
                           0000BA   968 G$PX1$0$0 == 0x00ba
                           0000BA   969 _PX1	=	0x00ba
                           0000BB   970 G$PT1$0$0 == 0x00bb
                           0000BB   971 _PT1	=	0x00bb
                           0000BC   972 G$PS0$0$0 == 0x00bc
                           0000BC   973 _PS0	=	0x00bc
                           0000BC   974 G$PS$0$0 == 0x00bc
                           0000BC   975 _PS	=	0x00bc
                           0000BD   976 G$PT2$0$0 == 0x00bd
                           0000BD   977 _PT2	=	0x00bd
                           0000C0   978 G$SMBTOE$0$0 == 0x00c0
                           0000C0   979 _SMBTOE	=	0x00c0
                           0000C1   980 G$SMBFTE$0$0 == 0x00c1
                           0000C1   981 _SMBFTE	=	0x00c1
                           0000C2   982 G$AA$0$0 == 0x00c2
                           0000C2   983 _AA	=	0x00c2
                           0000C3   984 G$SI$0$0 == 0x00c3
                           0000C3   985 _SI	=	0x00c3
                           0000C4   986 G$STO$0$0 == 0x00c4
                           0000C4   987 _STO	=	0x00c4
                           0000C5   988 G$STA$0$0 == 0x00c5
                           0000C5   989 _STA	=	0x00c5
                           0000C6   990 G$ENSMB$0$0 == 0x00c6
                           0000C6   991 _ENSMB	=	0x00c6
                           0000C7   992 G$BUSY$0$0 == 0x00c7
                           0000C7   993 _BUSY	=	0x00c7
                           0000C0   994 G$MAC0N$0$0 == 0x00c0
                           0000C0   995 _MAC0N	=	0x00c0
                           0000C1   996 G$MAC0SO$0$0 == 0x00c1
                           0000C1   997 _MAC0SO	=	0x00c1
                           0000C2   998 G$MAC0Z$0$0 == 0x00c2
                           0000C2   999 _MAC0Z	=	0x00c2
                           0000C3  1000 G$MAC0HO$0$0 == 0x00c3
                           0000C3  1001 _MAC0HO	=	0x00c3
                           0000C8  1002 G$CPRL2$0$0 == 0x00c8
                           0000C8  1003 _CPRL2	=	0x00c8
                           0000C9  1004 G$CT2$0$0 == 0x00c9
                           0000C9  1005 _CT2	=	0x00c9
                           0000CA  1006 G$TR2$0$0 == 0x00ca
                           0000CA  1007 _TR2	=	0x00ca
                           0000CB  1008 G$EXEN2$0$0 == 0x00cb
                           0000CB  1009 _EXEN2	=	0x00cb
                           0000CE  1010 G$EXF2$0$0 == 0x00ce
                           0000CE  1011 _EXF2	=	0x00ce
                           0000CF  1012 G$TF2$0$0 == 0x00cf
                           0000CF  1013 _TF2	=	0x00cf
                           0000C8  1014 G$CPRL3$0$0 == 0x00c8
                           0000C8  1015 _CPRL3	=	0x00c8
                           0000C9  1016 G$CT3$0$0 == 0x00c9
                           0000C9  1017 _CT3	=	0x00c9
                           0000CA  1018 G$TR3$0$0 == 0x00ca
                           0000CA  1019 _TR3	=	0x00ca
                           0000CB  1020 G$EXEN3$0$0 == 0x00cb
                           0000CB  1021 _EXEN3	=	0x00cb
                           0000CE  1022 G$EXF3$0$0 == 0x00ce
                           0000CE  1023 _EXF3	=	0x00ce
                           0000CF  1024 G$TF3$0$0 == 0x00cf
                           0000CF  1025 _TF3	=	0x00cf
                           0000C8  1026 G$CPRL4$0$0 == 0x00c8
                           0000C8  1027 _CPRL4	=	0x00c8
                           0000C9  1028 G$CT4$0$0 == 0x00c9
                           0000C9  1029 _CT4	=	0x00c9
                           0000CA  1030 G$TR4$0$0 == 0x00ca
                           0000CA  1031 _TR4	=	0x00ca
                           0000CB  1032 G$EXEN4$0$0 == 0x00cb
                           0000CB  1033 _EXEN4	=	0x00cb
                           0000CE  1034 G$EXF4$0$0 == 0x00ce
                           0000CE  1035 _EXF4	=	0x00ce
                           0000CF  1036 G$TF4$0$0 == 0x00cf
                           0000CF  1037 _TF4	=	0x00cf
                           0000C8  1038 G$P4_0$0$0 == 0x00c8
                           0000C8  1039 _P4_0	=	0x00c8
                           0000C9  1040 G$P4_1$0$0 == 0x00c9
                           0000C9  1041 _P4_1	=	0x00c9
                           0000CA  1042 G$P4_2$0$0 == 0x00ca
                           0000CA  1043 _P4_2	=	0x00ca
                           0000CB  1044 G$P4_3$0$0 == 0x00cb
                           0000CB  1045 _P4_3	=	0x00cb
                           0000CC  1046 G$P4_4$0$0 == 0x00cc
                           0000CC  1047 _P4_4	=	0x00cc
                           0000CD  1048 G$P4_5$0$0 == 0x00cd
                           0000CD  1049 _P4_5	=	0x00cd
                           0000CE  1050 G$P4_6$0$0 == 0x00ce
                           0000CE  1051 _P4_6	=	0x00ce
                           0000CF  1052 G$P4_7$0$0 == 0x00cf
                           0000CF  1053 _P4_7	=	0x00cf
                           0000D0  1054 G$P$0$0 == 0x00d0
                           0000D0  1055 _P	=	0x00d0
                           0000D1  1056 G$F1$0$0 == 0x00d1
                           0000D1  1057 _F1	=	0x00d1
                           0000D2  1058 G$OV$0$0 == 0x00d2
                           0000D2  1059 _OV	=	0x00d2
                           0000D3  1060 G$RS0$0$0 == 0x00d3
                           0000D3  1061 _RS0	=	0x00d3
                           0000D4  1062 G$RS1$0$0 == 0x00d4
                           0000D4  1063 _RS1	=	0x00d4
                           0000D5  1064 G$F0$0$0 == 0x00d5
                           0000D5  1065 _F0	=	0x00d5
                           0000D6  1066 G$AC$0$0 == 0x00d6
                           0000D6  1067 _AC	=	0x00d6
                           0000D7  1068 G$CY$0$0 == 0x00d7
                           0000D7  1069 _CY	=	0x00d7
                           0000D8  1070 G$CCF0$0$0 == 0x00d8
                           0000D8  1071 _CCF0	=	0x00d8
                           0000D9  1072 G$CCF1$0$0 == 0x00d9
                           0000D9  1073 _CCF1	=	0x00d9
                           0000DA  1074 G$CCF2$0$0 == 0x00da
                           0000DA  1075 _CCF2	=	0x00da
                           0000DB  1076 G$CCF3$0$0 == 0x00db
                           0000DB  1077 _CCF3	=	0x00db
                           0000DC  1078 G$CCF4$0$0 == 0x00dc
                           0000DC  1079 _CCF4	=	0x00dc
                           0000DD  1080 G$CCF5$0$0 == 0x00dd
                           0000DD  1081 _CCF5	=	0x00dd
                           0000DE  1082 G$CR$0$0 == 0x00de
                           0000DE  1083 _CR	=	0x00de
                           0000DF  1084 G$CF$0$0 == 0x00df
                           0000DF  1085 _CF	=	0x00df
                           0000D8  1086 G$P5_0$0$0 == 0x00d8
                           0000D8  1087 _P5_0	=	0x00d8
                           0000D9  1088 G$P5_1$0$0 == 0x00d9
                           0000D9  1089 _P5_1	=	0x00d9
                           0000DA  1090 G$P5_2$0$0 == 0x00da
                           0000DA  1091 _P5_2	=	0x00da
                           0000DB  1092 G$P5_3$0$0 == 0x00db
                           0000DB  1093 _P5_3	=	0x00db
                           0000DC  1094 G$P5_4$0$0 == 0x00dc
                           0000DC  1095 _P5_4	=	0x00dc
                           0000DD  1096 G$P5_5$0$0 == 0x00dd
                           0000DD  1097 _P5_5	=	0x00dd
                           0000DE  1098 G$P5_6$0$0 == 0x00de
                           0000DE  1099 _P5_6	=	0x00de
                           0000DF  1100 G$P5_7$0$0 == 0x00df
                           0000DF  1101 _P5_7	=	0x00df
                           0000E8  1102 G$AD0LJST$0$0 == 0x00e8
                           0000E8  1103 _AD0LJST	=	0x00e8
                           0000E9  1104 G$AD0WINT$0$0 == 0x00e9
                           0000E9  1105 _AD0WINT	=	0x00e9
                           0000EA  1106 G$AD0CM0$0$0 == 0x00ea
                           0000EA  1107 _AD0CM0	=	0x00ea
                           0000EB  1108 G$AD0CM1$0$0 == 0x00eb
                           0000EB  1109 _AD0CM1	=	0x00eb
                           0000EC  1110 G$AD0BUSY$0$0 == 0x00ec
                           0000EC  1111 _AD0BUSY	=	0x00ec
                           0000ED  1112 G$AD0INT$0$0 == 0x00ed
                           0000ED  1113 _AD0INT	=	0x00ed
                           0000EE  1114 G$AD0TM$0$0 == 0x00ee
                           0000EE  1115 _AD0TM	=	0x00ee
                           0000EF  1116 G$AD0EN$0$0 == 0x00ef
                           0000EF  1117 _AD0EN	=	0x00ef
                           0000E8  1118 G$AD2WINT$0$0 == 0x00e8
                           0000E8  1119 _AD2WINT	=	0x00e8
                           0000E9  1120 G$AD2CM0$0$0 == 0x00e9
                           0000E9  1121 _AD2CM0	=	0x00e9
                           0000EA  1122 G$AD2CM1$0$0 == 0x00ea
                           0000EA  1123 _AD2CM1	=	0x00ea
                           0000EB  1124 G$AD2CM2$0$0 == 0x00eb
                           0000EB  1125 _AD2CM2	=	0x00eb
                           0000EC  1126 G$AD2BUSY$0$0 == 0x00ec
                           0000EC  1127 _AD2BUSY	=	0x00ec
                           0000ED  1128 G$AD2INT$0$0 == 0x00ed
                           0000ED  1129 _AD2INT	=	0x00ed
                           0000EE  1130 G$AD2TM$0$0 == 0x00ee
                           0000EE  1131 _AD2TM	=	0x00ee
                           0000EF  1132 G$AD2EN$0$0 == 0x00ef
                           0000EF  1133 _AD2EN	=	0x00ef
                           0000E8  1134 G$P6_0$0$0 == 0x00e8
                           0000E8  1135 _P6_0	=	0x00e8
                           0000E9  1136 G$P6_1$0$0 == 0x00e9
                           0000E9  1137 _P6_1	=	0x00e9
                           0000EA  1138 G$P6_2$0$0 == 0x00ea
                           0000EA  1139 _P6_2	=	0x00ea
                           0000EB  1140 G$P6_3$0$0 == 0x00eb
                           0000EB  1141 _P6_3	=	0x00eb
                           0000EC  1142 G$P6_4$0$0 == 0x00ec
                           0000EC  1143 _P6_4	=	0x00ec
                           0000ED  1144 G$P6_5$0$0 == 0x00ed
                           0000ED  1145 _P6_5	=	0x00ed
                           0000EE  1146 G$P6_6$0$0 == 0x00ee
                           0000EE  1147 _P6_6	=	0x00ee
                           0000EF  1148 G$P6_7$0$0 == 0x00ef
                           0000EF  1149 _P6_7	=	0x00ef
                           0000F8  1150 G$SPIEN$0$0 == 0x00f8
                           0000F8  1151 _SPIEN	=	0x00f8
                           0000F9  1152 G$TXBMT$0$0 == 0x00f9
                           0000F9  1153 _TXBMT	=	0x00f9
                           0000FA  1154 G$NSSMD0$0$0 == 0x00fa
                           0000FA  1155 _NSSMD0	=	0x00fa
                           0000FB  1156 G$NSSMD1$0$0 == 0x00fb
                           0000FB  1157 _NSSMD1	=	0x00fb
                           0000FC  1158 G$RXOVRN$0$0 == 0x00fc
                           0000FC  1159 _RXOVRN	=	0x00fc
                           0000FD  1160 G$MODF$0$0 == 0x00fd
                           0000FD  1161 _MODF	=	0x00fd
                           0000FE  1162 G$WCOL$0$0 == 0x00fe
                           0000FE  1163 _WCOL	=	0x00fe
                           0000FF  1164 G$SPIF$0$0 == 0x00ff
                           0000FF  1165 _SPIF	=	0x00ff
                           0000F8  1166 G$P7_0$0$0 == 0x00f8
                           0000F8  1167 _P7_0	=	0x00f8
                           0000F9  1168 G$P7_1$0$0 == 0x00f9
                           0000F9  1169 _P7_1	=	0x00f9
                           0000FA  1170 G$P7_2$0$0 == 0x00fa
                           0000FA  1171 _P7_2	=	0x00fa
                           0000FB  1172 G$P7_3$0$0 == 0x00fb
                           0000FB  1173 _P7_3	=	0x00fb
                           0000FC  1174 G$P7_4$0$0 == 0x00fc
                           0000FC  1175 _P7_4	=	0x00fc
                           0000FD  1176 G$P7_5$0$0 == 0x00fd
                           0000FD  1177 _P7_5	=	0x00fd
                           0000FE  1178 G$P7_6$0$0 == 0x00fe
                           0000FE  1179 _P7_6	=	0x00fe
                           0000FF  1180 G$P7_7$0$0 == 0x00ff
                           0000FF  1181 _P7_7	=	0x00ff
                                   1182 ;--------------------------------------------------------
                                   1183 ; overlayable register banks
                                   1184 ;--------------------------------------------------------
                                   1185 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                       1186 	.ds 8
                                   1187 ;--------------------------------------------------------
                                   1188 ; internal ram data
                                   1189 ;--------------------------------------------------------
                                   1190 	.area DSEG    (DATA)
                           000000  1191 G$count$0$0==.
      000000                       1192 _count::
      000000                       1193 	.ds 1
                           000001  1194 Lmain.loop$j$1$31==.
      000001                       1195 _loop_j_1_31:
      000001                       1196 	.ds 1
                           000002  1197 Lmain.loop$parityCount$1$31==.
      000002                       1198 _loop_parityCount_1_31:
      000002                       1199 	.ds 1
                                   1200 ;--------------------------------------------------------
                                   1201 ; overlayable items in internal ram 
                                   1202 ;--------------------------------------------------------
                                   1203 	.area	OSEG    (OVR,DATA)
                                   1204 	.area	OSEG    (OVR,DATA)
                                   1205 	.area	OSEG    (OVR,DATA)
                                   1206 	.area	OSEG    (OVR,DATA)
                                   1207 	.area	OSEG    (OVR,DATA)
                                   1208 	.area	OSEG    (OVR,DATA)
                                   1209 ;--------------------------------------------------------
                                   1210 ; Stack segment in internal ram 
                                   1211 ;--------------------------------------------------------
                                   1212 	.area	SSEG
      000000                       1213 __start__stack:
      000000                       1214 	.ds	1
                                   1215 
                                   1216 ;--------------------------------------------------------
                                   1217 ; indirectly addressable internal ram data
                                   1218 ;--------------------------------------------------------
                                   1219 	.area ISEG    (DATA)
                                   1220 ;--------------------------------------------------------
                                   1221 ; absolute internal ram data
                                   1222 ;--------------------------------------------------------
                                   1223 	.area IABS    (ABS,DATA)
                                   1224 	.area IABS    (ABS,DATA)
                                   1225 ;--------------------------------------------------------
                                   1226 ; bit data
                                   1227 ;--------------------------------------------------------
                                   1228 	.area BSEG    (BIT)
                                   1229 ;--------------------------------------------------------
                                   1230 ; paged external ram data
                                   1231 ;--------------------------------------------------------
                                   1232 	.area PSEG    (PAG,XDATA)
                                   1233 ;--------------------------------------------------------
                                   1234 ; external ram data
                                   1235 ;--------------------------------------------------------
                                   1236 	.area XSEG    (XDATA)
                           000000  1237 Lmain.loop$stuff$1$31==.
      000000                       1238 _loop_stuff_1_31:
      000000                       1239 	.ds 10239
                                   1240 ;--------------------------------------------------------
                                   1241 ; absolute external ram data
                                   1242 ;--------------------------------------------------------
                                   1243 	.area XABS    (ABS,XDATA)
                                   1244 ;--------------------------------------------------------
                                   1245 ; external initialized ram data
                                   1246 ;--------------------------------------------------------
                                   1247 	.area XISEG   (XDATA)
                                   1248 	.area HOME    (CODE)
                                   1249 	.area GSINIT0 (CODE)
                                   1250 	.area GSINIT1 (CODE)
                                   1251 	.area GSINIT2 (CODE)
                                   1252 	.area GSINIT3 (CODE)
                                   1253 	.area GSINIT4 (CODE)
                                   1254 	.area GSINIT5 (CODE)
                                   1255 	.area GSINIT  (CODE)
                                   1256 	.area GSFINAL (CODE)
                                   1257 	.area CSEG    (CODE)
                                   1258 ;--------------------------------------------------------
                                   1259 ; interrupt vector 
                                   1260 ;--------------------------------------------------------
                                   1261 	.area HOME    (CODE)
      000000                       1262 __interrupt_vect:
      000000 02r00r00         [24] 1263 	ljmp	__sdcc_gsinit_startup
                                   1264 ;--------------------------------------------------------
                                   1265 ; global & static initialisations
                                   1266 ;--------------------------------------------------------
                                   1267 	.area HOME    (CODE)
                                   1268 	.area GSINIT  (CODE)
                                   1269 	.area GSFINAL (CODE)
                                   1270 	.area GSINIT  (CODE)
                                   1271 	.globl __sdcc_gsinit_startup
                                   1272 	.globl __sdcc_program_startup
                                   1273 	.globl __start__stack
                                   1274 	.globl __mcs51_genXINIT
                                   1275 	.globl __mcs51_genXRAMCLEAR
                                   1276 	.globl __mcs51_genRAMCLEAR
                           000000  1277 	C$main.c$25$1$44 ==.
                                   1278 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:25: unsigned char count = 0;
      000000 75*00 00         [24] 1279 	mov	_count,#0x00
                                   1280 	.area GSFINAL (CODE)
      000000 02r00r03         [24] 1281 	ljmp	__sdcc_program_startup
                                   1282 ;--------------------------------------------------------
                                   1283 ; Home
                                   1284 ;--------------------------------------------------------
                                   1285 	.area HOME    (CODE)
                                   1286 	.area HOME    (CODE)
      000003                       1287 __sdcc_program_startup:
      000003 02r00r19         [24] 1288 	ljmp	_main
                                   1289 ;	return from main will return to caller
                                   1290 ;--------------------------------------------------------
                                   1291 ; code
                                   1292 ;--------------------------------------------------------
                                   1293 	.area CSEG    (CODE)
                                   1294 ;------------------------------------------------------------
                                   1295 ;Allocation info for local variables in function 'putchar'
                                   1296 ;------------------------------------------------------------
                                   1297 ;c                         Allocated to registers r7 
                                   1298 ;------------------------------------------------------------
                           000000  1299 	G$putchar$0$0 ==.
                           000000  1300 	C$putget.h$18$0$0 ==.
                                   1301 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\/putget.h:18: void putchar(char c)
                                   1302 ;	-----------------------------------------
                                   1303 ;	 function putchar
                                   1304 ;	-----------------------------------------
      000000                       1305 _putchar:
                           000007  1306 	ar7 = 0x07
                           000006  1307 	ar6 = 0x06
                           000005  1308 	ar5 = 0x05
                           000004  1309 	ar4 = 0x04
                           000003  1310 	ar3 = 0x03
                           000002  1311 	ar2 = 0x02
                           000001  1312 	ar1 = 0x01
                           000000  1313 	ar0 = 0x00
      000000 AF 82            [24] 1314 	mov	r7,dpl
                           000002  1315 	C$putget.h$20$1$16 ==.
                                   1316 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\/putget.h:20: while(!TI0); 
      000002                       1317 00101$:
                           000002  1318 	C$putget.h$21$1$16 ==.
                                   1319 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\/putget.h:21: TI0=0;
      000002 10 99 02         [24] 1320 	jbc	_TI0,00112$
      000005 80 FB            [24] 1321 	sjmp	00101$
      000007                       1322 00112$:
                           000007  1323 	C$putget.h$22$1$16 ==.
                                   1324 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\/putget.h:22: SBUF0 = c;
      000007 8F 99            [24] 1325 	mov	_SBUF0,r7
                           000009  1326 	C$putget.h$23$1$16 ==.
                           000009  1327 	XG$putchar$0$0 ==.
      000009 22               [24] 1328 	ret
                                   1329 ;------------------------------------------------------------
                                   1330 ;Allocation info for local variables in function 'getchar'
                                   1331 ;------------------------------------------------------------
                                   1332 ;c                         Allocated to registers 
                                   1333 ;------------------------------------------------------------
                           00000A  1334 	G$getchar$0$0 ==.
                           00000A  1335 	C$putget.h$28$1$16 ==.
                                   1336 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\/putget.h:28: char getchar(void)
                                   1337 ;	-----------------------------------------
                                   1338 ;	 function getchar
                                   1339 ;	-----------------------------------------
      00000A                       1340 _getchar:
                           00000A  1341 	C$putget.h$31$1$18 ==.
                                   1342 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\/putget.h:31: while(!RI0);
      00000A                       1343 00101$:
                           00000A  1344 	C$putget.h$32$1$18 ==.
                                   1345 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\/putget.h:32: RI0 =0;
      00000A 10 98 02         [24] 1346 	jbc	_RI0,00112$
      00000D 80 FB            [24] 1347 	sjmp	00101$
      00000F                       1348 00112$:
                           00000F  1349 	C$putget.h$33$1$18 ==.
                                   1350 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\/putget.h:33: c = SBUF0;
      00000F 85 99 82         [24] 1351 	mov	dpl,_SBUF0
                           000012  1352 	C$putget.h$35$1$18 ==.
                                   1353 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\/putget.h:35: putchar(c);    // echo to terminal
      000012 12r00r00         [24] 1354 	lcall	_putchar
                           000015  1355 	C$putget.h$36$1$18 ==.
                                   1356 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\/putget.h:36: return SBUF0;
      000015 85 99 82         [24] 1357 	mov	dpl,_SBUF0
                           000018  1358 	C$putget.h$37$1$18 ==.
                           000018  1359 	XG$getchar$0$0 ==.
      000018 22               [24] 1360 	ret
                                   1361 ;------------------------------------------------------------
                                   1362 ;Allocation info for local variables in function 'main'
                                   1363 ;------------------------------------------------------------
                                   1364 ;i                         Allocated with name '_main_i_1_26'
                                   1365 ;------------------------------------------------------------
                           000019  1366 	G$main$0$0 ==.
                           000019  1367 	C$main.c$30$1$18 ==.
                                   1368 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:30: void main (void)
                                   1369 ;	-----------------------------------------
                                   1370 ;	 function main
                                   1371 ;	-----------------------------------------
      000019                       1372 _main:
                           000019  1373 	C$main.c$35$1$26 ==.
                                   1374 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:35: SFRPAGE = CONFIG_PAGE;
      000019 75 84 0F         [24] 1375 	mov	_SFRPAGE,#0x0F
                           00001C  1376 	C$main.c$37$1$26 ==.
                                   1377 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:37: PORT_INIT();                // Configure the Crossbar and GPIO.
      00001C 12r02r20         [24] 1378 	lcall	_PORT_INIT
                           00001F  1379 	C$main.c$38$1$26 ==.
                                   1380 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:38: SYSCLK_INIT();              // Initialize the oscillator.
      00001F 12r02r5A         [24] 1381 	lcall	_SYSCLK_INIT
                           000022  1382 	C$main.c$39$1$26 ==.
                                   1383 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:39: UART0_INIT();    
      000022 12r02rC4         [24] 1384 	lcall	_UART0_INIT
                           000025  1385 	C$main.c$40$1$26 ==.
                                   1386 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:40: MEM_INIT(); 
      000025 12r02rEC         [24] 1387 	lcall	_MEM_INIT
                           000028  1388 	C$main.c$42$1$26 ==.
                                   1389 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:42: SFRPAGE = LEGACY_PAGE;
      000028 75 84 00         [24] 1390 	mov	_SFRPAGE,#0x00
                           00002B  1391 	C$main.c$43$1$26 ==.
                                   1392 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:43: IT0     = 1;                // /INT0 is active low triggered.
      00002B D2 88            [12] 1393 	setb	_IT0
                           00002D  1394 	C$main.c$45$1$26 ==.
                                   1395 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:45: SFRPAGE = UART0_PAGE;       // Direct the output to UART0
      00002D 75 84 00         [24] 1396 	mov	_SFRPAGE,#0x00
                           000030  1397 	C$main.c$48$1$26 ==.
                                   1398 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:48: printf("\033[2J\033[r");
      000030 74r00            [12] 1399 	mov	a,#___str_0
      000032 C0 E0            [24] 1400 	push	acc
      000034 74s00            [12] 1401 	mov	a,#(___str_0 >> 8)
      000036 C0 E0            [24] 1402 	push	acc
      000038 74 80            [12] 1403 	mov	a,#0x80
      00003A C0 E0            [24] 1404 	push	acc
      00003C 12r00r00         [24] 1405 	lcall	_printf
      00003F 15 81            [12] 1406 	dec	sp
      000041 15 81            [12] 1407 	dec	sp
      000043 15 81            [12] 1408 	dec	sp
                           000045  1409 	C$main.c$49$1$26 ==.
                                   1410 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:49: printf("Hallo Vietnaaaam\n\r");
      000045 74r08            [12] 1411 	mov	a,#___str_1
      000047 C0 E0            [24] 1412 	push	acc
      000049 74s00            [12] 1413 	mov	a,#(___str_1 >> 8)
      00004B C0 E0            [24] 1414 	push	acc
      00004D 74 80            [12] 1415 	mov	a,#0x80
      00004F C0 E0            [24] 1416 	push	acc
      000051 12r00r00         [24] 1417 	lcall	_printf
      000054 15 81            [12] 1418 	dec	sp
      000056 15 81            [12] 1419 	dec	sp
      000058 15 81            [12] 1420 	dec	sp
                           00005A  1421 	C$main.c$51$1$26 ==.
                                   1422 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:51: P1 = 0xFF;
      00005A 75 90 FF         [24] 1423 	mov	_P1,#0xFF
                           00005D  1424 	C$main.c$53$1$26 ==.
                                   1425 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:53: while (1)                  
      00005D                       1426 00104$:
                           00005D  1427 	C$main.c$55$2$27 ==.
                                   1428 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:55: if(loop()) return;
      00005D 12r00r81         [24] 1429 	lcall	_loop
      000060 E5 82            [12] 1430 	mov	a,dpl
      000062 60 F9            [24] 1431 	jz	00104$
                           000064  1432 	C$main.c$58$1$26 ==.
                           000064  1433 	XG$main$0$0 ==.
      000064 22               [24] 1434 	ret
                                   1435 ;------------------------------------------------------------
                                   1436 ;Allocation info for local variables in function 'map'
                                   1437 ;------------------------------------------------------------
                                   1438 ;index                     Allocated to registers r7 
                                   1439 ;i                         Allocated to registers 
                                   1440 ;output                    Allocated to registers r5 r6 
                                   1441 ;------------------------------------------------------------
                           000065  1442 	G$map$0$0 ==.
                           000065  1443 	C$main.c$60$1$26 ==.
                                   1444 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:60: unsigned int map(unsigned char index){
                                   1445 ;	-----------------------------------------
                                   1446 ;	 function map
                                   1447 ;	-----------------------------------------
      000065                       1448 _map:
      000065 AF 82            [24] 1449 	mov	r7,dpl
                           000067  1450 	C$main.c$62$1$26 ==.
                                   1451 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:62: unsigned int output = 1;
      000067 7D 01            [12] 1452 	mov	r5,#0x01
      000069 7E 00            [12] 1453 	mov	r6,#0x00
                           00006B  1454 	C$main.c$63$1$29 ==.
                                   1455 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:63: for(i=0; i<index; i++)
      00006B 7C 00            [12] 1456 	mov	r4,#0x00
      00006D                       1457 00103$:
      00006D C3               [12] 1458 	clr	c
      00006E EC               [12] 1459 	mov	a,r4
      00006F 9F               [12] 1460 	subb	a,r7
      000070 50 0A            [24] 1461 	jnc	00101$
                           000072  1462 	C$main.c$64$1$29 ==.
                                   1463 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:64: output *= 2;
      000072 EE               [12] 1464 	mov	a,r6
      000073 CD               [12] 1465 	xch	a,r5
      000074 25 E0            [12] 1466 	add	a,acc
      000076 CD               [12] 1467 	xch	a,r5
      000077 33               [12] 1468 	rlc	a
      000078 FE               [12] 1469 	mov	r6,a
                           000079  1470 	C$main.c$63$1$29 ==.
                                   1471 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:63: for(i=0; i<index; i++)
      000079 0C               [12] 1472 	inc	r4
      00007A 80 F1            [24] 1473 	sjmp	00103$
      00007C                       1474 00101$:
                           00007C  1475 	C$main.c$65$1$29 ==.
                                   1476 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:65: return output;
      00007C 8D 82            [24] 1477 	mov	dpl,r5
      00007E 8E 83            [24] 1478 	mov	dph,r6
                           000080  1479 	C$main.c$66$1$29 ==.
                           000080  1480 	XG$map$0$0 ==.
      000080 22               [24] 1481 	ret
                                   1482 ;------------------------------------------------------------
                                   1483 ;Allocation info for local variables in function 'loop'
                                   1484 ;------------------------------------------------------------
                                   1485 ;i                         Allocated to registers r6 r7 
                                   1486 ;j                         Allocated with name '_loop_j_1_31'
                                   1487 ;parityCount               Allocated with name '_loop_parityCount_1_31'
                                   1488 ;stuff                     Allocated with name '_loop_stuff_1_31'
                                   1489 ;------------------------------------------------------------
                           000081  1490 	G$loop$0$0 ==.
                           000081  1491 	C$main.c$68$1$29 ==.
                                   1492 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:68: char loop(void){
                                   1493 ;	-----------------------------------------
                                   1494 ;	 function loop
                                   1495 ;	-----------------------------------------
      000081                       1496 _loop:
                           000081  1497 	C$main.c$97$1$31 ==.
                                   1498 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:97: SFRPAGE = UART0_PAGE;
      000081 75 84 00         [24] 1499 	mov	_SFRPAGE,#0x00
                           000084  1500 	C$main.c$99$1$31 ==.
                                   1501 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:99: getchar();
      000084 12r00r0A         [24] 1502 	lcall	_getchar
                           000087  1503 	C$main.c$101$1$31 ==.
                                   1504 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:101: printf("\033[2J");
      000087 74r1B            [12] 1505 	mov	a,#___str_2
      000089 C0 E0            [24] 1506 	push	acc
      00008B 74s00            [12] 1507 	mov	a,#(___str_2 >> 8)
      00008D C0 E0            [24] 1508 	push	acc
      00008F 74 80            [12] 1509 	mov	a,#0x80
      000091 C0 E0            [24] 1510 	push	acc
      000093 12r00r00         [24] 1511 	lcall	_printf
      000096 15 81            [12] 1512 	dec	sp
      000098 15 81            [12] 1513 	dec	sp
      00009A 15 81            [12] 1514 	dec	sp
                           00009C  1515 	C$main.c$103$1$31 ==.
                                   1516 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:103: for(i=0x0000; i<0x27FF; i++){
      00009C 7E 00            [12] 1517 	mov	r6,#0x00
      00009E 7F 00            [12] 1518 	mov	r7,#0x00
      0000A0                       1519 00121$:
                           0000A0  1520 	C$main.c$104$2$32 ==.
                                   1521 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:104: stuff[i] = count;
      0000A0 EE               [12] 1522 	mov	a,r6
      0000A1 24r00            [12] 1523 	add	a,#_loop_stuff_1_31
      0000A3 F5 82            [12] 1524 	mov	dpl,a
      0000A5 EF               [12] 1525 	mov	a,r7
      0000A6 34s00            [12] 1526 	addc	a,#(_loop_stuff_1_31 >> 8)
      0000A8 F5 83            [12] 1527 	mov	dph,a
      0000AA E5*00            [12] 1528 	mov	a,_count
      0000AC F0               [24] 1529 	movx	@dptr,a
                           0000AD  1530 	C$main.c$105$2$32 ==.
                                   1531 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:105: parityCount = 0;
      0000AD 75*02 00         [24] 1532 	mov	_loop_parityCount_1_31,#0x00
                           0000B0  1533 	C$main.c$106$2$32 ==.
                                   1534 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:106: for(j=0; j<7; j++){
      0000B0 7C 00            [12] 1535 	mov	r4,#0x00
      0000B2                       1536 00119$:
                           0000B2  1537 	C$main.c$107$3$33 ==.
                                   1538 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:107: if(count & map(j)) parityCount++;
      0000B2 8C 82            [24] 1539 	mov	dpl,r4
      0000B4 C0 07            [24] 1540 	push	ar7
      0000B6 C0 06            [24] 1541 	push	ar6
      0000B8 C0 04            [24] 1542 	push	ar4
      0000BA 12r00r65         [24] 1543 	lcall	_map
      0000BD AA 82            [24] 1544 	mov	r2,dpl
      0000BF AB 83            [24] 1545 	mov	r3,dph
      0000C1 D0 04            [24] 1546 	pop	ar4
      0000C3 D0 06            [24] 1547 	pop	ar6
      0000C5 D0 07            [24] 1548 	pop	ar7
      0000C7 A8*00            [24] 1549 	mov	r0,_count
      0000C9 79 00            [12] 1550 	mov	r1,#0x00
      0000CB E8               [12] 1551 	mov	a,r0
      0000CC 52 02            [12] 1552 	anl	ar2,a
      0000CE E9               [12] 1553 	mov	a,r1
      0000CF 52 03            [12] 1554 	anl	ar3,a
      0000D1 EA               [12] 1555 	mov	a,r2
      0000D2 4B               [12] 1556 	orl	a,r3
      0000D3 60 02            [24] 1557 	jz	00102$
      0000D5 05*02            [12] 1558 	inc	_loop_parityCount_1_31
      0000D7                       1559 00102$:
                           0000D7  1560 	C$main.c$108$3$33 ==.
                                   1561 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:108: if(parityCount > 1) parityCount = 0;
      0000D7 E5*02            [12] 1562 	mov	a,_loop_parityCount_1_31
      0000D9 24 FE            [12] 1563 	add	a,#0xff - 0x01
      0000DB 50 03            [24] 1564 	jnc	00120$
      0000DD 75*02 00         [24] 1565 	mov	_loop_parityCount_1_31,#0x00
      0000E0                       1566 00120$:
                           0000E0  1567 	C$main.c$106$2$32 ==.
                                   1568 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:106: for(j=0; j<7; j++){
      0000E0 0C               [12] 1569 	inc	r4
      0000E1 BC 07 00         [24] 1570 	cjne	r4,#0x07,00180$
      0000E4                       1571 00180$:
      0000E4 40 CC            [24] 1572 	jc	00119$
                           0000E6  1573 	C$main.c$111$2$32 ==.
                                   1574 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:111: stuff[i] |= parityCount << 7;
      0000E6 EE               [12] 1575 	mov	a,r6
      0000E7 24r00            [12] 1576 	add	a,#_loop_stuff_1_31
      0000E9 FB               [12] 1577 	mov	r3,a
      0000EA EF               [12] 1578 	mov	a,r7
      0000EB 34s00            [12] 1579 	addc	a,#(_loop_stuff_1_31 >> 8)
      0000ED FC               [12] 1580 	mov	r4,a
      0000EE 8B 82            [24] 1581 	mov	dpl,r3
      0000F0 8C 83            [24] 1582 	mov	dph,r4
      0000F2 E0               [24] 1583 	movx	a,@dptr
      0000F3 FA               [12] 1584 	mov	r2,a
      0000F4 E5*02            [12] 1585 	mov	a,_loop_parityCount_1_31
      0000F6 03               [12] 1586 	rr	a
      0000F7 54 80            [12] 1587 	anl	a,#0x80
      0000F9 F9               [12] 1588 	mov	r1,a
      0000FA 42 02            [12] 1589 	orl	ar2,a
      0000FC 8B 82            [24] 1590 	mov	dpl,r3
      0000FE 8C 83            [24] 1591 	mov	dph,r4
      000100 EA               [12] 1592 	mov	a,r2
      000101 F0               [24] 1593 	movx	@dptr,a
                           000102  1594 	C$main.c$112$2$32 ==.
                                   1595 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:112: count++;
      000102 05*00            [12] 1596 	inc	_count
                           000104  1597 	C$main.c$113$2$32 ==.
                                   1598 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:113: if(count > 0x7F) count = 0;
      000104 E5*00            [12] 1599 	mov	a,_count
      000106 24 80            [12] 1600 	add	a,#0xff - 0x7F
      000108 50 03            [24] 1601 	jnc	00122$
      00010A 75*00 00         [24] 1602 	mov	_count,#0x00
      00010D                       1603 00122$:
                           00010D  1604 	C$main.c$103$1$31 ==.
                                   1605 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:103: for(i=0x0000; i<0x27FF; i++){
      00010D 0E               [12] 1606 	inc	r6
      00010E BE 00 01         [24] 1607 	cjne	r6,#0x00,00183$
      000111 0F               [12] 1608 	inc	r7
      000112                       1609 00183$:
      000112 C3               [12] 1610 	clr	c
      000113 EE               [12] 1611 	mov	a,r6
      000114 94 FF            [12] 1612 	subb	a,#0xFF
      000116 EF               [12] 1613 	mov	a,r7
      000117 94 27            [12] 1614 	subb	a,#0x27
      000119 40 85            [24] 1615 	jc	00121$
                           00011B  1616 	C$main.c$116$1$31 ==.
                                   1617 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:116: stuff[0x2003] = 0x80;
      00011B 90r20r03         [24] 1618 	mov	dptr,#(_loop_stuff_1_31 + 0x2003)
      00011E 74 80            [12] 1619 	mov	a,#0x80
      000120 F0               [24] 1620 	movx	@dptr,a
                           000121  1621 	C$main.c$118$1$31 ==.
                                   1622 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:118: stuff[0x2016] = 0x08;
      000121 90r20r16         [24] 1623 	mov	dptr,#(_loop_stuff_1_31 + 0x2016)
      000124 C4               [12] 1624 	swap	a
      000125 F0               [24] 1625 	movx	@dptr,a
                           000126  1626 	C$main.c$120$1$31 ==.
                                   1627 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:120: count = 0;
      000126 75*00 00         [24] 1628 	mov	_count,#0x00
                           000129  1629 	C$main.c$121$1$31 ==.
                                   1630 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:121: for(i=0x0000; i<0x27FF; i++){
      000129 7E 00            [12] 1631 	mov	r6,#0x00
      00012B 7F 00            [12] 1632 	mov	r7,#0x00
      00012D                       1633 00125$:
                           00012D  1634 	C$main.c$122$2$34 ==.
                                   1635 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:122: printf("0x%x	0x%x	0x%x\n\r", i, count, stuff[i] & 0x7F);
      00012D EE               [12] 1636 	mov	a,r6
      00012E 24r00            [12] 1637 	add	a,#_loop_stuff_1_31
      000130 F5 82            [12] 1638 	mov	dpl,a
      000132 EF               [12] 1639 	mov	a,r7
      000133 34s00            [12] 1640 	addc	a,#(_loop_stuff_1_31 >> 8)
      000135 F5 83            [12] 1641 	mov	dph,a
      000137 E0               [24] 1642 	movx	a,@dptr
      000138 FC               [12] 1643 	mov	r4,a
      000139 53 04 7F         [24] 1644 	anl	ar4,#0x7F
      00013C 7B 00            [12] 1645 	mov	r3,#0x00
      00013E A9*00            [24] 1646 	mov	r1,_count
      000140 7A 00            [12] 1647 	mov	r2,#0x00
      000142 C0 07            [24] 1648 	push	ar7
      000144 C0 06            [24] 1649 	push	ar6
      000146 C0 04            [24] 1650 	push	ar4
      000148 C0 03            [24] 1651 	push	ar3
      00014A C0 01            [24] 1652 	push	ar1
      00014C C0 02            [24] 1653 	push	ar2
      00014E C0 06            [24] 1654 	push	ar6
      000150 C0 07            [24] 1655 	push	ar7
      000152 74r20            [12] 1656 	mov	a,#___str_3
      000154 C0 E0            [24] 1657 	push	acc
      000156 74s00            [12] 1658 	mov	a,#(___str_3 >> 8)
      000158 C0 E0            [24] 1659 	push	acc
      00015A 74 80            [12] 1660 	mov	a,#0x80
      00015C C0 E0            [24] 1661 	push	acc
      00015E 12r00r00         [24] 1662 	lcall	_printf
      000161 E5 81            [12] 1663 	mov	a,sp
      000163 24 F7            [12] 1664 	add	a,#0xf7
      000165 F5 81            [12] 1665 	mov	sp,a
      000167 D0 06            [24] 1666 	pop	ar6
      000169 D0 07            [24] 1667 	pop	ar7
                           00016B  1668 	C$main.c$124$2$34 ==.
                                   1669 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:124: parityCount = 0;
                           00016B  1670 	C$main.c$125$2$34 ==.
                                   1671 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:125: for(j=0; j<7; j++){
      00016B E4               [12] 1672 	clr	a
      00016C F5*02            [12] 1673 	mov	_loop_parityCount_1_31,a
      00016E F5*01            [12] 1674 	mov	_loop_j_1_31,a
      000170 EE               [12] 1675 	mov	a,r6
      000171 24r00            [12] 1676 	add	a,#_loop_stuff_1_31
      000173 FA               [12] 1677 	mov	r2,a
      000174 EF               [12] 1678 	mov	a,r7
      000175 34s00            [12] 1679 	addc	a,#(_loop_stuff_1_31 >> 8)
      000177 FB               [12] 1680 	mov	r3,a
      000178                       1681 00123$:
                           000178  1682 	C$main.c$126$3$35 ==.
                                   1683 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:126: if(stuff[i] & map(j)) parityCount++;
      000178 8A 82            [24] 1684 	mov	dpl,r2
      00017A 8B 83            [24] 1685 	mov	dph,r3
      00017C E0               [24] 1686 	movx	a,@dptr
      00017D F9               [12] 1687 	mov	r1,a
      00017E 85*01 82         [24] 1688 	mov	dpl,_loop_j_1_31
      000181 C0 07            [24] 1689 	push	ar7
      000183 C0 06            [24] 1690 	push	ar6
      000185 C0 03            [24] 1691 	push	ar3
      000187 C0 02            [24] 1692 	push	ar2
      000189 C0 01            [24] 1693 	push	ar1
      00018B 12r00r65         [24] 1694 	lcall	_map
      00018E A8 82            [24] 1695 	mov	r0,dpl
      000190 AC 83            [24] 1696 	mov	r4,dph
      000192 D0 01            [24] 1697 	pop	ar1
      000194 D0 02            [24] 1698 	pop	ar2
      000196 D0 03            [24] 1699 	pop	ar3
      000198 D0 06            [24] 1700 	pop	ar6
      00019A D0 07            [24] 1701 	pop	ar7
      00019C 7D 00            [12] 1702 	mov	r5,#0x00
      00019E E9               [12] 1703 	mov	a,r1
      00019F 52 00            [12] 1704 	anl	ar0,a
      0001A1 ED               [12] 1705 	mov	a,r5
      0001A2 52 04            [12] 1706 	anl	ar4,a
      0001A4 E8               [12] 1707 	mov	a,r0
      0001A5 4C               [12] 1708 	orl	a,r4
      0001A6 60 02            [24] 1709 	jz	00110$
      0001A8 05*02            [12] 1710 	inc	_loop_parityCount_1_31
      0001AA                       1711 00110$:
                           0001AA  1712 	C$main.c$127$3$35 ==.
                                   1713 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:127: if(parityCount > 1) parityCount = 0;
      0001AA E5*02            [12] 1714 	mov	a,_loop_parityCount_1_31
      0001AC 24 FE            [12] 1715 	add	a,#0xff - 0x01
      0001AE 50 03            [24] 1716 	jnc	00124$
      0001B0 75*02 00         [24] 1717 	mov	_loop_parityCount_1_31,#0x00
      0001B3                       1718 00124$:
                           0001B3  1719 	C$main.c$125$2$34 ==.
                                   1720 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:125: for(j=0; j<7; j++){
      0001B3 05*01            [12] 1721 	inc	_loop_j_1_31
      0001B5 74 F9            [12] 1722 	mov	a,#0x100 - 0x07
      0001B7 25*01            [12] 1723 	add	a,_loop_j_1_31
      0001B9 50 BD            [24] 1724 	jnc	00123$
                           0001BB  1725 	C$main.c$130$2$34 ==.
                                   1726 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:130: if((parityCount << 7) != (stuff[i] & 0x80)){
      0001BB AC*02            [24] 1727 	mov	r4,_loop_parityCount_1_31
      0001BD E4               [12] 1728 	clr	a
      0001BE C3               [12] 1729 	clr	c
      0001BF CC               [12] 1730 	xch	a,r4
      0001C0 13               [12] 1731 	rrc	a
      0001C1 CC               [12] 1732 	xch	a,r4
      0001C2 13               [12] 1733 	rrc	a
      0001C3 CC               [12] 1734 	xch	a,r4
      0001C4 FD               [12] 1735 	mov	r5,a
      0001C5 EE               [12] 1736 	mov	a,r6
      0001C6 24r00            [12] 1737 	add	a,#_loop_stuff_1_31
      0001C8 F5 82            [12] 1738 	mov	dpl,a
      0001CA EF               [12] 1739 	mov	a,r7
      0001CB 34s00            [12] 1740 	addc	a,#(_loop_stuff_1_31 >> 8)
      0001CD F5 83            [12] 1741 	mov	dph,a
      0001CF E0               [24] 1742 	movx	a,@dptr
      0001D0 FB               [12] 1743 	mov	r3,a
      0001D1 53 03 80         [24] 1744 	anl	ar3,#0x80
      0001D4 7A 00            [12] 1745 	mov	r2,#0x00
      0001D6 EC               [12] 1746 	mov	a,r4
      0001D7 B5 03 06         [24] 1747 	cjne	a,ar3,00188$
      0001DA ED               [12] 1748 	mov	a,r5
      0001DB B5 02 02         [24] 1749 	cjne	a,ar2,00188$
      0001DE 80 20            [24] 1750 	sjmp	00115$
      0001E0                       1751 00188$:
                           0001E0  1752 	C$main.c$131$3$36 ==.
                                   1753 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:131: printf("You goddamn failure\n\r");
      0001E0 C0 07            [24] 1754 	push	ar7
      0001E2 C0 06            [24] 1755 	push	ar6
      0001E4 74r31            [12] 1756 	mov	a,#___str_4
      0001E6 C0 E0            [24] 1757 	push	acc
      0001E8 74s00            [12] 1758 	mov	a,#(___str_4 >> 8)
      0001EA C0 E0            [24] 1759 	push	acc
      0001EC 74 80            [12] 1760 	mov	a,#0x80
      0001EE C0 E0            [24] 1761 	push	acc
      0001F0 12r00r00         [24] 1762 	lcall	_printf
      0001F3 15 81            [12] 1763 	dec	sp
      0001F5 15 81            [12] 1764 	dec	sp
      0001F7 15 81            [12] 1765 	dec	sp
                           0001F9  1766 	C$main.c$132$3$36 ==.
                                   1767 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:132: getchar();
      0001F9 12r00r0A         [24] 1768 	lcall	_getchar
      0001FC D0 06            [24] 1769 	pop	ar6
      0001FE D0 07            [24] 1770 	pop	ar7
      000200                       1771 00115$:
                           000200  1772 	C$main.c$135$2$34 ==.
                                   1773 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:135: count++;
      000200 05*00            [12] 1774 	inc	_count
                           000202  1775 	C$main.c$136$2$34 ==.
                                   1776 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:136: if(count > 0x7F) count = 0;
      000202 E5*00            [12] 1777 	mov	a,_count
      000204 24 80            [12] 1778 	add	a,#0xff - 0x7F
      000206 50 03            [24] 1779 	jnc	00126$
      000208 75*00 00         [24] 1780 	mov	_count,#0x00
      00020B                       1781 00126$:
                           00020B  1782 	C$main.c$121$1$31 ==.
                                   1783 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:121: for(i=0x0000; i<0x27FF; i++){
      00020B 0E               [12] 1784 	inc	r6
      00020C BE 00 01         [24] 1785 	cjne	r6,#0x00,00190$
      00020F 0F               [12] 1786 	inc	r7
      000210                       1787 00190$:
      000210 C3               [12] 1788 	clr	c
      000211 EE               [12] 1789 	mov	a,r6
      000212 94 FF            [12] 1790 	subb	a,#0xFF
      000214 EF               [12] 1791 	mov	a,r7
      000215 94 27            [12] 1792 	subb	a,#0x27
      000217 50 03            [24] 1793 	jnc	00191$
      000219 02r01r2D         [24] 1794 	ljmp	00125$
      00021C                       1795 00191$:
                           00021C  1796 	C$main.c$139$1$31 ==.
                                   1797 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:139: return 0;
      00021C 75 82 00         [24] 1798 	mov	dpl,#0x00
                           00021F  1799 	C$main.c$140$1$31 ==.
                           00021F  1800 	XG$loop$0$0 ==.
      00021F 22               [24] 1801 	ret
                                   1802 ;------------------------------------------------------------
                                   1803 ;Allocation info for local variables in function 'PORT_INIT'
                                   1804 ;------------------------------------------------------------
                                   1805 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   1806 ;------------------------------------------------------------
                           000220  1807 	G$PORT_INIT$0$0 ==.
                           000220  1808 	C$main.c$148$1$31 ==.
                                   1809 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:148: void PORT_INIT(void)
                                   1810 ;	-----------------------------------------
                                   1811 ;	 function PORT_INIT
                                   1812 ;	-----------------------------------------
      000220                       1813 _PORT_INIT:
                           000220  1814 	C$main.c$152$1$38 ==.
                                   1815 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:152: SFRPAGE_SAVE = SFRPAGE;     // Save Current SFR page.
      000220 AF 84            [24] 1816 	mov	r7,_SFRPAGE
                           000222  1817 	C$main.c$154$1$38 ==.
                                   1818 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:154: SFRPAGE = CONFIG_PAGE;
      000222 75 84 0F         [24] 1819 	mov	_SFRPAGE,#0x0F
                           000225  1820 	C$main.c$155$1$38 ==.
                                   1821 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:155: WDTCN   = 0xDE;             // Disable watchdog timer.
      000225 75 FF DE         [24] 1822 	mov	_WDTCN,#0xDE
                           000228  1823 	C$main.c$156$1$38 ==.
                                   1824 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:156: WDTCN   = 0xAD;
      000228 75 FF AD         [24] 1825 	mov	_WDTCN,#0xAD
                           00022B  1826 	C$main.c$157$1$38 ==.
                                   1827 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:157: EA      = 1;                // Enable interrupts as selected.
      00022B D2 AF            [12] 1828 	setb	_EA
                           00022D  1829 	C$main.c$159$1$38 ==.
                                   1830 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:159: XBR0    = 0x04;             // Enable UART0.
      00022D 75 E1 04         [24] 1831 	mov	_XBR0,#0x04
                           000230  1832 	C$main.c$160$1$38 ==.
                                   1833 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:160: XBR1    = 0x00;             // /INT0 routed to port pin.
      000230 75 E2 00         [24] 1834 	mov	_XBR1,#0x00
                           000233  1835 	C$main.c$161$1$38 ==.
                                   1836 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:161: XBR2    = 0x40;             // Enable Crossbar and weak pull-ups.
      000233 75 E3 40         [24] 1837 	mov	_XBR2,#0x40
                           000236  1838 	C$main.c$163$1$38 ==.
                                   1839 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:163: P0MDOUT = 0x35;             
      000236 75 A4 35         [24] 1840 	mov	_P0MDOUT,#0x35
                           000239  1841 	C$main.c$164$1$38 ==.
                                   1842 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:164: P0      = 0x0A; 
      000239 75 80 0A         [24] 1843 	mov	_P0,#0x0A
                           00023C  1844 	C$main.c$166$1$38 ==.
                                   1845 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:166: P1MDOUT = 0xFF;
      00023C 75 A5 FF         [24] 1846 	mov	_P1MDOUT,#0xFF
                           00023F  1847 	C$main.c$168$1$38 ==.
                                   1848 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:168: P4MDOUT = 0xFF;
      00023F 75 9C FF         [24] 1849 	mov	_P4MDOUT,#0xFF
                           000242  1850 	C$main.c$169$1$38 ==.
                                   1851 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:169: P5MDOUT = 0xFF;
      000242 75 9D FF         [24] 1852 	mov	_P5MDOUT,#0xFF
                           000245  1853 	C$main.c$170$1$38 ==.
                                   1854 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:170: P6MDOUT = 0xFF;
      000245 75 9E FF         [24] 1855 	mov	_P6MDOUT,#0xFF
                           000248  1856 	C$main.c$171$1$38 ==.
                                   1857 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:171: P7MDOUT = 0xFF;
      000248 75 9F FF         [24] 1858 	mov	_P7MDOUT,#0xFF
                           00024B  1859 	C$main.c$173$1$38 ==.
                                   1860 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:173: P4 = 0xFF;
      00024B 75 C8 FF         [24] 1861 	mov	_P4,#0xFF
                           00024E  1862 	C$main.c$174$1$38 ==.
                                   1863 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:174: P5 = 0xFF;
      00024E 75 D8 FF         [24] 1864 	mov	_P5,#0xFF
                           000251  1865 	C$main.c$175$1$38 ==.
                                   1866 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:175: P6 = 0xFF;
      000251 75 E8 FF         [24] 1867 	mov	_P6,#0xFF
                           000254  1868 	C$main.c$176$1$38 ==.
                                   1869 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:176: P7 = 0xFF;
      000254 75 F8 FF         [24] 1870 	mov	_P7,#0xFF
                           000257  1871 	C$main.c$178$1$38 ==.
                                   1872 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:178: SFRPAGE = SFRPAGE_SAVE;     // Restore SFR page.
      000257 8F 84            [24] 1873 	mov	_SFRPAGE,r7
                           000259  1874 	C$main.c$179$1$38 ==.
                           000259  1875 	XG$PORT_INIT$0$0 ==.
      000259 22               [24] 1876 	ret
                                   1877 ;------------------------------------------------------------
                                   1878 ;Allocation info for local variables in function 'SYSCLK_INIT'
                                   1879 ;------------------------------------------------------------
                                   1880 ;i                         Allocated to registers r5 r6 
                                   1881 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   1882 ;------------------------------------------------------------
                           00025A  1883 	G$SYSCLK_INIT$0$0 ==.
                           00025A  1884 	C$main.c$187$1$38 ==.
                                   1885 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:187: void SYSCLK_INIT(void)
                                   1886 ;	-----------------------------------------
                                   1887 ;	 function SYSCLK_INIT
                                   1888 ;	-----------------------------------------
      00025A                       1889 _SYSCLK_INIT:
                           00025A  1890 	C$main.c$193$1$40 ==.
                                   1891 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:193: SFRPAGE_SAVE = SFRPAGE;     // Save Current SFR page.
      00025A AF 84            [24] 1892 	mov	r7,_SFRPAGE
                           00025C  1893 	C$main.c$195$1$40 ==.
                                   1894 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:195: SFRPAGE = CONFIG_PAGE;
      00025C 75 84 0F         [24] 1895 	mov	_SFRPAGE,#0x0F
                           00025F  1896 	C$main.c$196$1$40 ==.
                                   1897 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:196: OSCXCN  = 0x67;             // Start external oscillator
      00025F 75 8C 67         [24] 1898 	mov	_OSCXCN,#0x67
                           000262  1899 	C$main.c$197$1$40 ==.
                                   1900 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:197: for(i=0; i < 256; i++);     // Wait for the oscillator to start up.
      000262 7D 00            [12] 1901 	mov	r5,#0x00
      000264 7E 01            [12] 1902 	mov	r6,#0x01
      000266                       1903 00111$:
      000266 1D               [12] 1904 	dec	r5
      000267 BD FF 01         [24] 1905 	cjne	r5,#0xFF,00141$
      00026A 1E               [12] 1906 	dec	r6
      00026B                       1907 00141$:
      00026B ED               [12] 1908 	mov	a,r5
      00026C 4E               [12] 1909 	orl	a,r6
      00026D 70 F7            [24] 1910 	jnz	00111$
                           00026F  1911 	C$main.c$198$1$40 ==.
                                   1912 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:198: while(!(OSCXCN & 0x80));    // Check to see if the Crystal Oscillator Valid Flag is set.
      00026F                       1913 00102$:
      00026F E5 8C            [12] 1914 	mov	a,_OSCXCN
      000271 30 E7 FB         [24] 1915 	jnb	acc.7,00102$
                           000274  1916 	C$main.c$199$1$40 ==.
                                   1917 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:199: CLKSEL  = 0x01;             // SYSCLK derived from the External Oscillator circuit.
      000274 75 97 01         [24] 1918 	mov	_CLKSEL,#0x01
                           000277  1919 	C$main.c$200$1$40 ==.
                                   1920 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:200: OSCICN  = 0x00;             // Disable the internal oscillator.
      000277 75 8A 00         [24] 1921 	mov	_OSCICN,#0x00
                           00027A  1922 	C$main.c$202$1$40 ==.
                                   1923 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:202: SFRPAGE = CONFIG_PAGE;
      00027A 75 84 0F         [24] 1924 	mov	_SFRPAGE,#0x0F
                           00027D  1925 	C$main.c$203$1$40 ==.
                                   1926 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:203: PLL0CN  = 0x04;
      00027D 75 89 04         [24] 1927 	mov	_PLL0CN,#0x04
                           000280  1928 	C$main.c$204$1$40 ==.
                                   1929 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:204: SFRPAGE = LEGACY_PAGE;
      000280 75 84 00         [24] 1930 	mov	_SFRPAGE,#0x00
                           000283  1931 	C$main.c$205$1$40 ==.
                                   1932 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:205: FLSCL   = 0x10;
      000283 75 B7 10         [24] 1933 	mov	_FLSCL,#0x10
                           000286  1934 	C$main.c$206$1$40 ==.
                                   1935 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:206: SFRPAGE = CONFIG_PAGE;
      000286 75 84 0F         [24] 1936 	mov	_SFRPAGE,#0x0F
                           000289  1937 	C$main.c$207$1$40 ==.
                                   1938 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:207: PLL0CN |= 0x01;
      000289 43 89 01         [24] 1939 	orl	_PLL0CN,#0x01
                           00028C  1940 	C$main.c$208$1$40 ==.
                                   1941 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:208: PLL0DIV = 0x04;
      00028C 75 8D 04         [24] 1942 	mov	_PLL0DIV,#0x04
                           00028F  1943 	C$main.c$209$1$40 ==.
                                   1944 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:209: PLL0FLT = 0x01;
      00028F 75 8F 01         [24] 1945 	mov	_PLL0FLT,#0x01
                           000292  1946 	C$main.c$210$1$40 ==.
                                   1947 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:210: PLL0MUL = 0x09;
      000292 75 8E 09         [24] 1948 	mov	_PLL0MUL,#0x09
                           000295  1949 	C$main.c$211$1$40 ==.
                                   1950 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:211: for(i=0; i < 256; i++);
      000295 7D 00            [12] 1951 	mov	r5,#0x00
      000297 7E 01            [12] 1952 	mov	r6,#0x01
      000299                       1953 00114$:
      000299 1D               [12] 1954 	dec	r5
      00029A BD FF 01         [24] 1955 	cjne	r5,#0xFF,00144$
      00029D 1E               [12] 1956 	dec	r6
      00029E                       1957 00144$:
      00029E ED               [12] 1958 	mov	a,r5
      00029F 4E               [12] 1959 	orl	a,r6
      0002A0 70 F7            [24] 1960 	jnz	00114$
                           0002A2  1961 	C$main.c$212$1$40 ==.
                                   1962 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:212: PLL0CN |= 0x02;
      0002A2 43 89 02         [24] 1963 	orl	_PLL0CN,#0x02
                           0002A5  1964 	C$main.c$213$1$40 ==.
                                   1965 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:213: while(!(PLL0CN & 0x10));
      0002A5                       1966 00106$:
      0002A5 E5 89            [12] 1967 	mov	a,_PLL0CN
      0002A7 30 E4 FB         [24] 1968 	jnb	acc.4,00106$
                           0002AA  1969 	C$main.c$214$1$40 ==.
                                   1970 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:214: CLKSEL  = 0x02;             // SYSCLK derived from the PLL.
      0002AA 75 97 02         [24] 1971 	mov	_CLKSEL,#0x02
                           0002AD  1972 	C$main.c$216$1$40 ==.
                                   1973 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:216: ET0 = 1;
      0002AD D2 A9            [12] 1974 	setb	_ET0
                           0002AF  1975 	C$main.c$217$1$40 ==.
                                   1976 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:217: CKCON |= 0x08;
      0002AF 43 8E 08         [24] 1977 	orl	_CKCON,#0x08
                           0002B2  1978 	C$main.c$219$1$40 ==.
                                   1979 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:219: SFRPAGE = TIMER01_PAGE;
      0002B2 75 84 00         [24] 1980 	mov	_SFRPAGE,#0x00
                           0002B5  1981 	C$main.c$220$1$40 ==.
                                   1982 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:220: TMOD &= 0xFD;
      0002B5 53 89 FD         [24] 1983 	anl	_TMOD,#0xFD
                           0002B8  1984 	C$main.c$221$1$40 ==.
                                   1985 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:221: TMOD |= 0x01;
      0002B8 43 89 01         [24] 1986 	orl	_TMOD,#0x01
                           0002BB  1987 	C$main.c$223$1$40 ==.
                                   1988 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:223: TH0 = 0x0D;
      0002BB 75 8C 0D         [24] 1989 	mov	_TH0,#0x0D
                           0002BE  1990 	C$main.c$224$1$40 ==.
                                   1991 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:224: TL0 = 0x00;
      0002BE 75 8A 00         [24] 1992 	mov	_TL0,#0x00
                           0002C1  1993 	C$main.c$226$1$40 ==.
                                   1994 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:226: SFRPAGE = SFRPAGE_SAVE;     // Restore SFR page.
      0002C1 8F 84            [24] 1995 	mov	_SFRPAGE,r7
                           0002C3  1996 	C$main.c$227$1$40 ==.
                           0002C3  1997 	XG$SYSCLK_INIT$0$0 ==.
      0002C3 22               [24] 1998 	ret
                                   1999 ;------------------------------------------------------------
                                   2000 ;Allocation info for local variables in function 'UART0_INIT'
                                   2001 ;------------------------------------------------------------
                                   2002 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   2003 ;------------------------------------------------------------
                           0002C4  2004 	G$UART0_INIT$0$0 ==.
                           0002C4  2005 	C$main.c$236$1$40 ==.
                                   2006 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:236: void UART0_INIT(void){
                                   2007 ;	-----------------------------------------
                                   2008 ;	 function UART0_INIT
                                   2009 ;	-----------------------------------------
      0002C4                       2010 _UART0_INIT:
                           0002C4  2011 	C$main.c$240$1$42 ==.
                                   2012 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:240: SFRPAGE_SAVE = SFRPAGE;
      0002C4 AF 84            [24] 2013 	mov	r7,_SFRPAGE
                           0002C6  2014 	C$main.c$242$1$42 ==.
                                   2015 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:242: SFRPAGE = TIMER01_PAGE;
      0002C6 75 84 00         [24] 2016 	mov	_SFRPAGE,#0x00
                           0002C9  2017 	C$main.c$243$1$42 ==.
                                   2018 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:243: TMOD   &= ~0xF0;
      0002C9 AE 89            [24] 2019 	mov	r6,_TMOD
      0002CB 74 0F            [12] 2020 	mov	a,#0x0F
      0002CD 5E               [12] 2021 	anl	a,r6
      0002CE F5 89            [12] 2022 	mov	_TMOD,a
                           0002D0  2023 	C$main.c$244$1$42 ==.
                                   2024 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:244: TMOD   |=  0x20;            // Timer1, Mode 2: 8-bit counter/timer with auto-reload.
      0002D0 43 89 20         [24] 2025 	orl	_TMOD,#0x20
                           0002D3  2026 	C$main.c$245$1$42 ==.
                                   2027 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:245: TH1     = (unsigned char)-(SYSCLK/BAUDRATE/16); // Set Timer1 reload value for baudrate
      0002D3 75 8D E5         [24] 2028 	mov	_TH1,#0xE5
                           0002D6  2029 	C$main.c$246$1$42 ==.
                                   2030 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:246: CKCON  |= 0x10;             // Timer1 uses SYSCLK as time base.
      0002D6 43 8E 10         [24] 2031 	orl	_CKCON,#0x10
                           0002D9  2032 	C$main.c$247$1$42 ==.
                                   2033 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:247: TL1     = TH1;
      0002D9 85 8D 8B         [24] 2034 	mov	_TL1,_TH1
                           0002DC  2035 	C$main.c$248$1$42 ==.
                                   2036 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:248: TR1     = 1;                // Start Timer1.
      0002DC D2 8E            [12] 2037 	setb	_TR1
                           0002DE  2038 	C$main.c$250$1$42 ==.
                                   2039 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:250: SFRPAGE = UART0_PAGE;
      0002DE 75 84 00         [24] 2040 	mov	_SFRPAGE,#0x00
                           0002E1  2041 	C$main.c$251$1$42 ==.
                                   2042 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:251: SCON0   = 0x50;             // Set Mode 1: 8-Bit UART
      0002E1 75 98 50         [24] 2043 	mov	_SCON0,#0x50
                           0002E4  2044 	C$main.c$252$1$42 ==.
                                   2045 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:252: SSTA0   = 0x10;             // UART0 baud rate divide-by-two disabled (SMOD0 = 1).
      0002E4 75 91 10         [24] 2046 	mov	_SSTA0,#0x10
                           0002E7  2047 	C$main.c$253$1$42 ==.
                                   2048 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:253: TI0     = 1; 
      0002E7 D2 99            [12] 2049 	setb	_TI0
                           0002E9  2050 	C$main.c$255$1$42 ==.
                                   2051 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:255: SFRPAGE = SFRPAGE_SAVE;
      0002E9 8F 84            [24] 2052 	mov	_SFRPAGE,r7
                           0002EB  2053 	C$main.c$256$1$42 ==.
                           0002EB  2054 	XG$UART0_INIT$0$0 ==.
      0002EB 22               [24] 2055 	ret
                                   2056 ;------------------------------------------------------------
                                   2057 ;Allocation info for local variables in function 'MEM_INIT'
                                   2058 ;------------------------------------------------------------
                                   2059 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   2060 ;------------------------------------------------------------
                           0002EC  2061 	G$MEM_INIT$0$0 ==.
                           0002EC  2062 	C$main.c$258$1$42 ==.
                                   2063 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:258: void MEM_INIT(void){
                                   2064 ;	-----------------------------------------
                                   2065 ;	 function MEM_INIT
                                   2066 ;	-----------------------------------------
      0002EC                       2067 _MEM_INIT:
                           0002EC  2068 	C$main.c$261$1$44 ==.
                                   2069 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:261: SFRPAGE_SAVE = SFRPAGE;
      0002EC AF 84            [24] 2070 	mov	r7,_SFRPAGE
                           0002EE  2071 	C$main.c$263$1$44 ==.
                                   2072 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:263: SFRPAGE = 0;
      0002EE 75 84 00         [24] 2073 	mov	_SFRPAGE,#0x00
                           0002F1  2074 	C$main.c$265$1$44 ==.
                                   2075 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:265: EMI0CF = 0x37;
      0002F1 75 A3 37         [24] 2076 	mov	_EMI0CF,#0x37
                           0002F4  2077 	C$main.c$268$1$44 ==.
                                   2078 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 5\main.c:268: SFRPAGE = SFRPAGE_SAVE;
      0002F4 8F 84            [24] 2079 	mov	_SFRPAGE,r7
                           0002F6  2080 	C$main.c$269$1$44 ==.
                           0002F6  2081 	XG$MEM_INIT$0$0 ==.
      0002F6 22               [24] 2082 	ret
                                   2083 	.area CSEG    (CODE)
                                   2084 	.area CONST   (CODE)
                           000000  2085 Fmain$__str_0$0$0 == .
      000000                       2086 ___str_0:
      000000 1B                    2087 	.db 0x1B
      000001 5B 32 4A              2088 	.ascii "[2J"
      000004 1B                    2089 	.db 0x1B
      000005 5B 72                 2090 	.ascii "[r"
      000007 00                    2091 	.db 0x00
                           000008  2092 Fmain$__str_1$0$0 == .
      000008                       2093 ___str_1:
      000008 48 61 6C 6C 6F 20 56  2094 	.ascii "Hallo Vietnaaaam"
             69 65 74 6E 61 61 61
             61 6D
      000018 0A                    2095 	.db 0x0A
      000019 0D                    2096 	.db 0x0D
      00001A 00                    2097 	.db 0x00
                           00001B  2098 Fmain$__str_2$0$0 == .
      00001B                       2099 ___str_2:
      00001B 1B                    2100 	.db 0x1B
      00001C 5B 32 4A              2101 	.ascii "[2J"
      00001F 00                    2102 	.db 0x00
                           000020  2103 Fmain$__str_3$0$0 == .
      000020                       2104 ___str_3:
      000020 30 78 25 78           2105 	.ascii "0x%x"
      000024 09                    2106 	.db 0x09
      000025 30 78 25 78           2107 	.ascii "0x%x"
      000029 09                    2108 	.db 0x09
      00002A 30 78 25 78           2109 	.ascii "0x%x"
      00002E 0A                    2110 	.db 0x0A
      00002F 0D                    2111 	.db 0x0D
      000030 00                    2112 	.db 0x00
                           000031  2113 Fmain$__str_4$0$0 == .
      000031                       2114 ___str_4:
      000031 59 6F 75 20 67 6F 64  2115 	.ascii "You goddamn failure"
             64 61 6D 6E 20 66 61
             69 6C 75 72 65
      000044 0A                    2116 	.db 0x0A
      000045 0D                    2117 	.db 0x0D
      000046 00                    2118 	.db 0x00
                                   2119 	.area XINIT   (CODE)
                                   2120 	.area CABS    (ABS,CODE)
