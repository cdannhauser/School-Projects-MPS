                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW64)
                                      4 ; This file was generated Mon Oct 31 16:57:06 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module main
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _ADC_ISR
                                     13 	.globl _printf
                                     14 	.globl _P7_7
                                     15 	.globl _P7_6
                                     16 	.globl _P7_5
                                     17 	.globl _P7_4
                                     18 	.globl _P7_3
                                     19 	.globl _P7_2
                                     20 	.globl _P7_1
                                     21 	.globl _P7_0
                                     22 	.globl _SPIF
                                     23 	.globl _WCOL
                                     24 	.globl _MODF
                                     25 	.globl _RXOVRN
                                     26 	.globl _NSSMD1
                                     27 	.globl _NSSMD0
                                     28 	.globl _TXBMT
                                     29 	.globl _SPIEN
                                     30 	.globl _P6_7
                                     31 	.globl _P6_6
                                     32 	.globl _P6_5
                                     33 	.globl _P6_4
                                     34 	.globl _P6_3
                                     35 	.globl _P6_2
                                     36 	.globl _P6_1
                                     37 	.globl _P6_0
                                     38 	.globl _AD2EN
                                     39 	.globl _AD2TM
                                     40 	.globl _AD2INT
                                     41 	.globl _AD2BUSY
                                     42 	.globl _AD2CM2
                                     43 	.globl _AD2CM1
                                     44 	.globl _AD2CM0
                                     45 	.globl _AD2WINT
                                     46 	.globl _AD0EN
                                     47 	.globl _AD0TM
                                     48 	.globl _AD0INT
                                     49 	.globl _AD0BUSY
                                     50 	.globl _AD0CM1
                                     51 	.globl _AD0CM0
                                     52 	.globl _AD0WINT
                                     53 	.globl _AD0LJST
                                     54 	.globl _P5_7
                                     55 	.globl _P5_6
                                     56 	.globl _P5_5
                                     57 	.globl _P5_4
                                     58 	.globl _P5_3
                                     59 	.globl _P5_2
                                     60 	.globl _P5_1
                                     61 	.globl _P5_0
                                     62 	.globl _CF
                                     63 	.globl _CR
                                     64 	.globl _CCF5
                                     65 	.globl _CCF4
                                     66 	.globl _CCF3
                                     67 	.globl _CCF2
                                     68 	.globl _CCF1
                                     69 	.globl _CCF0
                                     70 	.globl _CY
                                     71 	.globl _AC
                                     72 	.globl _F0
                                     73 	.globl _RS1
                                     74 	.globl _RS0
                                     75 	.globl _OV
                                     76 	.globl _F1
                                     77 	.globl _P
                                     78 	.globl _P4_7
                                     79 	.globl _P4_6
                                     80 	.globl _P4_5
                                     81 	.globl _P4_4
                                     82 	.globl _P4_3
                                     83 	.globl _P4_2
                                     84 	.globl _P4_1
                                     85 	.globl _P4_0
                                     86 	.globl _TF4
                                     87 	.globl _EXF4
                                     88 	.globl _EXEN4
                                     89 	.globl _TR4
                                     90 	.globl _CT4
                                     91 	.globl _CPRL4
                                     92 	.globl _TF3
                                     93 	.globl _EXF3
                                     94 	.globl _EXEN3
                                     95 	.globl _TR3
                                     96 	.globl _CT3
                                     97 	.globl _CPRL3
                                     98 	.globl _TF2
                                     99 	.globl _EXF2
                                    100 	.globl _EXEN2
                                    101 	.globl _TR2
                                    102 	.globl _CT2
                                    103 	.globl _CPRL2
                                    104 	.globl _MAC0HO
                                    105 	.globl _MAC0Z
                                    106 	.globl _MAC0SO
                                    107 	.globl _MAC0N
                                    108 	.globl _BUSY
                                    109 	.globl _ENSMB
                                    110 	.globl _STA
                                    111 	.globl _STO
                                    112 	.globl _SI
                                    113 	.globl _AA
                                    114 	.globl _SMBFTE
                                    115 	.globl _SMBTOE
                                    116 	.globl _PT2
                                    117 	.globl _PS
                                    118 	.globl _PS0
                                    119 	.globl _PT1
                                    120 	.globl _PX1
                                    121 	.globl _PT0
                                    122 	.globl _PX0
                                    123 	.globl _P3_7
                                    124 	.globl _P3_6
                                    125 	.globl _P3_5
                                    126 	.globl _P3_4
                                    127 	.globl _P3_3
                                    128 	.globl _P3_2
                                    129 	.globl _P3_1
                                    130 	.globl _P3_0
                                    131 	.globl _EA
                                    132 	.globl _ET2
                                    133 	.globl _ES
                                    134 	.globl _ES0
                                    135 	.globl _ET1
                                    136 	.globl _EX1
                                    137 	.globl _ET0
                                    138 	.globl _EX0
                                    139 	.globl _P2_7
                                    140 	.globl _P2_6
                                    141 	.globl _P2_5
                                    142 	.globl _P2_4
                                    143 	.globl _P2_3
                                    144 	.globl _P2_2
                                    145 	.globl _P2_1
                                    146 	.globl _P2_0
                                    147 	.globl _S1MODE
                                    148 	.globl _MCE1
                                    149 	.globl _REN1
                                    150 	.globl _TB81
                                    151 	.globl _RB81
                                    152 	.globl _TI1
                                    153 	.globl _RI1
                                    154 	.globl _SM00
                                    155 	.globl _SM10
                                    156 	.globl _SM20
                                    157 	.globl _REN
                                    158 	.globl _REN0
                                    159 	.globl _TB80
                                    160 	.globl _RB80
                                    161 	.globl _TI
                                    162 	.globl _TI0
                                    163 	.globl _RI
                                    164 	.globl _RI0
                                    165 	.globl _P1_7
                                    166 	.globl _P1_6
                                    167 	.globl _P1_5
                                    168 	.globl _P1_4
                                    169 	.globl _P1_3
                                    170 	.globl _P1_2
                                    171 	.globl _P1_1
                                    172 	.globl _P1_0
                                    173 	.globl _FLHBUSY
                                    174 	.globl _CP1EN
                                    175 	.globl _CP1OUT
                                    176 	.globl _CP1RIF
                                    177 	.globl _CP1FIF
                                    178 	.globl _CP1HYP1
                                    179 	.globl _CP1HYP0
                                    180 	.globl _CP1HYN1
                                    181 	.globl _CP1HYN0
                                    182 	.globl _CP0EN
                                    183 	.globl _CP0OUT
                                    184 	.globl _CP0RIF
                                    185 	.globl _CP0FIF
                                    186 	.globl _CP0HYP1
                                    187 	.globl _CP0HYP0
                                    188 	.globl _CP0HYN1
                                    189 	.globl _CP0HYN0
                                    190 	.globl _TF1
                                    191 	.globl _TR1
                                    192 	.globl _TF0
                                    193 	.globl _TR0
                                    194 	.globl _IE1
                                    195 	.globl _IT1
                                    196 	.globl _IE0
                                    197 	.globl _IT0
                                    198 	.globl _P0_7
                                    199 	.globl _P0_6
                                    200 	.globl _P0_5
                                    201 	.globl _P0_4
                                    202 	.globl _P0_3
                                    203 	.globl _P0_2
                                    204 	.globl _P0_1
                                    205 	.globl _P0_0
                                    206 	.globl _MAC0RND
                                    207 	.globl _MAC0ACC
                                    208 	.globl _MAC0A
                                    209 	.globl _RCAP4
                                    210 	.globl _TMR4
                                    211 	.globl _DAC1
                                    212 	.globl _RCAP3
                                    213 	.globl _TMR3
                                    214 	.globl _PCA0CP5
                                    215 	.globl _PCA0CP4
                                    216 	.globl _PCA0CP3
                                    217 	.globl _PCA0CP2
                                    218 	.globl _PCA0CP1
                                    219 	.globl _PCA0CP0
                                    220 	.globl _PCA0
                                    221 	.globl _DAC0
                                    222 	.globl _ADC0LT
                                    223 	.globl _ADC0GT
                                    224 	.globl _ADC0
                                    225 	.globl _RCAP2
                                    226 	.globl _TMR2
                                    227 	.globl _TMR1
                                    228 	.globl _TMR0
                                    229 	.globl _P7
                                    230 	.globl _P6
                                    231 	.globl _XBR2
                                    232 	.globl _XBR1
                                    233 	.globl _XBR0
                                    234 	.globl _P5
                                    235 	.globl _P4
                                    236 	.globl _FLACL
                                    237 	.globl _P1MDIN
                                    238 	.globl _P3MDOUT
                                    239 	.globl _P2MDOUT
                                    240 	.globl _P1MDOUT
                                    241 	.globl _P0MDOUT
                                    242 	.globl _CCH0LC
                                    243 	.globl _CCH0TN
                                    244 	.globl _CCH0CN
                                    245 	.globl _P7MDOUT
                                    246 	.globl _P6MDOUT
                                    247 	.globl _P5MDOUT
                                    248 	.globl _P4MDOUT
                                    249 	.globl _CCH0MA
                                    250 	.globl _CLKSEL
                                    251 	.globl _SFRPGCN
                                    252 	.globl _PLL0FLT
                                    253 	.globl _PLL0MUL
                                    254 	.globl _PLL0DIV
                                    255 	.globl _OSCXCN
                                    256 	.globl _OSCICL
                                    257 	.globl _OSCICN
                                    258 	.globl _PLL0CN
                                    259 	.globl _FLSTAT
                                    260 	.globl _MAC0RNDH
                                    261 	.globl _MAC0RNDL
                                    262 	.globl _MAC0CF
                                    263 	.globl _MAC0AH
                                    264 	.globl _MAC0AL
                                    265 	.globl _MAC0STA
                                    266 	.globl _MAC0OVR
                                    267 	.globl _MAC0ACC3
                                    268 	.globl _MAC0ACC2
                                    269 	.globl _MAC0ACC1
                                    270 	.globl _MAC0ACC0
                                    271 	.globl _MAC0BH
                                    272 	.globl _MAC0BL
                                    273 	.globl _ADC2CN
                                    274 	.globl _TMR4H
                                    275 	.globl _TMR4L
                                    276 	.globl _RCAP4H
                                    277 	.globl _RCAP4L
                                    278 	.globl _TMR4CF
                                    279 	.globl _TMR4CN
                                    280 	.globl _ADC2LT
                                    281 	.globl _ADC2GT
                                    282 	.globl _ADC2
                                    283 	.globl _ADC2CF
                                    284 	.globl _AMX2SL
                                    285 	.globl _AMX2CF
                                    286 	.globl _CPT1MD
                                    287 	.globl _CPT1CN
                                    288 	.globl _DAC1CN
                                    289 	.globl _DAC1H
                                    290 	.globl _DAC1L
                                    291 	.globl _TMR3H
                                    292 	.globl _TMR3L
                                    293 	.globl _RCAP3H
                                    294 	.globl _RCAP3L
                                    295 	.globl _TMR3CF
                                    296 	.globl _TMR3CN
                                    297 	.globl _SBUF1
                                    298 	.globl _SCON1
                                    299 	.globl _CPT0MD
                                    300 	.globl _CPT0CN
                                    301 	.globl _PCA0CPH1
                                    302 	.globl _PCA0CPL1
                                    303 	.globl _PCA0CPH0
                                    304 	.globl _PCA0CPL0
                                    305 	.globl _PCA0H
                                    306 	.globl _PCA0L
                                    307 	.globl _SPI0CN
                                    308 	.globl _RSTSRC
                                    309 	.globl _PCA0CPH4
                                    310 	.globl _PCA0CPL4
                                    311 	.globl _PCA0CPH3
                                    312 	.globl _PCA0CPL3
                                    313 	.globl _PCA0CPH2
                                    314 	.globl _PCA0CPL2
                                    315 	.globl _ADC0CN
                                    316 	.globl _PCA0CPH5
                                    317 	.globl _PCA0CPL5
                                    318 	.globl _PCA0CPM5
                                    319 	.globl _PCA0CPM4
                                    320 	.globl _PCA0CPM3
                                    321 	.globl _PCA0CPM2
                                    322 	.globl _PCA0CPM1
                                    323 	.globl _PCA0CPM0
                                    324 	.globl _PCA0MD
                                    325 	.globl _PCA0CN
                                    326 	.globl _DAC0CN
                                    327 	.globl _DAC0H
                                    328 	.globl _DAC0L
                                    329 	.globl _REF0CN
                                    330 	.globl _SMB0CR
                                    331 	.globl _TH2
                                    332 	.globl _TMR2H
                                    333 	.globl _TL2
                                    334 	.globl _TMR2L
                                    335 	.globl _RCAP2H
                                    336 	.globl _RCAP2L
                                    337 	.globl _TMR2CF
                                    338 	.globl _TMR2CN
                                    339 	.globl _ADC0LTH
                                    340 	.globl _ADC0LTL
                                    341 	.globl _ADC0GTH
                                    342 	.globl _ADC0GTL
                                    343 	.globl _SMB0ADR
                                    344 	.globl _SMB0DAT
                                    345 	.globl _SMB0STA
                                    346 	.globl _SMB0CN
                                    347 	.globl _ADC0H
                                    348 	.globl _ADC0L
                                    349 	.globl _ADC0CF
                                    350 	.globl _AMX0SL
                                    351 	.globl _AMX0CF
                                    352 	.globl _SADEN0
                                    353 	.globl _FLSCL
                                    354 	.globl _SADDR0
                                    355 	.globl _EMI0CF
                                    356 	.globl __XPAGE
                                    357 	.globl _EMI0CN
                                    358 	.globl _EMI0TC
                                    359 	.globl _SPI0CKR
                                    360 	.globl _SPI0DAT
                                    361 	.globl _SPI0CFG
                                    362 	.globl _SBUF
                                    363 	.globl _SBUF0
                                    364 	.globl _SCON
                                    365 	.globl _SCON0
                                    366 	.globl _SSTA0
                                    367 	.globl _PSCTL
                                    368 	.globl _CKCON
                                    369 	.globl _TH1
                                    370 	.globl _TH0
                                    371 	.globl _TL1
                                    372 	.globl _TL0
                                    373 	.globl _TMOD
                                    374 	.globl _TCON
                                    375 	.globl _WDTCN
                                    376 	.globl _EIP2
                                    377 	.globl _EIP1
                                    378 	.globl _B
                                    379 	.globl _EIE2
                                    380 	.globl _EIE1
                                    381 	.globl _ACC
                                    382 	.globl _PSW
                                    383 	.globl _IP
                                    384 	.globl _PSBANK
                                    385 	.globl _P3
                                    386 	.globl _IE
                                    387 	.globl _P2
                                    388 	.globl _P1
                                    389 	.globl _PCON
                                    390 	.globl _SFRLAST
                                    391 	.globl _SFRNEXT
                                    392 	.globl _SFRPAGE
                                    393 	.globl _DPH
                                    394 	.globl _DPL
                                    395 	.globl _SP
                                    396 	.globl _P0
                                    397 	.globl _average
                                    398 	.globl _index
                                    399 	.globl _voltages
                                    400 	.globl _voltage
                                    401 	.globl _vL
                                    402 	.globl _vH
                                    403 	.globl _putchar
                                    404 	.globl _getchar
                                    405 	.globl _main
                                    406 	.globl _loop
                                    407 	.globl _PORT_INIT
                                    408 	.globl _SYSCLK_INIT
                                    409 	.globl _UART0_INIT
                                    410 	.globl _ADC_INIT
                                    411 ;--------------------------------------------------------
                                    412 ; special function registers
                                    413 ;--------------------------------------------------------
                                    414 	.area RSEG    (ABS,DATA)
      000000                        415 	.org 0x0000
                           000080   416 G$P0$0$0 == 0x0080
                           000080   417 _P0	=	0x0080
                           000081   418 G$SP$0$0 == 0x0081
                           000081   419 _SP	=	0x0081
                           000082   420 G$DPL$0$0 == 0x0082
                           000082   421 _DPL	=	0x0082
                           000083   422 G$DPH$0$0 == 0x0083
                           000083   423 _DPH	=	0x0083
                           000084   424 G$SFRPAGE$0$0 == 0x0084
                           000084   425 _SFRPAGE	=	0x0084
                           000085   426 G$SFRNEXT$0$0 == 0x0085
                           000085   427 _SFRNEXT	=	0x0085
                           000086   428 G$SFRLAST$0$0 == 0x0086
                           000086   429 _SFRLAST	=	0x0086
                           000087   430 G$PCON$0$0 == 0x0087
                           000087   431 _PCON	=	0x0087
                           000090   432 G$P1$0$0 == 0x0090
                           000090   433 _P1	=	0x0090
                           0000A0   434 G$P2$0$0 == 0x00a0
                           0000A0   435 _P2	=	0x00a0
                           0000A8   436 G$IE$0$0 == 0x00a8
                           0000A8   437 _IE	=	0x00a8
                           0000B0   438 G$P3$0$0 == 0x00b0
                           0000B0   439 _P3	=	0x00b0
                           0000B1   440 G$PSBANK$0$0 == 0x00b1
                           0000B1   441 _PSBANK	=	0x00b1
                           0000B8   442 G$IP$0$0 == 0x00b8
                           0000B8   443 _IP	=	0x00b8
                           0000D0   444 G$PSW$0$0 == 0x00d0
                           0000D0   445 _PSW	=	0x00d0
                           0000E0   446 G$ACC$0$0 == 0x00e0
                           0000E0   447 _ACC	=	0x00e0
                           0000E6   448 G$EIE1$0$0 == 0x00e6
                           0000E6   449 _EIE1	=	0x00e6
                           0000E7   450 G$EIE2$0$0 == 0x00e7
                           0000E7   451 _EIE2	=	0x00e7
                           0000F0   452 G$B$0$0 == 0x00f0
                           0000F0   453 _B	=	0x00f0
                           0000F6   454 G$EIP1$0$0 == 0x00f6
                           0000F6   455 _EIP1	=	0x00f6
                           0000F7   456 G$EIP2$0$0 == 0x00f7
                           0000F7   457 _EIP2	=	0x00f7
                           0000FF   458 G$WDTCN$0$0 == 0x00ff
                           0000FF   459 _WDTCN	=	0x00ff
                           000088   460 G$TCON$0$0 == 0x0088
                           000088   461 _TCON	=	0x0088
                           000089   462 G$TMOD$0$0 == 0x0089
                           000089   463 _TMOD	=	0x0089
                           00008A   464 G$TL0$0$0 == 0x008a
                           00008A   465 _TL0	=	0x008a
                           00008B   466 G$TL1$0$0 == 0x008b
                           00008B   467 _TL1	=	0x008b
                           00008C   468 G$TH0$0$0 == 0x008c
                           00008C   469 _TH0	=	0x008c
                           00008D   470 G$TH1$0$0 == 0x008d
                           00008D   471 _TH1	=	0x008d
                           00008E   472 G$CKCON$0$0 == 0x008e
                           00008E   473 _CKCON	=	0x008e
                           00008F   474 G$PSCTL$0$0 == 0x008f
                           00008F   475 _PSCTL	=	0x008f
                           000091   476 G$SSTA0$0$0 == 0x0091
                           000091   477 _SSTA0	=	0x0091
                           000098   478 G$SCON0$0$0 == 0x0098
                           000098   479 _SCON0	=	0x0098
                           000098   480 G$SCON$0$0 == 0x0098
                           000098   481 _SCON	=	0x0098
                           000099   482 G$SBUF0$0$0 == 0x0099
                           000099   483 _SBUF0	=	0x0099
                           000099   484 G$SBUF$0$0 == 0x0099
                           000099   485 _SBUF	=	0x0099
                           00009A   486 G$SPI0CFG$0$0 == 0x009a
                           00009A   487 _SPI0CFG	=	0x009a
                           00009B   488 G$SPI0DAT$0$0 == 0x009b
                           00009B   489 _SPI0DAT	=	0x009b
                           00009D   490 G$SPI0CKR$0$0 == 0x009d
                           00009D   491 _SPI0CKR	=	0x009d
                           0000A1   492 G$EMI0TC$0$0 == 0x00a1
                           0000A1   493 _EMI0TC	=	0x00a1
                           0000A2   494 G$EMI0CN$0$0 == 0x00a2
                           0000A2   495 _EMI0CN	=	0x00a2
                           0000A2   496 G$_XPAGE$0$0 == 0x00a2
                           0000A2   497 __XPAGE	=	0x00a2
                           0000A3   498 G$EMI0CF$0$0 == 0x00a3
                           0000A3   499 _EMI0CF	=	0x00a3
                           0000A9   500 G$SADDR0$0$0 == 0x00a9
                           0000A9   501 _SADDR0	=	0x00a9
                           0000B7   502 G$FLSCL$0$0 == 0x00b7
                           0000B7   503 _FLSCL	=	0x00b7
                           0000B9   504 G$SADEN0$0$0 == 0x00b9
                           0000B9   505 _SADEN0	=	0x00b9
                           0000BA   506 G$AMX0CF$0$0 == 0x00ba
                           0000BA   507 _AMX0CF	=	0x00ba
                           0000BB   508 G$AMX0SL$0$0 == 0x00bb
                           0000BB   509 _AMX0SL	=	0x00bb
                           0000BC   510 G$ADC0CF$0$0 == 0x00bc
                           0000BC   511 _ADC0CF	=	0x00bc
                           0000BE   512 G$ADC0L$0$0 == 0x00be
                           0000BE   513 _ADC0L	=	0x00be
                           0000BF   514 G$ADC0H$0$0 == 0x00bf
                           0000BF   515 _ADC0H	=	0x00bf
                           0000C0   516 G$SMB0CN$0$0 == 0x00c0
                           0000C0   517 _SMB0CN	=	0x00c0
                           0000C1   518 G$SMB0STA$0$0 == 0x00c1
                           0000C1   519 _SMB0STA	=	0x00c1
                           0000C2   520 G$SMB0DAT$0$0 == 0x00c2
                           0000C2   521 _SMB0DAT	=	0x00c2
                           0000C3   522 G$SMB0ADR$0$0 == 0x00c3
                           0000C3   523 _SMB0ADR	=	0x00c3
                           0000C4   524 G$ADC0GTL$0$0 == 0x00c4
                           0000C4   525 _ADC0GTL	=	0x00c4
                           0000C5   526 G$ADC0GTH$0$0 == 0x00c5
                           0000C5   527 _ADC0GTH	=	0x00c5
                           0000C6   528 G$ADC0LTL$0$0 == 0x00c6
                           0000C6   529 _ADC0LTL	=	0x00c6
                           0000C7   530 G$ADC0LTH$0$0 == 0x00c7
                           0000C7   531 _ADC0LTH	=	0x00c7
                           0000C8   532 G$TMR2CN$0$0 == 0x00c8
                           0000C8   533 _TMR2CN	=	0x00c8
                           0000C9   534 G$TMR2CF$0$0 == 0x00c9
                           0000C9   535 _TMR2CF	=	0x00c9
                           0000CA   536 G$RCAP2L$0$0 == 0x00ca
                           0000CA   537 _RCAP2L	=	0x00ca
                           0000CB   538 G$RCAP2H$0$0 == 0x00cb
                           0000CB   539 _RCAP2H	=	0x00cb
                           0000CC   540 G$TMR2L$0$0 == 0x00cc
                           0000CC   541 _TMR2L	=	0x00cc
                           0000CC   542 G$TL2$0$0 == 0x00cc
                           0000CC   543 _TL2	=	0x00cc
                           0000CD   544 G$TMR2H$0$0 == 0x00cd
                           0000CD   545 _TMR2H	=	0x00cd
                           0000CD   546 G$TH2$0$0 == 0x00cd
                           0000CD   547 _TH2	=	0x00cd
                           0000CF   548 G$SMB0CR$0$0 == 0x00cf
                           0000CF   549 _SMB0CR	=	0x00cf
                           0000D1   550 G$REF0CN$0$0 == 0x00d1
                           0000D1   551 _REF0CN	=	0x00d1
                           0000D2   552 G$DAC0L$0$0 == 0x00d2
                           0000D2   553 _DAC0L	=	0x00d2
                           0000D3   554 G$DAC0H$0$0 == 0x00d3
                           0000D3   555 _DAC0H	=	0x00d3
                           0000D4   556 G$DAC0CN$0$0 == 0x00d4
                           0000D4   557 _DAC0CN	=	0x00d4
                           0000D8   558 G$PCA0CN$0$0 == 0x00d8
                           0000D8   559 _PCA0CN	=	0x00d8
                           0000D9   560 G$PCA0MD$0$0 == 0x00d9
                           0000D9   561 _PCA0MD	=	0x00d9
                           0000DA   562 G$PCA0CPM0$0$0 == 0x00da
                           0000DA   563 _PCA0CPM0	=	0x00da
                           0000DB   564 G$PCA0CPM1$0$0 == 0x00db
                           0000DB   565 _PCA0CPM1	=	0x00db
                           0000DC   566 G$PCA0CPM2$0$0 == 0x00dc
                           0000DC   567 _PCA0CPM2	=	0x00dc
                           0000DD   568 G$PCA0CPM3$0$0 == 0x00dd
                           0000DD   569 _PCA0CPM3	=	0x00dd
                           0000DE   570 G$PCA0CPM4$0$0 == 0x00de
                           0000DE   571 _PCA0CPM4	=	0x00de
                           0000DF   572 G$PCA0CPM5$0$0 == 0x00df
                           0000DF   573 _PCA0CPM5	=	0x00df
                           0000E1   574 G$PCA0CPL5$0$0 == 0x00e1
                           0000E1   575 _PCA0CPL5	=	0x00e1
                           0000E2   576 G$PCA0CPH5$0$0 == 0x00e2
                           0000E2   577 _PCA0CPH5	=	0x00e2
                           0000E8   578 G$ADC0CN$0$0 == 0x00e8
                           0000E8   579 _ADC0CN	=	0x00e8
                           0000E9   580 G$PCA0CPL2$0$0 == 0x00e9
                           0000E9   581 _PCA0CPL2	=	0x00e9
                           0000EA   582 G$PCA0CPH2$0$0 == 0x00ea
                           0000EA   583 _PCA0CPH2	=	0x00ea
                           0000EB   584 G$PCA0CPL3$0$0 == 0x00eb
                           0000EB   585 _PCA0CPL3	=	0x00eb
                           0000EC   586 G$PCA0CPH3$0$0 == 0x00ec
                           0000EC   587 _PCA0CPH3	=	0x00ec
                           0000ED   588 G$PCA0CPL4$0$0 == 0x00ed
                           0000ED   589 _PCA0CPL4	=	0x00ed
                           0000EE   590 G$PCA0CPH4$0$0 == 0x00ee
                           0000EE   591 _PCA0CPH4	=	0x00ee
                           0000EF   592 G$RSTSRC$0$0 == 0x00ef
                           0000EF   593 _RSTSRC	=	0x00ef
                           0000F8   594 G$SPI0CN$0$0 == 0x00f8
                           0000F8   595 _SPI0CN	=	0x00f8
                           0000F9   596 G$PCA0L$0$0 == 0x00f9
                           0000F9   597 _PCA0L	=	0x00f9
                           0000FA   598 G$PCA0H$0$0 == 0x00fa
                           0000FA   599 _PCA0H	=	0x00fa
                           0000FB   600 G$PCA0CPL0$0$0 == 0x00fb
                           0000FB   601 _PCA0CPL0	=	0x00fb
                           0000FC   602 G$PCA0CPH0$0$0 == 0x00fc
                           0000FC   603 _PCA0CPH0	=	0x00fc
                           0000FD   604 G$PCA0CPL1$0$0 == 0x00fd
                           0000FD   605 _PCA0CPL1	=	0x00fd
                           0000FE   606 G$PCA0CPH1$0$0 == 0x00fe
                           0000FE   607 _PCA0CPH1	=	0x00fe
                           000088   608 G$CPT0CN$0$0 == 0x0088
                           000088   609 _CPT0CN	=	0x0088
                           000089   610 G$CPT0MD$0$0 == 0x0089
                           000089   611 _CPT0MD	=	0x0089
                           000098   612 G$SCON1$0$0 == 0x0098
                           000098   613 _SCON1	=	0x0098
                           000099   614 G$SBUF1$0$0 == 0x0099
                           000099   615 _SBUF1	=	0x0099
                           0000C8   616 G$TMR3CN$0$0 == 0x00c8
                           0000C8   617 _TMR3CN	=	0x00c8
                           0000C9   618 G$TMR3CF$0$0 == 0x00c9
                           0000C9   619 _TMR3CF	=	0x00c9
                           0000CA   620 G$RCAP3L$0$0 == 0x00ca
                           0000CA   621 _RCAP3L	=	0x00ca
                           0000CB   622 G$RCAP3H$0$0 == 0x00cb
                           0000CB   623 _RCAP3H	=	0x00cb
                           0000CC   624 G$TMR3L$0$0 == 0x00cc
                           0000CC   625 _TMR3L	=	0x00cc
                           0000CD   626 G$TMR3H$0$0 == 0x00cd
                           0000CD   627 _TMR3H	=	0x00cd
                           0000D2   628 G$DAC1L$0$0 == 0x00d2
                           0000D2   629 _DAC1L	=	0x00d2
                           0000D3   630 G$DAC1H$0$0 == 0x00d3
                           0000D3   631 _DAC1H	=	0x00d3
                           0000D4   632 G$DAC1CN$0$0 == 0x00d4
                           0000D4   633 _DAC1CN	=	0x00d4
                           000088   634 G$CPT1CN$0$0 == 0x0088
                           000088   635 _CPT1CN	=	0x0088
                           000089   636 G$CPT1MD$0$0 == 0x0089
                           000089   637 _CPT1MD	=	0x0089
                           0000BA   638 G$AMX2CF$0$0 == 0x00ba
                           0000BA   639 _AMX2CF	=	0x00ba
                           0000BB   640 G$AMX2SL$0$0 == 0x00bb
                           0000BB   641 _AMX2SL	=	0x00bb
                           0000BC   642 G$ADC2CF$0$0 == 0x00bc
                           0000BC   643 _ADC2CF	=	0x00bc
                           0000BE   644 G$ADC2$0$0 == 0x00be
                           0000BE   645 _ADC2	=	0x00be
                           0000C4   646 G$ADC2GT$0$0 == 0x00c4
                           0000C4   647 _ADC2GT	=	0x00c4
                           0000C6   648 G$ADC2LT$0$0 == 0x00c6
                           0000C6   649 _ADC2LT	=	0x00c6
                           0000C8   650 G$TMR4CN$0$0 == 0x00c8
                           0000C8   651 _TMR4CN	=	0x00c8
                           0000C9   652 G$TMR4CF$0$0 == 0x00c9
                           0000C9   653 _TMR4CF	=	0x00c9
                           0000CA   654 G$RCAP4L$0$0 == 0x00ca
                           0000CA   655 _RCAP4L	=	0x00ca
                           0000CB   656 G$RCAP4H$0$0 == 0x00cb
                           0000CB   657 _RCAP4H	=	0x00cb
                           0000CC   658 G$TMR4L$0$0 == 0x00cc
                           0000CC   659 _TMR4L	=	0x00cc
                           0000CD   660 G$TMR4H$0$0 == 0x00cd
                           0000CD   661 _TMR4H	=	0x00cd
                           0000E8   662 G$ADC2CN$0$0 == 0x00e8
                           0000E8   663 _ADC2CN	=	0x00e8
                           000091   664 G$MAC0BL$0$0 == 0x0091
                           000091   665 _MAC0BL	=	0x0091
                           000092   666 G$MAC0BH$0$0 == 0x0092
                           000092   667 _MAC0BH	=	0x0092
                           000093   668 G$MAC0ACC0$0$0 == 0x0093
                           000093   669 _MAC0ACC0	=	0x0093
                           000094   670 G$MAC0ACC1$0$0 == 0x0094
                           000094   671 _MAC0ACC1	=	0x0094
                           000095   672 G$MAC0ACC2$0$0 == 0x0095
                           000095   673 _MAC0ACC2	=	0x0095
                           000096   674 G$MAC0ACC3$0$0 == 0x0096
                           000096   675 _MAC0ACC3	=	0x0096
                           000097   676 G$MAC0OVR$0$0 == 0x0097
                           000097   677 _MAC0OVR	=	0x0097
                           0000C0   678 G$MAC0STA$0$0 == 0x00c0
                           0000C0   679 _MAC0STA	=	0x00c0
                           0000C1   680 G$MAC0AL$0$0 == 0x00c1
                           0000C1   681 _MAC0AL	=	0x00c1
                           0000C2   682 G$MAC0AH$0$0 == 0x00c2
                           0000C2   683 _MAC0AH	=	0x00c2
                           0000C3   684 G$MAC0CF$0$0 == 0x00c3
                           0000C3   685 _MAC0CF	=	0x00c3
                           0000CE   686 G$MAC0RNDL$0$0 == 0x00ce
                           0000CE   687 _MAC0RNDL	=	0x00ce
                           0000CF   688 G$MAC0RNDH$0$0 == 0x00cf
                           0000CF   689 _MAC0RNDH	=	0x00cf
                           000088   690 G$FLSTAT$0$0 == 0x0088
                           000088   691 _FLSTAT	=	0x0088
                           000089   692 G$PLL0CN$0$0 == 0x0089
                           000089   693 _PLL0CN	=	0x0089
                           00008A   694 G$OSCICN$0$0 == 0x008a
                           00008A   695 _OSCICN	=	0x008a
                           00008B   696 G$OSCICL$0$0 == 0x008b
                           00008B   697 _OSCICL	=	0x008b
                           00008C   698 G$OSCXCN$0$0 == 0x008c
                           00008C   699 _OSCXCN	=	0x008c
                           00008D   700 G$PLL0DIV$0$0 == 0x008d
                           00008D   701 _PLL0DIV	=	0x008d
                           00008E   702 G$PLL0MUL$0$0 == 0x008e
                           00008E   703 _PLL0MUL	=	0x008e
                           00008F   704 G$PLL0FLT$0$0 == 0x008f
                           00008F   705 _PLL0FLT	=	0x008f
                           000096   706 G$SFRPGCN$0$0 == 0x0096
                           000096   707 _SFRPGCN	=	0x0096
                           000097   708 G$CLKSEL$0$0 == 0x0097
                           000097   709 _CLKSEL	=	0x0097
                           00009A   710 G$CCH0MA$0$0 == 0x009a
                           00009A   711 _CCH0MA	=	0x009a
                           00009C   712 G$P4MDOUT$0$0 == 0x009c
                           00009C   713 _P4MDOUT	=	0x009c
                           00009D   714 G$P5MDOUT$0$0 == 0x009d
                           00009D   715 _P5MDOUT	=	0x009d
                           00009E   716 G$P6MDOUT$0$0 == 0x009e
                           00009E   717 _P6MDOUT	=	0x009e
                           00009F   718 G$P7MDOUT$0$0 == 0x009f
                           00009F   719 _P7MDOUT	=	0x009f
                           0000A1   720 G$CCH0CN$0$0 == 0x00a1
                           0000A1   721 _CCH0CN	=	0x00a1
                           0000A2   722 G$CCH0TN$0$0 == 0x00a2
                           0000A2   723 _CCH0TN	=	0x00a2
                           0000A3   724 G$CCH0LC$0$0 == 0x00a3
                           0000A3   725 _CCH0LC	=	0x00a3
                           0000A4   726 G$P0MDOUT$0$0 == 0x00a4
                           0000A4   727 _P0MDOUT	=	0x00a4
                           0000A5   728 G$P1MDOUT$0$0 == 0x00a5
                           0000A5   729 _P1MDOUT	=	0x00a5
                           0000A6   730 G$P2MDOUT$0$0 == 0x00a6
                           0000A6   731 _P2MDOUT	=	0x00a6
                           0000A7   732 G$P3MDOUT$0$0 == 0x00a7
                           0000A7   733 _P3MDOUT	=	0x00a7
                           0000AD   734 G$P1MDIN$0$0 == 0x00ad
                           0000AD   735 _P1MDIN	=	0x00ad
                           0000B7   736 G$FLACL$0$0 == 0x00b7
                           0000B7   737 _FLACL	=	0x00b7
                           0000C8   738 G$P4$0$0 == 0x00c8
                           0000C8   739 _P4	=	0x00c8
                           0000D8   740 G$P5$0$0 == 0x00d8
                           0000D8   741 _P5	=	0x00d8
                           0000E1   742 G$XBR0$0$0 == 0x00e1
                           0000E1   743 _XBR0	=	0x00e1
                           0000E2   744 G$XBR1$0$0 == 0x00e2
                           0000E2   745 _XBR1	=	0x00e2
                           0000E3   746 G$XBR2$0$0 == 0x00e3
                           0000E3   747 _XBR2	=	0x00e3
                           0000E8   748 G$P6$0$0 == 0x00e8
                           0000E8   749 _P6	=	0x00e8
                           0000F8   750 G$P7$0$0 == 0x00f8
                           0000F8   751 _P7	=	0x00f8
                           008C8A   752 G$TMR0$0$0 == 0x8c8a
                           008C8A   753 _TMR0	=	0x8c8a
                           008D8B   754 G$TMR1$0$0 == 0x8d8b
                           008D8B   755 _TMR1	=	0x8d8b
                           00CDCC   756 G$TMR2$0$0 == 0xcdcc
                           00CDCC   757 _TMR2	=	0xcdcc
                           00CBCA   758 G$RCAP2$0$0 == 0xcbca
                           00CBCA   759 _RCAP2	=	0xcbca
                           00BFBE   760 G$ADC0$0$0 == 0xbfbe
                           00BFBE   761 _ADC0	=	0xbfbe
                           00C5C4   762 G$ADC0GT$0$0 == 0xc5c4
                           00C5C4   763 _ADC0GT	=	0xc5c4
                           00C7C6   764 G$ADC0LT$0$0 == 0xc7c6
                           00C7C6   765 _ADC0LT	=	0xc7c6
                           00D3D2   766 G$DAC0$0$0 == 0xd3d2
                           00D3D2   767 _DAC0	=	0xd3d2
                           00FAF9   768 G$PCA0$0$0 == 0xfaf9
                           00FAF9   769 _PCA0	=	0xfaf9
                           00FCFB   770 G$PCA0CP0$0$0 == 0xfcfb
                           00FCFB   771 _PCA0CP0	=	0xfcfb
                           00FEFD   772 G$PCA0CP1$0$0 == 0xfefd
                           00FEFD   773 _PCA0CP1	=	0xfefd
                           00EAE9   774 G$PCA0CP2$0$0 == 0xeae9
                           00EAE9   775 _PCA0CP2	=	0xeae9
                           00ECEB   776 G$PCA0CP3$0$0 == 0xeceb
                           00ECEB   777 _PCA0CP3	=	0xeceb
                           00EEED   778 G$PCA0CP4$0$0 == 0xeeed
                           00EEED   779 _PCA0CP4	=	0xeeed
                           00E2E1   780 G$PCA0CP5$0$0 == 0xe2e1
                           00E2E1   781 _PCA0CP5	=	0xe2e1
                           00CDCC   782 G$TMR3$0$0 == 0xcdcc
                           00CDCC   783 _TMR3	=	0xcdcc
                           00CBCA   784 G$RCAP3$0$0 == 0xcbca
                           00CBCA   785 _RCAP3	=	0xcbca
                           00D3D2   786 G$DAC1$0$0 == 0xd3d2
                           00D3D2   787 _DAC1	=	0xd3d2
                           00CDCC   788 G$TMR4$0$0 == 0xcdcc
                           00CDCC   789 _TMR4	=	0xcdcc
                           00CBCA   790 G$RCAP4$0$0 == 0xcbca
                           00CBCA   791 _RCAP4	=	0xcbca
                           00C2C1   792 G$MAC0A$0$0 == 0xc2c1
                           00C2C1   793 _MAC0A	=	0xc2c1
                           96959493   794 G$MAC0ACC$0$0 == 0x96959493
                           96959493   795 _MAC0ACC	=	0x96959493
                           00CFCE   796 G$MAC0RND$0$0 == 0xcfce
                           00CFCE   797 _MAC0RND	=	0xcfce
                                    798 ;--------------------------------------------------------
                                    799 ; special function bits
                                    800 ;--------------------------------------------------------
                                    801 	.area RSEG    (ABS,DATA)
      000000                        802 	.org 0x0000
                           000080   803 G$P0_0$0$0 == 0x0080
                           000080   804 _P0_0	=	0x0080
                           000081   805 G$P0_1$0$0 == 0x0081
                           000081   806 _P0_1	=	0x0081
                           000082   807 G$P0_2$0$0 == 0x0082
                           000082   808 _P0_2	=	0x0082
                           000083   809 G$P0_3$0$0 == 0x0083
                           000083   810 _P0_3	=	0x0083
                           000084   811 G$P0_4$0$0 == 0x0084
                           000084   812 _P0_4	=	0x0084
                           000085   813 G$P0_5$0$0 == 0x0085
                           000085   814 _P0_5	=	0x0085
                           000086   815 G$P0_6$0$0 == 0x0086
                           000086   816 _P0_6	=	0x0086
                           000087   817 G$P0_7$0$0 == 0x0087
                           000087   818 _P0_7	=	0x0087
                           000088   819 G$IT0$0$0 == 0x0088
                           000088   820 _IT0	=	0x0088
                           000089   821 G$IE0$0$0 == 0x0089
                           000089   822 _IE0	=	0x0089
                           00008A   823 G$IT1$0$0 == 0x008a
                           00008A   824 _IT1	=	0x008a
                           00008B   825 G$IE1$0$0 == 0x008b
                           00008B   826 _IE1	=	0x008b
                           00008C   827 G$TR0$0$0 == 0x008c
                           00008C   828 _TR0	=	0x008c
                           00008D   829 G$TF0$0$0 == 0x008d
                           00008D   830 _TF0	=	0x008d
                           00008E   831 G$TR1$0$0 == 0x008e
                           00008E   832 _TR1	=	0x008e
                           00008F   833 G$TF1$0$0 == 0x008f
                           00008F   834 _TF1	=	0x008f
                           000088   835 G$CP0HYN0$0$0 == 0x0088
                           000088   836 _CP0HYN0	=	0x0088
                           000089   837 G$CP0HYN1$0$0 == 0x0089
                           000089   838 _CP0HYN1	=	0x0089
                           00008A   839 G$CP0HYP0$0$0 == 0x008a
                           00008A   840 _CP0HYP0	=	0x008a
                           00008B   841 G$CP0HYP1$0$0 == 0x008b
                           00008B   842 _CP0HYP1	=	0x008b
                           00008C   843 G$CP0FIF$0$0 == 0x008c
                           00008C   844 _CP0FIF	=	0x008c
                           00008D   845 G$CP0RIF$0$0 == 0x008d
                           00008D   846 _CP0RIF	=	0x008d
                           00008E   847 G$CP0OUT$0$0 == 0x008e
                           00008E   848 _CP0OUT	=	0x008e
                           00008F   849 G$CP0EN$0$0 == 0x008f
                           00008F   850 _CP0EN	=	0x008f
                           000088   851 G$CP1HYN0$0$0 == 0x0088
                           000088   852 _CP1HYN0	=	0x0088
                           000089   853 G$CP1HYN1$0$0 == 0x0089
                           000089   854 _CP1HYN1	=	0x0089
                           00008A   855 G$CP1HYP0$0$0 == 0x008a
                           00008A   856 _CP1HYP0	=	0x008a
                           00008B   857 G$CP1HYP1$0$0 == 0x008b
                           00008B   858 _CP1HYP1	=	0x008b
                           00008C   859 G$CP1FIF$0$0 == 0x008c
                           00008C   860 _CP1FIF	=	0x008c
                           00008D   861 G$CP1RIF$0$0 == 0x008d
                           00008D   862 _CP1RIF	=	0x008d
                           00008E   863 G$CP1OUT$0$0 == 0x008e
                           00008E   864 _CP1OUT	=	0x008e
                           00008F   865 G$CP1EN$0$0 == 0x008f
                           00008F   866 _CP1EN	=	0x008f
                           000088   867 G$FLHBUSY$0$0 == 0x0088
                           000088   868 _FLHBUSY	=	0x0088
                           000090   869 G$P1_0$0$0 == 0x0090
                           000090   870 _P1_0	=	0x0090
                           000091   871 G$P1_1$0$0 == 0x0091
                           000091   872 _P1_1	=	0x0091
                           000092   873 G$P1_2$0$0 == 0x0092
                           000092   874 _P1_2	=	0x0092
                           000093   875 G$P1_3$0$0 == 0x0093
                           000093   876 _P1_3	=	0x0093
                           000094   877 G$P1_4$0$0 == 0x0094
                           000094   878 _P1_4	=	0x0094
                           000095   879 G$P1_5$0$0 == 0x0095
                           000095   880 _P1_5	=	0x0095
                           000096   881 G$P1_6$0$0 == 0x0096
                           000096   882 _P1_6	=	0x0096
                           000097   883 G$P1_7$0$0 == 0x0097
                           000097   884 _P1_7	=	0x0097
                           000098   885 G$RI0$0$0 == 0x0098
                           000098   886 _RI0	=	0x0098
                           000098   887 G$RI$0$0 == 0x0098
                           000098   888 _RI	=	0x0098
                           000099   889 G$TI0$0$0 == 0x0099
                           000099   890 _TI0	=	0x0099
                           000099   891 G$TI$0$0 == 0x0099
                           000099   892 _TI	=	0x0099
                           00009A   893 G$RB80$0$0 == 0x009a
                           00009A   894 _RB80	=	0x009a
                           00009B   895 G$TB80$0$0 == 0x009b
                           00009B   896 _TB80	=	0x009b
                           00009C   897 G$REN0$0$0 == 0x009c
                           00009C   898 _REN0	=	0x009c
                           00009C   899 G$REN$0$0 == 0x009c
                           00009C   900 _REN	=	0x009c
                           00009D   901 G$SM20$0$0 == 0x009d
                           00009D   902 _SM20	=	0x009d
                           00009E   903 G$SM10$0$0 == 0x009e
                           00009E   904 _SM10	=	0x009e
                           00009F   905 G$SM00$0$0 == 0x009f
                           00009F   906 _SM00	=	0x009f
                           000098   907 G$RI1$0$0 == 0x0098
                           000098   908 _RI1	=	0x0098
                           000099   909 G$TI1$0$0 == 0x0099
                           000099   910 _TI1	=	0x0099
                           00009A   911 G$RB81$0$0 == 0x009a
                           00009A   912 _RB81	=	0x009a
                           00009B   913 G$TB81$0$0 == 0x009b
                           00009B   914 _TB81	=	0x009b
                           00009C   915 G$REN1$0$0 == 0x009c
                           00009C   916 _REN1	=	0x009c
                           00009D   917 G$MCE1$0$0 == 0x009d
                           00009D   918 _MCE1	=	0x009d
                           00009F   919 G$S1MODE$0$0 == 0x009f
                           00009F   920 _S1MODE	=	0x009f
                           0000A0   921 G$P2_0$0$0 == 0x00a0
                           0000A0   922 _P2_0	=	0x00a0
                           0000A1   923 G$P2_1$0$0 == 0x00a1
                           0000A1   924 _P2_1	=	0x00a1
                           0000A2   925 G$P2_2$0$0 == 0x00a2
                           0000A2   926 _P2_2	=	0x00a2
                           0000A3   927 G$P2_3$0$0 == 0x00a3
                           0000A3   928 _P2_3	=	0x00a3
                           0000A4   929 G$P2_4$0$0 == 0x00a4
                           0000A4   930 _P2_4	=	0x00a4
                           0000A5   931 G$P2_5$0$0 == 0x00a5
                           0000A5   932 _P2_5	=	0x00a5
                           0000A6   933 G$P2_6$0$0 == 0x00a6
                           0000A6   934 _P2_6	=	0x00a6
                           0000A7   935 G$P2_7$0$0 == 0x00a7
                           0000A7   936 _P2_7	=	0x00a7
                           0000A8   937 G$EX0$0$0 == 0x00a8
                           0000A8   938 _EX0	=	0x00a8
                           0000A9   939 G$ET0$0$0 == 0x00a9
                           0000A9   940 _ET0	=	0x00a9
                           0000AA   941 G$EX1$0$0 == 0x00aa
                           0000AA   942 _EX1	=	0x00aa
                           0000AB   943 G$ET1$0$0 == 0x00ab
                           0000AB   944 _ET1	=	0x00ab
                           0000AC   945 G$ES0$0$0 == 0x00ac
                           0000AC   946 _ES0	=	0x00ac
                           0000AC   947 G$ES$0$0 == 0x00ac
                           0000AC   948 _ES	=	0x00ac
                           0000AD   949 G$ET2$0$0 == 0x00ad
                           0000AD   950 _ET2	=	0x00ad
                           0000AF   951 G$EA$0$0 == 0x00af
                           0000AF   952 _EA	=	0x00af
                           0000B0   953 G$P3_0$0$0 == 0x00b0
                           0000B0   954 _P3_0	=	0x00b0
                           0000B1   955 G$P3_1$0$0 == 0x00b1
                           0000B1   956 _P3_1	=	0x00b1
                           0000B2   957 G$P3_2$0$0 == 0x00b2
                           0000B2   958 _P3_2	=	0x00b2
                           0000B3   959 G$P3_3$0$0 == 0x00b3
                           0000B3   960 _P3_3	=	0x00b3
                           0000B4   961 G$P3_4$0$0 == 0x00b4
                           0000B4   962 _P3_4	=	0x00b4
                           0000B5   963 G$P3_5$0$0 == 0x00b5
                           0000B5   964 _P3_5	=	0x00b5
                           0000B6   965 G$P3_6$0$0 == 0x00b6
                           0000B6   966 _P3_6	=	0x00b6
                           0000B7   967 G$P3_7$0$0 == 0x00b7
                           0000B7   968 _P3_7	=	0x00b7
                           0000B8   969 G$PX0$0$0 == 0x00b8
                           0000B8   970 _PX0	=	0x00b8
                           0000B9   971 G$PT0$0$0 == 0x00b9
                           0000B9   972 _PT0	=	0x00b9
                           0000BA   973 G$PX1$0$0 == 0x00ba
                           0000BA   974 _PX1	=	0x00ba
                           0000BB   975 G$PT1$0$0 == 0x00bb
                           0000BB   976 _PT1	=	0x00bb
                           0000BC   977 G$PS0$0$0 == 0x00bc
                           0000BC   978 _PS0	=	0x00bc
                           0000BC   979 G$PS$0$0 == 0x00bc
                           0000BC   980 _PS	=	0x00bc
                           0000BD   981 G$PT2$0$0 == 0x00bd
                           0000BD   982 _PT2	=	0x00bd
                           0000C0   983 G$SMBTOE$0$0 == 0x00c0
                           0000C0   984 _SMBTOE	=	0x00c0
                           0000C1   985 G$SMBFTE$0$0 == 0x00c1
                           0000C1   986 _SMBFTE	=	0x00c1
                           0000C2   987 G$AA$0$0 == 0x00c2
                           0000C2   988 _AA	=	0x00c2
                           0000C3   989 G$SI$0$0 == 0x00c3
                           0000C3   990 _SI	=	0x00c3
                           0000C4   991 G$STO$0$0 == 0x00c4
                           0000C4   992 _STO	=	0x00c4
                           0000C5   993 G$STA$0$0 == 0x00c5
                           0000C5   994 _STA	=	0x00c5
                           0000C6   995 G$ENSMB$0$0 == 0x00c6
                           0000C6   996 _ENSMB	=	0x00c6
                           0000C7   997 G$BUSY$0$0 == 0x00c7
                           0000C7   998 _BUSY	=	0x00c7
                           0000C0   999 G$MAC0N$0$0 == 0x00c0
                           0000C0  1000 _MAC0N	=	0x00c0
                           0000C1  1001 G$MAC0SO$0$0 == 0x00c1
                           0000C1  1002 _MAC0SO	=	0x00c1
                           0000C2  1003 G$MAC0Z$0$0 == 0x00c2
                           0000C2  1004 _MAC0Z	=	0x00c2
                           0000C3  1005 G$MAC0HO$0$0 == 0x00c3
                           0000C3  1006 _MAC0HO	=	0x00c3
                           0000C8  1007 G$CPRL2$0$0 == 0x00c8
                           0000C8  1008 _CPRL2	=	0x00c8
                           0000C9  1009 G$CT2$0$0 == 0x00c9
                           0000C9  1010 _CT2	=	0x00c9
                           0000CA  1011 G$TR2$0$0 == 0x00ca
                           0000CA  1012 _TR2	=	0x00ca
                           0000CB  1013 G$EXEN2$0$0 == 0x00cb
                           0000CB  1014 _EXEN2	=	0x00cb
                           0000CE  1015 G$EXF2$0$0 == 0x00ce
                           0000CE  1016 _EXF2	=	0x00ce
                           0000CF  1017 G$TF2$0$0 == 0x00cf
                           0000CF  1018 _TF2	=	0x00cf
                           0000C8  1019 G$CPRL3$0$0 == 0x00c8
                           0000C8  1020 _CPRL3	=	0x00c8
                           0000C9  1021 G$CT3$0$0 == 0x00c9
                           0000C9  1022 _CT3	=	0x00c9
                           0000CA  1023 G$TR3$0$0 == 0x00ca
                           0000CA  1024 _TR3	=	0x00ca
                           0000CB  1025 G$EXEN3$0$0 == 0x00cb
                           0000CB  1026 _EXEN3	=	0x00cb
                           0000CE  1027 G$EXF3$0$0 == 0x00ce
                           0000CE  1028 _EXF3	=	0x00ce
                           0000CF  1029 G$TF3$0$0 == 0x00cf
                           0000CF  1030 _TF3	=	0x00cf
                           0000C8  1031 G$CPRL4$0$0 == 0x00c8
                           0000C8  1032 _CPRL4	=	0x00c8
                           0000C9  1033 G$CT4$0$0 == 0x00c9
                           0000C9  1034 _CT4	=	0x00c9
                           0000CA  1035 G$TR4$0$0 == 0x00ca
                           0000CA  1036 _TR4	=	0x00ca
                           0000CB  1037 G$EXEN4$0$0 == 0x00cb
                           0000CB  1038 _EXEN4	=	0x00cb
                           0000CE  1039 G$EXF4$0$0 == 0x00ce
                           0000CE  1040 _EXF4	=	0x00ce
                           0000CF  1041 G$TF4$0$0 == 0x00cf
                           0000CF  1042 _TF4	=	0x00cf
                           0000C8  1043 G$P4_0$0$0 == 0x00c8
                           0000C8  1044 _P4_0	=	0x00c8
                           0000C9  1045 G$P4_1$0$0 == 0x00c9
                           0000C9  1046 _P4_1	=	0x00c9
                           0000CA  1047 G$P4_2$0$0 == 0x00ca
                           0000CA  1048 _P4_2	=	0x00ca
                           0000CB  1049 G$P4_3$0$0 == 0x00cb
                           0000CB  1050 _P4_3	=	0x00cb
                           0000CC  1051 G$P4_4$0$0 == 0x00cc
                           0000CC  1052 _P4_4	=	0x00cc
                           0000CD  1053 G$P4_5$0$0 == 0x00cd
                           0000CD  1054 _P4_5	=	0x00cd
                           0000CE  1055 G$P4_6$0$0 == 0x00ce
                           0000CE  1056 _P4_6	=	0x00ce
                           0000CF  1057 G$P4_7$0$0 == 0x00cf
                           0000CF  1058 _P4_7	=	0x00cf
                           0000D0  1059 G$P$0$0 == 0x00d0
                           0000D0  1060 _P	=	0x00d0
                           0000D1  1061 G$F1$0$0 == 0x00d1
                           0000D1  1062 _F1	=	0x00d1
                           0000D2  1063 G$OV$0$0 == 0x00d2
                           0000D2  1064 _OV	=	0x00d2
                           0000D3  1065 G$RS0$0$0 == 0x00d3
                           0000D3  1066 _RS0	=	0x00d3
                           0000D4  1067 G$RS1$0$0 == 0x00d4
                           0000D4  1068 _RS1	=	0x00d4
                           0000D5  1069 G$F0$0$0 == 0x00d5
                           0000D5  1070 _F0	=	0x00d5
                           0000D6  1071 G$AC$0$0 == 0x00d6
                           0000D6  1072 _AC	=	0x00d6
                           0000D7  1073 G$CY$0$0 == 0x00d7
                           0000D7  1074 _CY	=	0x00d7
                           0000D8  1075 G$CCF0$0$0 == 0x00d8
                           0000D8  1076 _CCF0	=	0x00d8
                           0000D9  1077 G$CCF1$0$0 == 0x00d9
                           0000D9  1078 _CCF1	=	0x00d9
                           0000DA  1079 G$CCF2$0$0 == 0x00da
                           0000DA  1080 _CCF2	=	0x00da
                           0000DB  1081 G$CCF3$0$0 == 0x00db
                           0000DB  1082 _CCF3	=	0x00db
                           0000DC  1083 G$CCF4$0$0 == 0x00dc
                           0000DC  1084 _CCF4	=	0x00dc
                           0000DD  1085 G$CCF5$0$0 == 0x00dd
                           0000DD  1086 _CCF5	=	0x00dd
                           0000DE  1087 G$CR$0$0 == 0x00de
                           0000DE  1088 _CR	=	0x00de
                           0000DF  1089 G$CF$0$0 == 0x00df
                           0000DF  1090 _CF	=	0x00df
                           0000D8  1091 G$P5_0$0$0 == 0x00d8
                           0000D8  1092 _P5_0	=	0x00d8
                           0000D9  1093 G$P5_1$0$0 == 0x00d9
                           0000D9  1094 _P5_1	=	0x00d9
                           0000DA  1095 G$P5_2$0$0 == 0x00da
                           0000DA  1096 _P5_2	=	0x00da
                           0000DB  1097 G$P5_3$0$0 == 0x00db
                           0000DB  1098 _P5_3	=	0x00db
                           0000DC  1099 G$P5_4$0$0 == 0x00dc
                           0000DC  1100 _P5_4	=	0x00dc
                           0000DD  1101 G$P5_5$0$0 == 0x00dd
                           0000DD  1102 _P5_5	=	0x00dd
                           0000DE  1103 G$P5_6$0$0 == 0x00de
                           0000DE  1104 _P5_6	=	0x00de
                           0000DF  1105 G$P5_7$0$0 == 0x00df
                           0000DF  1106 _P5_7	=	0x00df
                           0000E8  1107 G$AD0LJST$0$0 == 0x00e8
                           0000E8  1108 _AD0LJST	=	0x00e8
                           0000E9  1109 G$AD0WINT$0$0 == 0x00e9
                           0000E9  1110 _AD0WINT	=	0x00e9
                           0000EA  1111 G$AD0CM0$0$0 == 0x00ea
                           0000EA  1112 _AD0CM0	=	0x00ea
                           0000EB  1113 G$AD0CM1$0$0 == 0x00eb
                           0000EB  1114 _AD0CM1	=	0x00eb
                           0000EC  1115 G$AD0BUSY$0$0 == 0x00ec
                           0000EC  1116 _AD0BUSY	=	0x00ec
                           0000ED  1117 G$AD0INT$0$0 == 0x00ed
                           0000ED  1118 _AD0INT	=	0x00ed
                           0000EE  1119 G$AD0TM$0$0 == 0x00ee
                           0000EE  1120 _AD0TM	=	0x00ee
                           0000EF  1121 G$AD0EN$0$0 == 0x00ef
                           0000EF  1122 _AD0EN	=	0x00ef
                           0000E8  1123 G$AD2WINT$0$0 == 0x00e8
                           0000E8  1124 _AD2WINT	=	0x00e8
                           0000E9  1125 G$AD2CM0$0$0 == 0x00e9
                           0000E9  1126 _AD2CM0	=	0x00e9
                           0000EA  1127 G$AD2CM1$0$0 == 0x00ea
                           0000EA  1128 _AD2CM1	=	0x00ea
                           0000EB  1129 G$AD2CM2$0$0 == 0x00eb
                           0000EB  1130 _AD2CM2	=	0x00eb
                           0000EC  1131 G$AD2BUSY$0$0 == 0x00ec
                           0000EC  1132 _AD2BUSY	=	0x00ec
                           0000ED  1133 G$AD2INT$0$0 == 0x00ed
                           0000ED  1134 _AD2INT	=	0x00ed
                           0000EE  1135 G$AD2TM$0$0 == 0x00ee
                           0000EE  1136 _AD2TM	=	0x00ee
                           0000EF  1137 G$AD2EN$0$0 == 0x00ef
                           0000EF  1138 _AD2EN	=	0x00ef
                           0000E8  1139 G$P6_0$0$0 == 0x00e8
                           0000E8  1140 _P6_0	=	0x00e8
                           0000E9  1141 G$P6_1$0$0 == 0x00e9
                           0000E9  1142 _P6_1	=	0x00e9
                           0000EA  1143 G$P6_2$0$0 == 0x00ea
                           0000EA  1144 _P6_2	=	0x00ea
                           0000EB  1145 G$P6_3$0$0 == 0x00eb
                           0000EB  1146 _P6_3	=	0x00eb
                           0000EC  1147 G$P6_4$0$0 == 0x00ec
                           0000EC  1148 _P6_4	=	0x00ec
                           0000ED  1149 G$P6_5$0$0 == 0x00ed
                           0000ED  1150 _P6_5	=	0x00ed
                           0000EE  1151 G$P6_6$0$0 == 0x00ee
                           0000EE  1152 _P6_6	=	0x00ee
                           0000EF  1153 G$P6_7$0$0 == 0x00ef
                           0000EF  1154 _P6_7	=	0x00ef
                           0000F8  1155 G$SPIEN$0$0 == 0x00f8
                           0000F8  1156 _SPIEN	=	0x00f8
                           0000F9  1157 G$TXBMT$0$0 == 0x00f9
                           0000F9  1158 _TXBMT	=	0x00f9
                           0000FA  1159 G$NSSMD0$0$0 == 0x00fa
                           0000FA  1160 _NSSMD0	=	0x00fa
                           0000FB  1161 G$NSSMD1$0$0 == 0x00fb
                           0000FB  1162 _NSSMD1	=	0x00fb
                           0000FC  1163 G$RXOVRN$0$0 == 0x00fc
                           0000FC  1164 _RXOVRN	=	0x00fc
                           0000FD  1165 G$MODF$0$0 == 0x00fd
                           0000FD  1166 _MODF	=	0x00fd
                           0000FE  1167 G$WCOL$0$0 == 0x00fe
                           0000FE  1168 _WCOL	=	0x00fe
                           0000FF  1169 G$SPIF$0$0 == 0x00ff
                           0000FF  1170 _SPIF	=	0x00ff
                           0000F8  1171 G$P7_0$0$0 == 0x00f8
                           0000F8  1172 _P7_0	=	0x00f8
                           0000F9  1173 G$P7_1$0$0 == 0x00f9
                           0000F9  1174 _P7_1	=	0x00f9
                           0000FA  1175 G$P7_2$0$0 == 0x00fa
                           0000FA  1176 _P7_2	=	0x00fa
                           0000FB  1177 G$P7_3$0$0 == 0x00fb
                           0000FB  1178 _P7_3	=	0x00fb
                           0000FC  1179 G$P7_4$0$0 == 0x00fc
                           0000FC  1180 _P7_4	=	0x00fc
                           0000FD  1181 G$P7_5$0$0 == 0x00fd
                           0000FD  1182 _P7_5	=	0x00fd
                           0000FE  1183 G$P7_6$0$0 == 0x00fe
                           0000FE  1184 _P7_6	=	0x00fe
                           0000FF  1185 G$P7_7$0$0 == 0x00ff
                           0000FF  1186 _P7_7	=	0x00ff
                                   1187 ;--------------------------------------------------------
                                   1188 ; overlayable register banks
                                   1189 ;--------------------------------------------------------
                                   1190 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                       1191 	.ds 8
                                   1192 ;--------------------------------------------------------
                                   1193 ; overlayable bit register bank
                                   1194 ;--------------------------------------------------------
                                   1195 	.area BIT_BANK	(REL,OVR,DATA)
      000000                       1196 bits:
      000000                       1197 	.ds 1
                           008000  1198 	b0 = bits[0]
                           008100  1199 	b1 = bits[1]
                           008200  1200 	b2 = bits[2]
                           008300  1201 	b3 = bits[3]
                           008400  1202 	b4 = bits[4]
                           008500  1203 	b5 = bits[5]
                           008600  1204 	b6 = bits[6]
                           008700  1205 	b7 = bits[7]
                                   1206 ;--------------------------------------------------------
                                   1207 ; internal ram data
                                   1208 ;--------------------------------------------------------
                                   1209 	.area DSEG    (DATA)
                           000000  1210 G$vH$0$0==.
      000000                       1211 _vH::
      000000                       1212 	.ds 3
                           000003  1213 G$vL$0$0==.
      000003                       1214 _vL::
      000003                       1215 	.ds 3
                           000006  1216 G$voltage$0$0==.
      000006                       1217 _voltage::
      000006                       1218 	.ds 2
                           000008  1219 G$voltages$0$0==.
      000008                       1220 _voltages::
      000008                       1221 	.ds 32
                           000028  1222 G$index$0$0==.
      000028                       1223 _index::
      000028                       1224 	.ds 1
                           000029  1225 G$average$0$0==.
      000029                       1226 _average::
      000029                       1227 	.ds 2
                           00002B  1228 Lmain.ADC_ISR$vActual$1$38==.
      00002B                       1229 _ADC_ISR_vActual_1_38:
      00002B                       1230 	.ds 4
                                   1231 ;--------------------------------------------------------
                                   1232 ; overlayable items in internal ram 
                                   1233 ;--------------------------------------------------------
                                   1234 	.area	OSEG    (OVR,DATA)
                                   1235 	.area	OSEG    (OVR,DATA)
                                   1236 	.area	OSEG    (OVR,DATA)
                                   1237 	.area	OSEG    (OVR,DATA)
                                   1238 	.area	OSEG    (OVR,DATA)
                                   1239 	.area	OSEG    (OVR,DATA)
                                   1240 ;--------------------------------------------------------
                                   1241 ; Stack segment in internal ram 
                                   1242 ;--------------------------------------------------------
                                   1243 	.area	SSEG
      000000                       1244 __start__stack:
      000000                       1245 	.ds	1
                                   1246 
                                   1247 ;--------------------------------------------------------
                                   1248 ; indirectly addressable internal ram data
                                   1249 ;--------------------------------------------------------
                                   1250 	.area ISEG    (DATA)
                                   1251 ;--------------------------------------------------------
                                   1252 ; absolute internal ram data
                                   1253 ;--------------------------------------------------------
                                   1254 	.area IABS    (ABS,DATA)
                                   1255 	.area IABS    (ABS,DATA)
                                   1256 ;--------------------------------------------------------
                                   1257 ; bit data
                                   1258 ;--------------------------------------------------------
                                   1259 	.area BSEG    (BIT)
                                   1260 ;--------------------------------------------------------
                                   1261 ; paged external ram data
                                   1262 ;--------------------------------------------------------
                                   1263 	.area PSEG    (PAG,XDATA)
                                   1264 ;--------------------------------------------------------
                                   1265 ; external ram data
                                   1266 ;--------------------------------------------------------
                                   1267 	.area XSEG    (XDATA)
                                   1268 ;--------------------------------------------------------
                                   1269 ; absolute external ram data
                                   1270 ;--------------------------------------------------------
                                   1271 	.area XABS    (ABS,XDATA)
                                   1272 ;--------------------------------------------------------
                                   1273 ; external initialized ram data
                                   1274 ;--------------------------------------------------------
                                   1275 	.area XISEG   (XDATA)
                                   1276 	.area HOME    (CODE)
                                   1277 	.area GSINIT0 (CODE)
                                   1278 	.area GSINIT1 (CODE)
                                   1279 	.area GSINIT2 (CODE)
                                   1280 	.area GSINIT3 (CODE)
                                   1281 	.area GSINIT4 (CODE)
                                   1282 	.area GSINIT5 (CODE)
                                   1283 	.area GSINIT  (CODE)
                                   1284 	.area GSFINAL (CODE)
                                   1285 	.area CSEG    (CODE)
                                   1286 ;--------------------------------------------------------
                                   1287 ; interrupt vector 
                                   1288 ;--------------------------------------------------------
                                   1289 	.area HOME    (CODE)
      000000                       1290 __interrupt_vect:
      000000 02r00r00         [24] 1291 	ljmp	__sdcc_gsinit_startup
      000003 32               [24] 1292 	reti
      000004                       1293 	.ds	7
      00000B 32               [24] 1294 	reti
      00000C                       1295 	.ds	7
      000013 32               [24] 1296 	reti
      000014                       1297 	.ds	7
      00001B 32               [24] 1298 	reti
      00001C                       1299 	.ds	7
      000023 32               [24] 1300 	reti
      000024                       1301 	.ds	7
      00002B 32               [24] 1302 	reti
      00002C                       1303 	.ds	7
      000033 32               [24] 1304 	reti
      000034                       1305 	.ds	7
      00003B 32               [24] 1306 	reti
      00003C                       1307 	.ds	7
      000043 32               [24] 1308 	reti
      000044                       1309 	.ds	7
      00004B 32               [24] 1310 	reti
      00004C                       1311 	.ds	7
      000053 32               [24] 1312 	reti
      000054                       1313 	.ds	7
      00005B 32               [24] 1314 	reti
      00005C                       1315 	.ds	7
      000063 32               [24] 1316 	reti
      000064                       1317 	.ds	7
      00006B 32               [24] 1318 	reti
      00006C                       1319 	.ds	7
      000073 32               [24] 1320 	reti
      000074                       1321 	.ds	7
      00007B 02r00rA6         [24] 1322 	ljmp	_ADC_ISR
                                   1323 ;--------------------------------------------------------
                                   1324 ; global & static initialisations
                                   1325 ;--------------------------------------------------------
                                   1326 	.area HOME    (CODE)
                                   1327 	.area GSINIT  (CODE)
                                   1328 	.area GSFINAL (CODE)
                                   1329 	.area GSINIT  (CODE)
                                   1330 	.globl __sdcc_gsinit_startup
                                   1331 	.globl __sdcc_program_startup
                                   1332 	.globl __start__stack
                                   1333 	.globl __mcs51_genXINIT
                                   1334 	.globl __mcs51_genXRAMCLEAR
                                   1335 	.globl __mcs51_genRAMCLEAR
                                   1336 	.area GSFINAL (CODE)
      000000 02r00r7E         [24] 1337 	ljmp	__sdcc_program_startup
                                   1338 ;--------------------------------------------------------
                                   1339 ; Home
                                   1340 ;--------------------------------------------------------
                                   1341 	.area HOME    (CODE)
                                   1342 	.area HOME    (CODE)
      00007E                       1343 __sdcc_program_startup:
      00007E 02r00r19         [24] 1344 	ljmp	_main
                                   1345 ;	return from main will return to caller
                                   1346 ;--------------------------------------------------------
                                   1347 ; code
                                   1348 ;--------------------------------------------------------
                                   1349 	.area CSEG    (CODE)
                                   1350 ;------------------------------------------------------------
                                   1351 ;Allocation info for local variables in function 'putchar'
                                   1352 ;------------------------------------------------------------
                                   1353 ;c                         Allocated to registers r7 
                                   1354 ;------------------------------------------------------------
                           000000  1355 	G$putchar$0$0 ==.
                           000000  1356 	C$putget.h$18$0$0 ==.
                                   1357 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\/putget.h:18: void putchar(char c)
                                   1358 ;	-----------------------------------------
                                   1359 ;	 function putchar
                                   1360 ;	-----------------------------------------
      000000                       1361 _putchar:
                           000007  1362 	ar7 = 0x07
                           000006  1363 	ar6 = 0x06
                           000005  1364 	ar5 = 0x05
                           000004  1365 	ar4 = 0x04
                           000003  1366 	ar3 = 0x03
                           000002  1367 	ar2 = 0x02
                           000001  1368 	ar1 = 0x01
                           000000  1369 	ar0 = 0x00
      000000 AF 82            [24] 1370 	mov	r7,dpl
                           000002  1371 	C$putget.h$20$1$22 ==.
                                   1372 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\/putget.h:20: while(!TI0); 
      000002                       1373 00101$:
                           000002  1374 	C$putget.h$21$1$22 ==.
                                   1375 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\/putget.h:21: TI0=0;
      000002 10 99 02         [24] 1376 	jbc	_TI0,00112$
      000005 80 FB            [24] 1377 	sjmp	00101$
      000007                       1378 00112$:
                           000007  1379 	C$putget.h$22$1$22 ==.
                                   1380 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\/putget.h:22: SBUF0 = c;
      000007 8F 99            [24] 1381 	mov	_SBUF0,r7
                           000009  1382 	C$putget.h$23$1$22 ==.
                           000009  1383 	XG$putchar$0$0 ==.
      000009 22               [24] 1384 	ret
                                   1385 ;------------------------------------------------------------
                                   1386 ;Allocation info for local variables in function 'getchar'
                                   1387 ;------------------------------------------------------------
                                   1388 ;c                         Allocated to registers 
                                   1389 ;------------------------------------------------------------
                           00000A  1390 	G$getchar$0$0 ==.
                           00000A  1391 	C$putget.h$28$1$22 ==.
                                   1392 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\/putget.h:28: char getchar(void)
                                   1393 ;	-----------------------------------------
                                   1394 ;	 function getchar
                                   1395 ;	-----------------------------------------
      00000A                       1396 _getchar:
                           00000A  1397 	C$putget.h$31$1$24 ==.
                                   1398 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\/putget.h:31: while(!RI0);
      00000A                       1399 00101$:
                           00000A  1400 	C$putget.h$32$1$24 ==.
                                   1401 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\/putget.h:32: RI0 =0;
      00000A 10 98 02         [24] 1402 	jbc	_RI0,00112$
      00000D 80 FB            [24] 1403 	sjmp	00101$
      00000F                       1404 00112$:
                           00000F  1405 	C$putget.h$33$1$24 ==.
                                   1406 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\/putget.h:33: c = SBUF0;
      00000F 85 99 82         [24] 1407 	mov	dpl,_SBUF0
                           000012  1408 	C$putget.h$35$1$24 ==.
                                   1409 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\/putget.h:35: putchar(c);    // echo to terminal
      000012 12r00r00         [24] 1410 	lcall	_putchar
                           000015  1411 	C$putget.h$36$1$24 ==.
                                   1412 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\/putget.h:36: return SBUF0;
      000015 85 99 82         [24] 1413 	mov	dpl,_SBUF0
                           000018  1414 	C$putget.h$37$1$24 ==.
                           000018  1415 	XG$getchar$0$0 ==.
      000018 22               [24] 1416 	ret
                                   1417 ;------------------------------------------------------------
                                   1418 ;Allocation info for local variables in function 'main'
                                   1419 ;------------------------------------------------------------
                                   1420 ;i                         Allocated to registers 
                                   1421 ;------------------------------------------------------------
                           000019  1422 	G$main$0$0 ==.
                           000019  1423 	C$main.c$35$1$24 ==.
                                   1424 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:35: void main (void)
                                   1425 ;	-----------------------------------------
                                   1426 ;	 function main
                                   1427 ;	-----------------------------------------
      000019                       1428 _main:
                           000019  1429 	C$main.c$40$1$32 ==.
                                   1430 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:40: SFRPAGE = CONFIG_PAGE;
      000019 75 84 0F         [24] 1431 	mov	_SFRPAGE,#0x0F
                           00001C  1432 	C$main.c$42$1$32 ==.
                                   1433 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:42: PORT_INIT();                // Configure the Crossbar and GPIO.
      00001C 12r03r00         [24] 1434 	lcall	_PORT_INIT
                           00001F  1435 	C$main.c$43$1$32 ==.
                                   1436 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:43: SYSCLK_INIT();              // Initialize the oscillator.
      00001F 12r03r25         [24] 1437 	lcall	_SYSCLK_INIT
                           000022  1438 	C$main.c$44$1$32 ==.
                                   1439 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:44: UART0_INIT();  
      000022 12r03r8F         [24] 1440 	lcall	_UART0_INIT
                           000025  1441 	C$main.c$45$1$32 ==.
                                   1442 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:45: ADC_INIT();    
      000025 12r03rB7         [24] 1443 	lcall	_ADC_INIT
                           000028  1444 	C$main.c$47$1$32 ==.
                                   1445 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:47: SFRPAGE = LEGACY_PAGE;
      000028 75 84 00         [24] 1446 	mov	_SFRPAGE,#0x00
                           00002B  1447 	C$main.c$48$1$32 ==.
                                   1448 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:48: IT0     = 1;                // /INT0 is active low triggered.
      00002B D2 88            [12] 1449 	setb	_IT0
                           00002D  1450 	C$main.c$50$1$32 ==.
                                   1451 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:50: SFRPAGE = UART0_PAGE;       // Direct the output to UART0
      00002D 75 84 00         [24] 1452 	mov	_SFRPAGE,#0x00
                           000030  1453 	C$main.c$53$1$32 ==.
                                   1454 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:53: printf("\033[2J\033[r");
      000030 74r00            [12] 1455 	mov	a,#___str_0
      000032 C0 E0            [24] 1456 	push	acc
      000034 74s00            [12] 1457 	mov	a,#(___str_0 >> 8)
      000036 C0 E0            [24] 1458 	push	acc
      000038 74 80            [12] 1459 	mov	a,#0x80
      00003A C0 E0            [24] 1460 	push	acc
      00003C 12r00r00         [24] 1461 	lcall	_printf
      00003F 15 81            [12] 1462 	dec	sp
      000041 15 81            [12] 1463 	dec	sp
      000043 15 81            [12] 1464 	dec	sp
                           000045  1465 	C$main.c$54$1$32 ==.
                                   1466 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:54: printf("Hallo Vietnaaaam\n\r");
      000045 74r08            [12] 1467 	mov	a,#___str_1
      000047 C0 E0            [24] 1468 	push	acc
      000049 74s00            [12] 1469 	mov	a,#(___str_1 >> 8)
      00004B C0 E0            [24] 1470 	push	acc
      00004D 74 80            [12] 1471 	mov	a,#0x80
      00004F C0 E0            [24] 1472 	push	acc
      000051 12r00r00         [24] 1473 	lcall	_printf
      000054 15 81            [12] 1474 	dec	sp
      000056 15 81            [12] 1475 	dec	sp
      000058 15 81            [12] 1476 	dec	sp
                           00005A  1477 	C$main.c$56$1$32 ==.
                                   1478 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:56: vL = (unsigned char*) &voltage;
      00005A 75*03r06         [24] 1479 	mov	_vL,#_voltage
      00005D 75*04 00         [24] 1480 	mov	(_vL + 1),#0x00
      000060 75*05 40         [24] 1481 	mov	(_vL + 2),#0x40
                           000063  1482 	C$main.c$57$1$32 ==.
                                   1483 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:57: vH = ((unsigned char*) &voltage) + 1;
      000063 74 01            [12] 1484 	mov	a,#0x01
      000065 24r06            [12] 1485 	add	a,#_voltage
      000067 F5*00            [12] 1486 	mov	_vH,a
      000069 E4               [12] 1487 	clr	a
      00006A 34s00            [12] 1488 	addc	a,#(_voltage >> 8)
      00006C F5*01            [12] 1489 	mov	(_vH + 1),a
      00006E 75*02 40         [24] 1490 	mov	(_vH + 2),#0x40
                           000071  1491 	C$main.c$59$1$32 ==.
                                   1492 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:59: voltage = 0;
      000071 E4               [12] 1493 	clr	a
      000072 F5*06            [12] 1494 	mov	_voltage,a
      000074 F5*07            [12] 1495 	mov	(_voltage + 1),a
                           000076  1496 	C$main.c$60$1$32 ==.
                                   1497 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:60: index = 0;
                                   1498 ;	1-genFromRTrack replaced	mov	_index,#0x00
      000076 F5*28            [12] 1499 	mov	_index,a
                           000078  1500 	C$main.c$61$1$32 ==.
                                   1501 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:61: for(i=0; i<16; i++) voltages[index] = 0;
      000078 7F 10            [12] 1502 	mov	r7,#0x10
      00007A                       1503 00109$:
      00007A E5*28            [12] 1504 	mov	a,_index
      00007C 25*28            [12] 1505 	add	a,_index
      00007E FE               [12] 1506 	mov	r6,a
      00007F 24r08            [12] 1507 	add	a,#_voltages
      000081 F8               [12] 1508 	mov	r0,a
      000082 76 00            [12] 1509 	mov	@r0,#0x00
      000084 08               [12] 1510 	inc	r0
      000085 76 00            [12] 1511 	mov	@r0,#0x00
      000087 DF F1            [24] 1512 	djnz	r7,00109$
                           000089  1513 	C$main.c$62$1$32 ==.
                                   1514 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:62: average = 0;
      000089 E4               [12] 1515 	clr	a
      00008A F5*29            [12] 1516 	mov	_average,a
      00008C F5*2A            [12] 1517 	mov	(_average + 1),a
                           00008E  1518 	C$main.c$64$1$32 ==.
                                   1519 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:64: while (1)                  
      00008E                       1520 00105$:
                           00008E  1521 	C$main.c$66$2$33 ==.
                                   1522 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:66: if(loop()) return;
      00008E 12r00r96         [24] 1523 	lcall	_loop
      000091 E5 82            [12] 1524 	mov	a,dpl
      000093 60 F9            [24] 1525 	jz	00105$
                           000095  1526 	C$main.c$69$1$32 ==.
                           000095  1527 	XG$main$0$0 ==.
      000095 22               [24] 1528 	ret
                                   1529 ;------------------------------------------------------------
                                   1530 ;Allocation info for local variables in function 'loop'
                                   1531 ;------------------------------------------------------------
                                   1532 ;vActual                   Allocated with name '_loop_vActual_1_35'
                                   1533 ;i                         Allocated with name '_loop_i_1_35'
                                   1534 ;------------------------------------------------------------
                           000096  1535 	G$loop$0$0 ==.
                           000096  1536 	C$main.c$71$1$32 ==.
                                   1537 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:71: char loop(void){
                                   1538 ;	-----------------------------------------
                                   1539 ;	 function loop
                                   1540 ;	-----------------------------------------
      000096                       1541 _loop:
                           000096  1542 	C$main.c$75$1$35 ==.
                                   1543 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:75: SFRPAGE = ADC0_PAGE;
      000096 75 84 00         [24] 1544 	mov	_SFRPAGE,#0x00
                           000099  1545 	C$main.c$77$1$35 ==.
                                   1546 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:77: if(!(P1 & 0x01)) {
      000099 E5 90            [12] 1547 	mov	a,_P1
      00009B 20 E0 04         [24] 1548 	jb	acc.0,00102$
                           00009E  1549 	C$main.c$78$2$36 ==.
                                   1550 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:78: AD0BUSY = 1;
      00009E D2 EC            [12] 1551 	setb	_AD0BUSY
                           0000A0  1552 	C$main.c$79$2$36 ==.
                                   1553 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:79: AD0INT = 0; 
      0000A0 C2 ED            [12] 1554 	clr	_AD0INT
      0000A2                       1555 00102$:
                           0000A2  1556 	C$main.c$82$1$35 ==.
                                   1557 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:82: return 0;
      0000A2 75 82 00         [24] 1558 	mov	dpl,#0x00
                           0000A5  1559 	C$main.c$83$1$35 ==.
                           0000A5  1560 	XG$loop$0$0 ==.
      0000A5 22               [24] 1561 	ret
                                   1562 ;------------------------------------------------------------
                                   1563 ;Allocation info for local variables in function 'ADC_ISR'
                                   1564 ;------------------------------------------------------------
                                   1565 ;vActual                   Allocated with name '_ADC_ISR_vActual_1_38'
                                   1566 ;i                         Allocated to registers r7 
                                   1567 ;------------------------------------------------------------
                           0000A6  1568 	G$ADC_ISR$0$0 ==.
                           0000A6  1569 	C$main.c$85$1$35 ==.
                                   1570 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:85: void ADC_ISR(void) __interrupt 15{
                                   1571 ;	-----------------------------------------
                                   1572 ;	 function ADC_ISR
                                   1573 ;	-----------------------------------------
      0000A6                       1574 _ADC_ISR:
      0000A6 C0*00            [24] 1575 	push	bits
      0000A8 C0 E0            [24] 1576 	push	acc
      0000AA C0 F0            [24] 1577 	push	b
      0000AC C0 82            [24] 1578 	push	dpl
      0000AE C0 83            [24] 1579 	push	dph
      0000B0 C0 07            [24] 1580 	push	(0+7)
      0000B2 C0 06            [24] 1581 	push	(0+6)
      0000B4 C0 05            [24] 1582 	push	(0+5)
      0000B6 C0 04            [24] 1583 	push	(0+4)
      0000B8 C0 03            [24] 1584 	push	(0+3)
      0000BA C0 02            [24] 1585 	push	(0+2)
      0000BC C0 01            [24] 1586 	push	(0+1)
      0000BE C0 00            [24] 1587 	push	(0+0)
      0000C0 C0 D0            [24] 1588 	push	psw
      0000C2 75 D0 00         [24] 1589 	mov	psw,#0x00
                           0000C5  1590 	C$main.c$89$1$38 ==.
                                   1591 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:89: SFRPAGE = ADC0_PAGE;
      0000C5 75 84 00         [24] 1592 	mov	_SFRPAGE,#0x00
                           0000C8  1593 	C$main.c$91$1$38 ==.
                                   1594 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:91: *vL = ADC0L;
      0000C8 AD*03            [24] 1595 	mov	r5,_vL
      0000CA AE*04            [24] 1596 	mov	r6,(_vL + 1)
      0000CC AF*05            [24] 1597 	mov	r7,(_vL + 2)
      0000CE 8D 82            [24] 1598 	mov	dpl,r5
      0000D0 8E 83            [24] 1599 	mov	dph,r6
      0000D2 8F F0            [24] 1600 	mov	b,r7
      0000D4 E5 BE            [12] 1601 	mov	a,_ADC0L
      0000D6 12r00r00         [24] 1602 	lcall	__gptrput
                           0000D9  1603 	C$main.c$92$1$38 ==.
                                   1604 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:92: *vH = ADC0H;
      0000D9 AD*00            [24] 1605 	mov	r5,_vH
      0000DB AE*01            [24] 1606 	mov	r6,(_vH + 1)
      0000DD AF*02            [24] 1607 	mov	r7,(_vH + 2)
      0000DF 8D 82            [24] 1608 	mov	dpl,r5
      0000E1 8E 83            [24] 1609 	mov	dph,r6
      0000E3 8F F0            [24] 1610 	mov	b,r7
      0000E5 E5 BF            [12] 1611 	mov	a,_ADC0H
      0000E7 12r00r00         [24] 1612 	lcall	__gptrput
                           0000EA  1613 	C$main.c$94$1$38 ==.
                                   1614 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:94: AD0INT = 0;
      0000EA C2 ED            [12] 1615 	clr	_AD0INT
                           0000EC  1616 	C$main.c$96$1$38 ==.
                                   1617 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:96: voltages[index] = voltage;
      0000EC E5*28            [12] 1618 	mov	a,_index
      0000EE 25*28            [12] 1619 	add	a,_index
      0000F0 24r08            [12] 1620 	add	a,#_voltages
      0000F2 F8               [12] 1621 	mov	r0,a
      0000F3 A6*06            [24] 1622 	mov	@r0,_voltage
      0000F5 08               [12] 1623 	inc	r0
      0000F6 A6*07            [24] 1624 	mov	@r0,(_voltage + 1)
                           0000F8  1625 	C$main.c$98$1$38 ==.
                                   1626 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:98: average = 0;
                           0000F8  1627 	C$main.c$99$1$38 ==.
                                   1628 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:99: for(i=0; i<16; i++) average += voltages[i];
      0000F8 E4               [12] 1629 	clr	a
      0000F9 F5*29            [12] 1630 	mov	_average,a
      0000FB F5*2A            [12] 1631 	mov	(_average + 1),a
      0000FD FF               [12] 1632 	mov	r7,a
      0000FE                       1633 00105$:
      0000FE EF               [12] 1634 	mov	a,r7
      0000FF 2F               [12] 1635 	add	a,r7
      000100 24r08            [12] 1636 	add	a,#_voltages
      000102 F9               [12] 1637 	mov	r1,a
      000103 87 05            [24] 1638 	mov	ar5,@r1
      000105 09               [12] 1639 	inc	r1
      000106 87 06            [24] 1640 	mov	ar6,@r1
      000108 19               [12] 1641 	dec	r1
      000109 ED               [12] 1642 	mov	a,r5
      00010A 25*29            [12] 1643 	add	a,_average
      00010C F5*29            [12] 1644 	mov	_average,a
      00010E EE               [12] 1645 	mov	a,r6
      00010F 35*2A            [12] 1646 	addc	a,(_average + 1)
      000111 F5*2A            [12] 1647 	mov	(_average + 1),a
      000113 0F               [12] 1648 	inc	r7
      000114 C3               [12] 1649 	clr	c
      000115 EF               [12] 1650 	mov	a,r7
      000116 64 80            [12] 1651 	xrl	a,#0x80
      000118 94 90            [12] 1652 	subb	a,#0x90
      00011A 40 E2            [24] 1653 	jc	00105$
                           00011C  1654 	C$main.c$100$1$38 ==.
                                   1655 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:100: average /= 16;
      00011C E5*2A            [12] 1656 	mov	a,(_average + 1)
      00011E C4               [12] 1657 	swap	a
      00011F C5*29            [12] 1658 	xch	a,_average
      000121 C4               [12] 1659 	swap	a
      000122 54 0F            [12] 1660 	anl	a,#0x0F
      000124 65*29            [12] 1661 	xrl	a,_average
      000126 C5*29            [12] 1662 	xch	a,_average
      000128 54 0F            [12] 1663 	anl	a,#0x0F
      00012A C5*29            [12] 1664 	xch	a,_average
      00012C 65*29            [12] 1665 	xrl	a,_average
      00012E C5*29            [12] 1666 	xch	a,_average
      000130 F5*2A            [12] 1667 	mov	(_average + 1),a
                           000132  1668 	C$main.c$102$1$38 ==.
                                   1669 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:102: index++;
      000132 05*28            [12] 1670 	inc	_index
                           000134  1671 	C$main.c$103$1$38 ==.
                                   1672 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:103: if(index > 16) index = 0;
      000134 E5*28            [12] 1673 	mov	a,_index
      000136 24 EF            [12] 1674 	add	a,#0xff - 0x10
      000138 50 03            [24] 1675 	jnc	00103$
      00013A 75*28 00         [24] 1676 	mov	_index,#0x00
      00013D                       1677 00103$:
                           00013D  1678 	C$main.c$105$1$38 ==.
                                   1679 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:105: SFRPAGE = UART0_PAGE;
      00013D 75 84 00         [24] 1680 	mov	_SFRPAGE,#0x00
                           000140  1681 	C$main.c$107$1$38 ==.
                                   1682 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:107: printf("\033[2J");
      000140 74r1B            [12] 1683 	mov	a,#___str_2
      000142 C0 E0            [24] 1684 	push	acc
      000144 74s00            [12] 1685 	mov	a,#(___str_2 >> 8)
      000146 C0 E0            [24] 1686 	push	acc
      000148 74 80            [12] 1687 	mov	a,#0x80
      00014A C0 E0            [24] 1688 	push	acc
      00014C 12r00r00         [24] 1689 	lcall	_printf
      00014F 15 81            [12] 1690 	dec	sp
      000151 15 81            [12] 1691 	dec	sp
      000153 15 81            [12] 1692 	dec	sp
                           000155  1693 	C$main.c$108$1$38 ==.
                                   1694 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:108: printf("Low byte:  0x%x\n\r", *vL);
      000155 AD*03            [24] 1695 	mov	r5,_vL
      000157 AE*04            [24] 1696 	mov	r6,(_vL + 1)
      000159 AF*05            [24] 1697 	mov	r7,(_vL + 2)
      00015B 8D 82            [24] 1698 	mov	dpl,r5
      00015D 8E 83            [24] 1699 	mov	dph,r6
      00015F 8F F0            [24] 1700 	mov	b,r7
      000161 12r00r00         [24] 1701 	lcall	__gptrget
      000164 FD               [12] 1702 	mov	r5,a
      000165 7F 00            [12] 1703 	mov	r7,#0x00
      000167 C0 05            [24] 1704 	push	ar5
      000169 C0 07            [24] 1705 	push	ar7
      00016B 74r20            [12] 1706 	mov	a,#___str_3
      00016D C0 E0            [24] 1707 	push	acc
      00016F 74s00            [12] 1708 	mov	a,#(___str_3 >> 8)
      000171 C0 E0            [24] 1709 	push	acc
      000173 74 80            [12] 1710 	mov	a,#0x80
      000175 C0 E0            [24] 1711 	push	acc
      000177 12r00r00         [24] 1712 	lcall	_printf
      00017A E5 81            [12] 1713 	mov	a,sp
      00017C 24 FB            [12] 1714 	add	a,#0xfb
      00017E F5 81            [12] 1715 	mov	sp,a
                           000180  1716 	C$main.c$109$1$38 ==.
                                   1717 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:109: printf("High byte: 0x%x\n\r", *vH);
      000180 AD*00            [24] 1718 	mov	r5,_vH
      000182 AE*01            [24] 1719 	mov	r6,(_vH + 1)
      000184 AF*02            [24] 1720 	mov	r7,(_vH + 2)
      000186 8D 82            [24] 1721 	mov	dpl,r5
      000188 8E 83            [24] 1722 	mov	dph,r6
      00018A 8F F0            [24] 1723 	mov	b,r7
      00018C 12r00r00         [24] 1724 	lcall	__gptrget
      00018F FD               [12] 1725 	mov	r5,a
      000190 7F 00            [12] 1726 	mov	r7,#0x00
      000192 C0 05            [24] 1727 	push	ar5
      000194 C0 07            [24] 1728 	push	ar7
      000196 74r32            [12] 1729 	mov	a,#___str_4
      000198 C0 E0            [24] 1730 	push	acc
      00019A 74s00            [12] 1731 	mov	a,#(___str_4 >> 8)
      00019C C0 E0            [24] 1732 	push	acc
      00019E 74 80            [12] 1733 	mov	a,#0x80
      0001A0 C0 E0            [24] 1734 	push	acc
      0001A2 12r00r00         [24] 1735 	lcall	_printf
      0001A5 E5 81            [12] 1736 	mov	a,sp
      0001A7 24 FB            [12] 1737 	add	a,#0xfb
      0001A9 F5 81            [12] 1738 	mov	sp,a
                           0001AB  1739 	C$main.c$110$1$38 ==.
                                   1740 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:110: printf("Average:   0x%x\n\r", average);
      0001AB C0*29            [24] 1741 	push	_average
      0001AD C0*2A            [24] 1742 	push	(_average + 1)
      0001AF 74r44            [12] 1743 	mov	a,#___str_5
      0001B1 C0 E0            [24] 1744 	push	acc
      0001B3 74s00            [12] 1745 	mov	a,#(___str_5 >> 8)
      0001B5 C0 E0            [24] 1746 	push	acc
      0001B7 74 80            [12] 1747 	mov	a,#0x80
      0001B9 C0 E0            [24] 1748 	push	acc
      0001BB 12r00r00         [24] 1749 	lcall	_printf
      0001BE E5 81            [12] 1750 	mov	a,sp
      0001C0 24 FB            [12] 1751 	add	a,#0xfb
      0001C2 F5 81            [12] 1752 	mov	sp,a
                           0001C4  1753 	C$main.c$111$1$38 ==.
                                   1754 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:111: vActual = average * 2.4 / 4096;
      0001C4 85*29 82         [24] 1755 	mov	dpl,_average
      0001C7 85*2A 83         [24] 1756 	mov	dph,(_average + 1)
      0001CA 12r00r00         [24] 1757 	lcall	___uint2fs
      0001CD AC 82            [24] 1758 	mov	r4,dpl
      0001CF AD 83            [24] 1759 	mov	r5,dph
      0001D1 AE F0            [24] 1760 	mov	r6,b
      0001D3 FF               [12] 1761 	mov	r7,a
      0001D4 C0 04            [24] 1762 	push	ar4
      0001D6 C0 05            [24] 1763 	push	ar5
      0001D8 C0 06            [24] 1764 	push	ar6
      0001DA C0 07            [24] 1765 	push	ar7
      0001DC 90 99 9A         [24] 1766 	mov	dptr,#0x999A
      0001DF 75 F0 19         [24] 1767 	mov	b,#0x19
      0001E2 74 40            [12] 1768 	mov	a,#0x40
      0001E4 12r00r00         [24] 1769 	lcall	___fsmul
      0001E7 AC 82            [24] 1770 	mov	r4,dpl
      0001E9 AD 83            [24] 1771 	mov	r5,dph
      0001EB AE F0            [24] 1772 	mov	r6,b
      0001ED FF               [12] 1773 	mov	r7,a
      0001EE E5 81            [12] 1774 	mov	a,sp
      0001F0 24 FC            [12] 1775 	add	a,#0xfc
      0001F2 F5 81            [12] 1776 	mov	sp,a
      0001F4 E4               [12] 1777 	clr	a
      0001F5 C0 E0            [24] 1778 	push	acc
      0001F7 C0 E0            [24] 1779 	push	acc
      0001F9 74 80            [12] 1780 	mov	a,#0x80
      0001FB C0 E0            [24] 1781 	push	acc
      0001FD 74 45            [12] 1782 	mov	a,#0x45
      0001FF C0 E0            [24] 1783 	push	acc
      000201 8C 82            [24] 1784 	mov	dpl,r4
      000203 8D 83            [24] 1785 	mov	dph,r5
      000205 8E F0            [24] 1786 	mov	b,r6
      000207 EF               [12] 1787 	mov	a,r7
      000208 12r00r00         [24] 1788 	lcall	___fsdiv
      00020B 85 82*2B         [24] 1789 	mov	_ADC_ISR_vActual_1_38,dpl
      00020E 85 83*2C         [24] 1790 	mov	(_ADC_ISR_vActual_1_38 + 1),dph
      000211 85 F0*2D         [24] 1791 	mov	(_ADC_ISR_vActual_1_38 + 2),b
      000214 F5*2E            [12] 1792 	mov	(_ADC_ISR_vActual_1_38 + 3),a
      000216 E5 81            [12] 1793 	mov	a,sp
      000218 24 FC            [12] 1794 	add	a,#0xfc
      00021A F5 81            [12] 1795 	mov	sp,a
                           00021C  1796 	C$main.c$112$1$38 ==.
                                   1797 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:112: printf("Voltage:   %d.", (unsigned int)vActual);
      00021C 85*2B 82         [24] 1798 	mov	dpl,_ADC_ISR_vActual_1_38
      00021F 85*2C 83         [24] 1799 	mov	dph,(_ADC_ISR_vActual_1_38 + 1)
      000222 85*2D F0         [24] 1800 	mov	b,(_ADC_ISR_vActual_1_38 + 2)
      000225 E5*2E            [12] 1801 	mov	a,(_ADC_ISR_vActual_1_38 + 3)
      000227 12r00r00         [24] 1802 	lcall	___fs2uint
      00022A AA 82            [24] 1803 	mov	r2,dpl
      00022C AB 83            [24] 1804 	mov	r3,dph
      00022E C0 02            [24] 1805 	push	ar2
      000230 C0 03            [24] 1806 	push	ar3
      000232 74r56            [12] 1807 	mov	a,#___str_6
      000234 C0 E0            [24] 1808 	push	acc
      000236 74s00            [12] 1809 	mov	a,#(___str_6 >> 8)
      000238 C0 E0            [24] 1810 	push	acc
      00023A 74 80            [12] 1811 	mov	a,#0x80
      00023C C0 E0            [24] 1812 	push	acc
      00023E 12r00r00         [24] 1813 	lcall	_printf
      000241 E5 81            [12] 1814 	mov	a,sp
      000243 24 FB            [12] 1815 	add	a,#0xfb
      000245 F5 81            [12] 1816 	mov	sp,a
                           000247  1817 	C$main.c$113$1$38 ==.
                                   1818 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:113: for(i=0; i<6; i++){
      000247 7B 00            [12] 1819 	mov	r3,#0x00
      000249                       1820 00107$:
                           000249  1821 	C$main.c$114$1$38 ==.
                                   1822 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:114: vActual = (vActual-((unsigned int)vActual)) * 10;
      000249 85*2B 82         [24] 1823 	mov	dpl,_ADC_ISR_vActual_1_38
      00024C 85*2C 83         [24] 1824 	mov	dph,(_ADC_ISR_vActual_1_38 + 1)
      00024F 85*2D F0         [24] 1825 	mov	b,(_ADC_ISR_vActual_1_38 + 2)
      000252 E5*2E            [12] 1826 	mov	a,(_ADC_ISR_vActual_1_38 + 3)
      000254 C0 03            [24] 1827 	push	ar3
      000256 12r00r00         [24] 1828 	lcall	___fs2uint
      000259 12r00r00         [24] 1829 	lcall	___uint2fs
      00025C AA 82            [24] 1830 	mov	r2,dpl
      00025E AD 83            [24] 1831 	mov	r5,dph
      000260 AE F0            [24] 1832 	mov	r6,b
      000262 FF               [12] 1833 	mov	r7,a
      000263 C0 02            [24] 1834 	push	ar2
      000265 C0 05            [24] 1835 	push	ar5
      000267 C0 06            [24] 1836 	push	ar6
      000269 C0 07            [24] 1837 	push	ar7
      00026B 85*2B 82         [24] 1838 	mov	dpl,_ADC_ISR_vActual_1_38
      00026E 85*2C 83         [24] 1839 	mov	dph,(_ADC_ISR_vActual_1_38 + 1)
      000271 85*2D F0         [24] 1840 	mov	b,(_ADC_ISR_vActual_1_38 + 2)
      000274 E5*2E            [12] 1841 	mov	a,(_ADC_ISR_vActual_1_38 + 3)
      000276 12r00r00         [24] 1842 	lcall	___fssub
      000279 AC 82            [24] 1843 	mov	r4,dpl
      00027B AD 83            [24] 1844 	mov	r5,dph
      00027D AE F0            [24] 1845 	mov	r6,b
      00027F FF               [12] 1846 	mov	r7,a
      000280 E5 81            [12] 1847 	mov	a,sp
      000282 24 FC            [12] 1848 	add	a,#0xfc
      000284 F5 81            [12] 1849 	mov	sp,a
      000286 C0 04            [24] 1850 	push	ar4
      000288 C0 05            [24] 1851 	push	ar5
      00028A C0 06            [24] 1852 	push	ar6
      00028C C0 07            [24] 1853 	push	ar7
      00028E 90 00 00         [24] 1854 	mov	dptr,#0x0000
      000291 75 F0 20         [24] 1855 	mov	b,#0x20
      000294 74 41            [12] 1856 	mov	a,#0x41
      000296 12r00r00         [24] 1857 	lcall	___fsmul
      000299 85 82*2B         [24] 1858 	mov	_ADC_ISR_vActual_1_38,dpl
      00029C 85 83*2C         [24] 1859 	mov	(_ADC_ISR_vActual_1_38 + 1),dph
      00029F 85 F0*2D         [24] 1860 	mov	(_ADC_ISR_vActual_1_38 + 2),b
      0002A2 F5*2E            [12] 1861 	mov	(_ADC_ISR_vActual_1_38 + 3),a
      0002A4 E5 81            [12] 1862 	mov	a,sp
      0002A6 24 FC            [12] 1863 	add	a,#0xfc
      0002A8 F5 81            [12] 1864 	mov	sp,a
                           0002AA  1865 	C$main.c$115$1$38 ==.
                                   1866 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:115: printf("%d", (unsigned int)vActual);
      0002AA 85*2B 82         [24] 1867 	mov	dpl,_ADC_ISR_vActual_1_38
      0002AD 85*2C 83         [24] 1868 	mov	dph,(_ADC_ISR_vActual_1_38 + 1)
      0002B0 85*2D F0         [24] 1869 	mov	b,(_ADC_ISR_vActual_1_38 + 2)
      0002B3 E5*2E            [12] 1870 	mov	a,(_ADC_ISR_vActual_1_38 + 3)
      0002B5 12r00r00         [24] 1871 	lcall	___fs2uint
      0002B8 AE 82            [24] 1872 	mov	r6,dpl
      0002BA AF 83            [24] 1873 	mov	r7,dph
      0002BC C0 06            [24] 1874 	push	ar6
      0002BE C0 07            [24] 1875 	push	ar7
      0002C0 74r65            [12] 1876 	mov	a,#___str_7
      0002C2 C0 E0            [24] 1877 	push	acc
      0002C4 74s00            [12] 1878 	mov	a,#(___str_7 >> 8)
      0002C6 C0 E0            [24] 1879 	push	acc
      0002C8 74 80            [12] 1880 	mov	a,#0x80
      0002CA C0 E0            [24] 1881 	push	acc
      0002CC 12r00r00         [24] 1882 	lcall	_printf
      0002CF E5 81            [12] 1883 	mov	a,sp
      0002D1 24 FB            [12] 1884 	add	a,#0xfb
      0002D3 F5 81            [12] 1885 	mov	sp,a
      0002D5 D0 03            [24] 1886 	pop	ar3
                           0002D7  1887 	C$main.c$113$1$38 ==.
                                   1888 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:113: for(i=0; i<6; i++){
      0002D7 0B               [12] 1889 	inc	r3
      0002D8 C3               [12] 1890 	clr	c
      0002D9 EB               [12] 1891 	mov	a,r3
      0002DA 64 80            [12] 1892 	xrl	a,#0x80
      0002DC 94 86            [12] 1893 	subb	a,#0x86
      0002DE 50 03            [24] 1894 	jnc	00127$
      0002E0 02r02r49         [24] 1895 	ljmp	00107$
      0002E3                       1896 00127$:
      0002E3 D0 D0            [24] 1897 	pop	psw
      0002E5 D0 00            [24] 1898 	pop	(0+0)
      0002E7 D0 01            [24] 1899 	pop	(0+1)
      0002E9 D0 02            [24] 1900 	pop	(0+2)
      0002EB D0 03            [24] 1901 	pop	(0+3)
      0002ED D0 04            [24] 1902 	pop	(0+4)
      0002EF D0 05            [24] 1903 	pop	(0+5)
      0002F1 D0 06            [24] 1904 	pop	(0+6)
      0002F3 D0 07            [24] 1905 	pop	(0+7)
      0002F5 D0 83            [24] 1906 	pop	dph
      0002F7 D0 82            [24] 1907 	pop	dpl
      0002F9 D0 F0            [24] 1908 	pop	b
      0002FB D0 E0            [24] 1909 	pop	acc
      0002FD D0*00            [24] 1910 	pop	bits
                           0002FF  1911 	C$main.c$117$1$38 ==.
                           0002FF  1912 	XG$ADC_ISR$0$0 ==.
      0002FF 32               [24] 1913 	reti
                                   1914 ;------------------------------------------------------------
                                   1915 ;Allocation info for local variables in function 'PORT_INIT'
                                   1916 ;------------------------------------------------------------
                                   1917 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   1918 ;------------------------------------------------------------
                           000300  1919 	G$PORT_INIT$0$0 ==.
                           000300  1920 	C$main.c$125$1$38 ==.
                                   1921 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:125: void PORT_INIT(void)
                                   1922 ;	-----------------------------------------
                                   1923 ;	 function PORT_INIT
                                   1924 ;	-----------------------------------------
      000300                       1925 _PORT_INIT:
                           000300  1926 	C$main.c$129$1$41 ==.
                                   1927 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:129: SFRPAGE_SAVE = SFRPAGE;     // Save Current SFR page.
      000300 AF 84            [24] 1928 	mov	r7,_SFRPAGE
                           000302  1929 	C$main.c$131$1$41 ==.
                                   1930 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:131: SFRPAGE = CONFIG_PAGE;
      000302 75 84 0F         [24] 1931 	mov	_SFRPAGE,#0x0F
                           000305  1932 	C$main.c$132$1$41 ==.
                                   1933 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:132: WDTCN   = 0xDE;             // Disable watchdog timer.
      000305 75 FF DE         [24] 1934 	mov	_WDTCN,#0xDE
                           000308  1935 	C$main.c$133$1$41 ==.
                                   1936 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:133: WDTCN   = 0xAD;
      000308 75 FF AD         [24] 1937 	mov	_WDTCN,#0xAD
                           00030B  1938 	C$main.c$134$1$41 ==.
                                   1939 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:134: EA      = 1;                // Enable interrupts as selected.
      00030B D2 AF            [12] 1940 	setb	_EA
                           00030D  1941 	C$main.c$136$1$41 ==.
                                   1942 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:136: XBR0    = 0x04;             // Enable UART0.
      00030D 75 E1 04         [24] 1943 	mov	_XBR0,#0x04
                           000310  1944 	C$main.c$137$1$41 ==.
                                   1945 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:137: XBR1    = 0x00;             // /INT0 routed to port pin.
      000310 75 E2 00         [24] 1946 	mov	_XBR1,#0x00
                           000313  1947 	C$main.c$138$1$41 ==.
                                   1948 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:138: XBR2    = 0x40;             // Enable Crossbar and weak pull-ups.
      000313 75 E3 40         [24] 1949 	mov	_XBR2,#0x40
                           000316  1950 	C$main.c$140$1$41 ==.
                                   1951 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:140: P0MDOUT = 0x35;             
      000316 75 A4 35         [24] 1952 	mov	_P0MDOUT,#0x35
                           000319  1953 	C$main.c$141$1$41 ==.
                                   1954 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:141: P0      = 0x0A; 
      000319 75 80 0A         [24] 1955 	mov	_P0,#0x0A
                           00031C  1956 	C$main.c$143$1$41 ==.
                                   1957 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:143: P1MDOUT = 0x00;
      00031C 75 A5 00         [24] 1958 	mov	_P1MDOUT,#0x00
                           00031F  1959 	C$main.c$144$1$41 ==.
                                   1960 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:144: P1		= 0xFF;       
      00031F 75 90 FF         [24] 1961 	mov	_P1,#0xFF
                           000322  1962 	C$main.c$146$1$41 ==.
                                   1963 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:146: SFRPAGE = SFRPAGE_SAVE;     // Restore SFR page.
      000322 8F 84            [24] 1964 	mov	_SFRPAGE,r7
                           000324  1965 	C$main.c$147$1$41 ==.
                           000324  1966 	XG$PORT_INIT$0$0 ==.
      000324 22               [24] 1967 	ret
                                   1968 ;------------------------------------------------------------
                                   1969 ;Allocation info for local variables in function 'SYSCLK_INIT'
                                   1970 ;------------------------------------------------------------
                                   1971 ;i                         Allocated to registers r5 r6 
                                   1972 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   1973 ;------------------------------------------------------------
                           000325  1974 	G$SYSCLK_INIT$0$0 ==.
                           000325  1975 	C$main.c$155$1$41 ==.
                                   1976 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:155: void SYSCLK_INIT(void)
                                   1977 ;	-----------------------------------------
                                   1978 ;	 function SYSCLK_INIT
                                   1979 ;	-----------------------------------------
      000325                       1980 _SYSCLK_INIT:
                           000325  1981 	C$main.c$161$1$43 ==.
                                   1982 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:161: SFRPAGE_SAVE = SFRPAGE;     // Save Current SFR page.
      000325 AF 84            [24] 1983 	mov	r7,_SFRPAGE
                           000327  1984 	C$main.c$163$1$43 ==.
                                   1985 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:163: SFRPAGE = CONFIG_PAGE;
      000327 75 84 0F         [24] 1986 	mov	_SFRPAGE,#0x0F
                           00032A  1987 	C$main.c$164$1$43 ==.
                                   1988 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:164: OSCXCN  = 0x67;             // Start external oscillator
      00032A 75 8C 67         [24] 1989 	mov	_OSCXCN,#0x67
                           00032D  1990 	C$main.c$165$1$43 ==.
                                   1991 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:165: for(i=0; i < 256; i++);     // Wait for the oscillator to start up.
      00032D 7D 00            [12] 1992 	mov	r5,#0x00
      00032F 7E 01            [12] 1993 	mov	r6,#0x01
      000331                       1994 00111$:
      000331 1D               [12] 1995 	dec	r5
      000332 BD FF 01         [24] 1996 	cjne	r5,#0xFF,00141$
      000335 1E               [12] 1997 	dec	r6
      000336                       1998 00141$:
      000336 ED               [12] 1999 	mov	a,r5
      000337 4E               [12] 2000 	orl	a,r6
      000338 70 F7            [24] 2001 	jnz	00111$
                           00033A  2002 	C$main.c$166$1$43 ==.
                                   2003 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:166: while(!(OSCXCN & 0x80));    // Check to see if the Crystal Oscillator Valid Flag is set.
      00033A                       2004 00102$:
      00033A E5 8C            [12] 2005 	mov	a,_OSCXCN
      00033C 30 E7 FB         [24] 2006 	jnb	acc.7,00102$
                           00033F  2007 	C$main.c$167$1$43 ==.
                                   2008 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:167: CLKSEL  = 0x01;             // SYSCLK derived from the External Oscillator circuit.
      00033F 75 97 01         [24] 2009 	mov	_CLKSEL,#0x01
                           000342  2010 	C$main.c$168$1$43 ==.
                                   2011 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:168: OSCICN  = 0x00;             // Disable the internal oscillator.
      000342 75 8A 00         [24] 2012 	mov	_OSCICN,#0x00
                           000345  2013 	C$main.c$170$1$43 ==.
                                   2014 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:170: SFRPAGE = CONFIG_PAGE;
      000345 75 84 0F         [24] 2015 	mov	_SFRPAGE,#0x0F
                           000348  2016 	C$main.c$171$1$43 ==.
                                   2017 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:171: PLL0CN  = 0x04;
      000348 75 89 04         [24] 2018 	mov	_PLL0CN,#0x04
                           00034B  2019 	C$main.c$172$1$43 ==.
                                   2020 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:172: SFRPAGE = LEGACY_PAGE;
      00034B 75 84 00         [24] 2021 	mov	_SFRPAGE,#0x00
                           00034E  2022 	C$main.c$173$1$43 ==.
                                   2023 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:173: FLSCL   = 0x10;
      00034E 75 B7 10         [24] 2024 	mov	_FLSCL,#0x10
                           000351  2025 	C$main.c$174$1$43 ==.
                                   2026 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:174: SFRPAGE = CONFIG_PAGE;
      000351 75 84 0F         [24] 2027 	mov	_SFRPAGE,#0x0F
                           000354  2028 	C$main.c$175$1$43 ==.
                                   2029 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:175: PLL0CN |= 0x01;
      000354 43 89 01         [24] 2030 	orl	_PLL0CN,#0x01
                           000357  2031 	C$main.c$176$1$43 ==.
                                   2032 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:176: PLL0DIV = 0x04;
      000357 75 8D 04         [24] 2033 	mov	_PLL0DIV,#0x04
                           00035A  2034 	C$main.c$177$1$43 ==.
                                   2035 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:177: PLL0FLT = 0x01;
      00035A 75 8F 01         [24] 2036 	mov	_PLL0FLT,#0x01
                           00035D  2037 	C$main.c$178$1$43 ==.
                                   2038 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:178: PLL0MUL = 0x09;
      00035D 75 8E 09         [24] 2039 	mov	_PLL0MUL,#0x09
                           000360  2040 	C$main.c$179$1$43 ==.
                                   2041 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:179: for(i=0; i < 256; i++);
      000360 7D 00            [12] 2042 	mov	r5,#0x00
      000362 7E 01            [12] 2043 	mov	r6,#0x01
      000364                       2044 00114$:
      000364 1D               [12] 2045 	dec	r5
      000365 BD FF 01         [24] 2046 	cjne	r5,#0xFF,00144$
      000368 1E               [12] 2047 	dec	r6
      000369                       2048 00144$:
      000369 ED               [12] 2049 	mov	a,r5
      00036A 4E               [12] 2050 	orl	a,r6
      00036B 70 F7            [24] 2051 	jnz	00114$
                           00036D  2052 	C$main.c$180$1$43 ==.
                                   2053 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:180: PLL0CN |= 0x02;
      00036D 43 89 02         [24] 2054 	orl	_PLL0CN,#0x02
                           000370  2055 	C$main.c$181$1$43 ==.
                                   2056 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:181: while(!(PLL0CN & 0x10));
      000370                       2057 00106$:
      000370 E5 89            [12] 2058 	mov	a,_PLL0CN
      000372 30 E4 FB         [24] 2059 	jnb	acc.4,00106$
                           000375  2060 	C$main.c$182$1$43 ==.
                                   2061 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:182: CLKSEL  = 0x02;             // SYSCLK derived from the PLL.
      000375 75 97 02         [24] 2062 	mov	_CLKSEL,#0x02
                           000378  2063 	C$main.c$184$1$43 ==.
                                   2064 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:184: ET0 = 1;
      000378 D2 A9            [12] 2065 	setb	_ET0
                           00037A  2066 	C$main.c$185$1$43 ==.
                                   2067 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:185: CKCON |= 0x08;
      00037A 43 8E 08         [24] 2068 	orl	_CKCON,#0x08
                           00037D  2069 	C$main.c$187$1$43 ==.
                                   2070 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:187: SFRPAGE = TIMER01_PAGE;
      00037D 75 84 00         [24] 2071 	mov	_SFRPAGE,#0x00
                           000380  2072 	C$main.c$188$1$43 ==.
                                   2073 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:188: TMOD &= 0xFD;
      000380 53 89 FD         [24] 2074 	anl	_TMOD,#0xFD
                           000383  2075 	C$main.c$189$1$43 ==.
                                   2076 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:189: TMOD |= 0x01;
      000383 43 89 01         [24] 2077 	orl	_TMOD,#0x01
                           000386  2078 	C$main.c$191$1$43 ==.
                                   2079 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:191: TH0 = 0x0D;
      000386 75 8C 0D         [24] 2080 	mov	_TH0,#0x0D
                           000389  2081 	C$main.c$192$1$43 ==.
                                   2082 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:192: TL0 = 0x00;
      000389 75 8A 00         [24] 2083 	mov	_TL0,#0x00
                           00038C  2084 	C$main.c$194$1$43 ==.
                                   2085 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:194: SFRPAGE = SFRPAGE_SAVE;     // Restore SFR page.
      00038C 8F 84            [24] 2086 	mov	_SFRPAGE,r7
                           00038E  2087 	C$main.c$195$1$43 ==.
                           00038E  2088 	XG$SYSCLK_INIT$0$0 ==.
      00038E 22               [24] 2089 	ret
                                   2090 ;------------------------------------------------------------
                                   2091 ;Allocation info for local variables in function 'UART0_INIT'
                                   2092 ;------------------------------------------------------------
                                   2093 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   2094 ;------------------------------------------------------------
                           00038F  2095 	G$UART0_INIT$0$0 ==.
                           00038F  2096 	C$main.c$204$1$43 ==.
                                   2097 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:204: void UART0_INIT(void){
                                   2098 ;	-----------------------------------------
                                   2099 ;	 function UART0_INIT
                                   2100 ;	-----------------------------------------
      00038F                       2101 _UART0_INIT:
                           00038F  2102 	C$main.c$208$1$45 ==.
                                   2103 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:208: SFRPAGE_SAVE = SFRPAGE;
      00038F AF 84            [24] 2104 	mov	r7,_SFRPAGE
                           000391  2105 	C$main.c$210$1$45 ==.
                                   2106 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:210: SFRPAGE = TIMER01_PAGE;
      000391 75 84 00         [24] 2107 	mov	_SFRPAGE,#0x00
                           000394  2108 	C$main.c$211$1$45 ==.
                                   2109 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:211: TMOD   &= ~0xF0;
      000394 AE 89            [24] 2110 	mov	r6,_TMOD
      000396 74 0F            [12] 2111 	mov	a,#0x0F
      000398 5E               [12] 2112 	anl	a,r6
      000399 F5 89            [12] 2113 	mov	_TMOD,a
                           00039B  2114 	C$main.c$212$1$45 ==.
                                   2115 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:212: TMOD   |=  0x20;            // Timer1, Mode 2: 8-bit counter/timer with auto-reload.
      00039B 43 89 20         [24] 2116 	orl	_TMOD,#0x20
                           00039E  2117 	C$main.c$213$1$45 ==.
                                   2118 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:213: TH1     = (unsigned char)-(SYSCLK/BAUDRATE/16); // Set Timer1 reload value for baudrate
      00039E 75 8D E5         [24] 2119 	mov	_TH1,#0xE5
                           0003A1  2120 	C$main.c$214$1$45 ==.
                                   2121 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:214: CKCON  |= 0x10;             // Timer1 uses SYSCLK as time base.
      0003A1 43 8E 10         [24] 2122 	orl	_CKCON,#0x10
                           0003A4  2123 	C$main.c$215$1$45 ==.
                                   2124 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:215: TL1     = TH1;
      0003A4 85 8D 8B         [24] 2125 	mov	_TL1,_TH1
                           0003A7  2126 	C$main.c$216$1$45 ==.
                                   2127 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:216: TR1     = 1;                // Start Timer1.
      0003A7 D2 8E            [12] 2128 	setb	_TR1
                           0003A9  2129 	C$main.c$218$1$45 ==.
                                   2130 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:218: SFRPAGE = UART0_PAGE;
      0003A9 75 84 00         [24] 2131 	mov	_SFRPAGE,#0x00
                           0003AC  2132 	C$main.c$219$1$45 ==.
                                   2133 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:219: SCON0   = 0x50;             // Set Mode 1: 8-Bit UART
      0003AC 75 98 50         [24] 2134 	mov	_SCON0,#0x50
                           0003AF  2135 	C$main.c$220$1$45 ==.
                                   2136 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:220: SSTA0   = 0x10;             // UART0 baud rate divide-by-two disabled (SMOD0 = 1).
      0003AF 75 91 10         [24] 2137 	mov	_SSTA0,#0x10
                           0003B2  2138 	C$main.c$221$1$45 ==.
                                   2139 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:221: TI0     = 1; 
      0003B2 D2 99            [12] 2140 	setb	_TI0
                           0003B4  2141 	C$main.c$223$1$45 ==.
                                   2142 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:223: SFRPAGE = SFRPAGE_SAVE;
      0003B4 8F 84            [24] 2143 	mov	_SFRPAGE,r7
                           0003B6  2144 	C$main.c$224$1$45 ==.
                           0003B6  2145 	XG$UART0_INIT$0$0 ==.
      0003B6 22               [24] 2146 	ret
                                   2147 ;------------------------------------------------------------
                                   2148 ;Allocation info for local variables in function 'ADC_INIT'
                                   2149 ;------------------------------------------------------------
                                   2150 ;SFRPAGE_SAVE              Allocated to registers r7 
                                   2151 ;------------------------------------------------------------
                           0003B7  2152 	G$ADC_INIT$0$0 ==.
                           0003B7  2153 	C$main.c$226$1$45 ==.
                                   2154 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:226: void ADC_INIT(void){
                                   2155 ;	-----------------------------------------
                                   2156 ;	 function ADC_INIT
                                   2157 ;	-----------------------------------------
      0003B7                       2158 _ADC_INIT:
                           0003B7  2159 	C$main.c$230$1$47 ==.
                                   2160 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:230: SFRPAGE_SAVE = SFRPAGE;
      0003B7 AF 84            [24] 2161 	mov	r7,_SFRPAGE
                           0003B9  2162 	C$main.c$232$1$47 ==.
                                   2163 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:232: SFRPAGE = ADC0_PAGE;
      0003B9 75 84 00         [24] 2164 	mov	_SFRPAGE,#0x00
                           0003BC  2165 	C$main.c$235$1$47 ==.
                                   2166 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:235: REF0CN |= 0x03;
      0003BC 43 D1 03         [24] 2167 	orl	_REF0CN,#0x03
                           0003BF  2168 	C$main.c$236$1$47 ==.
                                   2169 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:236: REF0CN &= 0xEF;
      0003BF 53 D1 EF         [24] 2170 	anl	_REF0CN,#0xEF
                           0003C2  2171 	C$main.c$239$1$47 ==.
                                   2172 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:239: AMX0CF &= 0xFE;
      0003C2 53 BA FE         [24] 2173 	anl	_AMX0CF,#0xFE
                           0003C5  2174 	C$main.c$240$1$47 ==.
                                   2175 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:240: AMX0SL &= 0xF0;
      0003C5 53 BB F0         [24] 2176 	anl	_AMX0SL,#0xF0
                           0003C8  2177 	C$main.c$243$1$47 ==.
                                   2178 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:243: AD0EN   = 1;
      0003C8 D2 EF            [12] 2179 	setb	_AD0EN
                           0003CA  2180 	C$main.c$244$1$47 ==.
                                   2181 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:244: ADC0CN &= 0xF2;
      0003CA 53 E8 F2         [24] 2182 	anl	_ADC0CN,#0xF2
                           0003CD  2183 	C$main.c$247$1$47 ==.
                                   2184 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:247: AD0INT  = 0;
      0003CD C2 ED            [12] 2185 	clr	_AD0INT
                           0003CF  2186 	C$main.c$249$1$47 ==.
                                   2187 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:249: ADC0L = ADC0H = 0;
      0003CF 75 BF 00         [24] 2188 	mov	_ADC0H,#0x00
      0003D2 75 BE 00         [24] 2189 	mov	_ADC0L,#0x00
                           0003D5  2190 	C$main.c$251$1$47 ==.
                                   2191 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:251: EIE2 |= 2;
      0003D5 43 E7 02         [24] 2192 	orl	_EIE2,#0x02
                           0003D8  2193 	C$main.c$253$1$47 ==.
                                   2194 ;	C:\Users\me\Dropbox\Microprocessor Systems\Lab 4\main.c:253: SFRPAGE = SFRPAGE_SAVE;
      0003D8 8F 84            [24] 2195 	mov	_SFRPAGE,r7
                           0003DA  2196 	C$main.c$254$1$47 ==.
                           0003DA  2197 	XG$ADC_INIT$0$0 ==.
      0003DA 22               [24] 2198 	ret
                                   2199 	.area CSEG    (CODE)
                                   2200 	.area CONST   (CODE)
                           000000  2201 Fmain$__str_0$0$0 == .
      000000                       2202 ___str_0:
      000000 1B                    2203 	.db 0x1B
      000001 5B 32 4A              2204 	.ascii "[2J"
      000004 1B                    2205 	.db 0x1B
      000005 5B 72                 2206 	.ascii "[r"
      000007 00                    2207 	.db 0x00
                           000008  2208 Fmain$__str_1$0$0 == .
      000008                       2209 ___str_1:
      000008 48 61 6C 6C 6F 20 56  2210 	.ascii "Hallo Vietnaaaam"
             69 65 74 6E 61 61 61
             61 6D
      000018 0A                    2211 	.db 0x0A
      000019 0D                    2212 	.db 0x0D
      00001A 00                    2213 	.db 0x00
                           00001B  2214 Fmain$__str_2$0$0 == .
      00001B                       2215 ___str_2:
      00001B 1B                    2216 	.db 0x1B
      00001C 5B 32 4A              2217 	.ascii "[2J"
      00001F 00                    2218 	.db 0x00
                           000020  2219 Fmain$__str_3$0$0 == .
      000020                       2220 ___str_3:
      000020 4C 6F 77 20 62 79 74  2221 	.ascii "Low byte:  0x%x"
             65 3A 20 20 30 78 25
             78
      00002F 0A                    2222 	.db 0x0A
      000030 0D                    2223 	.db 0x0D
      000031 00                    2224 	.db 0x00
                           000032  2225 Fmain$__str_4$0$0 == .
      000032                       2226 ___str_4:
      000032 48 69 67 68 20 62 79  2227 	.ascii "High byte: 0x%x"
             74 65 3A 20 30 78 25
             78
      000041 0A                    2228 	.db 0x0A
      000042 0D                    2229 	.db 0x0D
      000043 00                    2230 	.db 0x00
                           000044  2231 Fmain$__str_5$0$0 == .
      000044                       2232 ___str_5:
      000044 41 76 65 72 61 67 65  2233 	.ascii "Average:   0x%x"
             3A 20 20 20 30 78 25
             78
      000053 0A                    2234 	.db 0x0A
      000054 0D                    2235 	.db 0x0D
      000055 00                    2236 	.db 0x00
                           000056  2237 Fmain$__str_6$0$0 == .
      000056                       2238 ___str_6:
      000056 56 6F 6C 74 61 67 65  2239 	.ascii "Voltage:   %d."
             3A 20 20 20 25 64 2E
      000064 00                    2240 	.db 0x00
                           000065  2241 Fmain$__str_7$0$0 == .
      000065                       2242 ___str_7:
      000065 25 64                 2243 	.ascii "%d"
      000067 00                    2244 	.db 0x00
                                   2245 	.area XINIT   (CODE)
                                   2246 	.area CABS    (ABS,CODE)
